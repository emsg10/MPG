{"version":3,"sources":["webpack:///app.15ad03206fd586b79ae8.js","webpack:///./src/main.ts","webpack:///./src/app/game/loader.ts","webpack:///./src/app/game/service/assetsLoader.ts","webpack:///./src/app/game/service/loadHelper.ts","webpack:///./src/app/game/model/index.ts","webpack:///./src/app/game/model/shaderType.ts","webpack:///./src/app/game/model/tile.ts","webpack:///./src/app/game/model/vector.ts","webpack:///./src/app/game/model/rectangle.ts","webpack:///./src/app/game/model/sprite.ts","webpack:///./src/app/game/model/level.ts","webpack:///./src/app/game/model/assets.ts","webpack:///./src/app/game/model/animation/projectile.ts","webpack:///./src/app/game/model/animation/animation.ts","webpack:///./src/app/game/render/index.ts","webpack:///./src/app/game/render/renderer.ts","webpack:///./src/app/game/render/renderCall.ts","webpack:///./src/app/game/render/colorRenderCall.ts","webpack:///./src/app/game/render/colorRenderer.ts","webpack:///./src/app/game/render/renderHelper.ts","webpack:///./src/app/game/render/textureMapper.ts","webpack:///./src/app/game/render/matrix3.ts","webpack:///./src/app/game/render/dynamicRenderCall.ts","webpack:///./src/app/game/render/particleRenderer.ts","webpack:///./src/app/game/collision/collisionDetection.ts","webpack:///./src/app/game/collision/index.ts","webpack:///./src/app/game/collision/collisionData.ts","webpack:///./src/app/game/collision/grid.ts","webpack:///./src/app/game/model/animation/frameAnimation.ts","webpack:///./src/app/game/model/enum/spellType.ts","webpack:///./src/app/game/model/animation/spell.ts","webpack:///./src/app/game/model/animation/physicalProjectile.ts","webpack:///./src/app/game/forces/gravity.ts","webpack:///./src/app/game/forces/drag.ts","webpack:///./src/app/game/model/animation/meele.ts","webpack:///./src/app/game/model/debug.ts","webpack:///./src/app/game/model/enum/textureType.ts","webpack:///./src/app/game/model/animation/stickyAnimation.ts","webpack:///./src/app/game/model/animation/rotationAnimation.ts","webpack:///./src/app/game/model/animation/staticRotationAnimation.ts","webpack:///./src/app/game/model/animation/collisionProjectile.ts","webpack:///./src/app/game/model/animation/projectileType.ts","webpack:///./src/app/game/model/casts/cast.ts","webpack:///./src/app/game/model/casts/instantCast.ts","webpack:///./src/app/game/model/casts/channelCast.ts","webpack:///./src/app/game/model/casts/spellCast.ts","webpack:///./src/app/game/model/animation/particleProjectile.ts","webpack:///./src/app/game/model/dynamicTile.ts","webpack:///./src/app/game/service/constants.ts","webpack:///./src/app/game/map/model/index.ts","webpack:///./src/app/game/map/model/enemyData.ts","webpack:///./src/app/game/map/model/levelData.ts","webpack:///./src/app/game/map/model/enemyType.ts","webpack:///./src/app/game/map/model/texture-resource.ts","webpack:///./src/app/game/map/model/tile-asset.ts","webpack:///./src/app/game/model/dynamicTileData.ts","webpack:///./src/app/game/model/renderable-data.ts","webpack:///./src/app/game/model/progress.ts","webpack:///./src/app/game/character/index.ts","webpack:///./src/app/game/character/enemy.ts","webpack:///./src/app/game/character/character.ts","webpack:///./src/app/game/character/deathType.ts","webpack:///./src/app/game/character/swordman.ts","webpack:///./src/app/game/character/state.ts","webpack:///./src/app/game/character/archer.ts","webpack:///./src/app/game/handler/debugHandler.ts","webpack:///./src/app/game/character/player.ts","webpack:///./src/app/game/handler/spellHandler.ts","webpack:///./src/app/game/character/shadow.ts","webpack:///./src/app/game/character/apprentice.ts","webpack:///./src/app/game/character/screamer.ts","webpack:///./src/app/game/character/masterSorcerer.ts","webpack:///./src/app/game/character/shapeshifter.ts","webpack:///./src/app/game/game.ts","webpack:///./src/app/game/index.ts","webpack:///./src/app/game/context.ts","webpack:///./src/app/game/tileMap.ts","webpack:///./src/app/game/text/textRenderer.ts","webpack:///./src/app/game/handler/animationHandler.ts","webpack:///./src/app/game/handler/projectileHandler.ts","webpack:///./src/app/game/handler/dynamicTileHandler.ts","webpack:///./src/app/game/handler/particleHandler.ts","webpack:///./src/app/game/particle/particle.ts","webpack:///./src/app/game/render/simpleParticleRenderCall.ts","webpack:///./src/app/game/render/simpleParticleRenderer.ts","webpack:///./src/app/game/handler/enemyHandler.ts","webpack:///./src/app/game/camera.ts","webpack:///./src/app/game/render/dynamicRenderer.ts","webpack:///./src/app/game/UI/ui.ts","webpack:///./src/app/game/UI/bar.ts","webpack:///./src/app/game/UI/sceneHandler.ts","webpack:///./src/app/game/UI/sceneIndex.ts","webpack:///./src/app/game/UI/menu.ts","webpack:///./src/app/game/UI/scene.ts","webpack:///./src/app/game/service/localStorageHelper.ts","webpack:///./src/app/game/UI/clickable.ts","webpack:///./src/app/game/UI/powerSelector.ts","webpack:///./src/app/game/UI/active.ts","webpack:///./src/app/game/UI/powerSelectionMenu.ts","webpack:///./src/app/game/UI/simpleClickable.ts","webpack:///./src/app/game/UI/newGameMenu.ts","webpack:///./src/app/game/UI/restartMenu.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","loader_1","Loader","initialize","assetsLoader_1","rxjs_1","model_1","game_1","loadHelper_1","_this","this","loadHelper","LoadHelper","getInstance","asset","Asset","assetsLoader","AssetsLoader","Observable","forkJoin","getShader","getTexture","getTileTextures","getUiTextures","getLevel","subscribe","data","vertexShader","fragmentShader","simpleParticleVertexShader","simpleParticleFragmentShader","dynamicVertexShader","dynamicFragmentShader","colorVertexShader","colorFragmentShader","texture","particleTexture","genericParticleTexture","tileAssets","addToTileAssets","level","canvas","document","getElementById","game","Game","prototype","newTileAssets","forEach","value","key","set","constants_1","_1","shaderUrl","textureUrl","levelUrl","constants","Constants","fileName","httpGet","catch","handleError","create","observer","Image","src","onload","next","complete","map","extractLevel","url","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","onerror","error","open","send","name","getTextures","tileResources","uiResources","textureResources","obs","textures","Map","count","_loop_1","textureResource","split","TileAsset","size","length","_i","textureResources_1","body","JSON","parse","validateLevelData","e","console","log","errMsg","message","toString","throw","character_1","shapeshifter_1","constrcuctor","instance","Error","levelDataToLevel","levelData","projectileHandler","animationHandler","particleHandler","Level","end","Rectangle","player","gameSize","camera","tiles","it","Tile","area","x","y","width","height","decorativeTiles","background","unshift","dynamicTiles","velocity","vertical","inverse","Vector","DynamicTile","tile","distance","sort","a","b","enemies","enemy","Swordman","Archer","Shadow","MasterSorcerer","Apprentice","Screamer","ShapeShifter","valid","checkDoubleNumberTouple","checkPropertyExists","property","isNumber","number","isNaN","undefined","shaderType_1","ShaderType","tile_1","vector_1","rectangle_1","sprite_1","Sprite","level_1","assets_1","projectile_1","Projectile","animation_1","Animation","frameAnimation_1","FrameAnimation","spellType_1","SpellType","spell_1","Spell","physicalProjectile_1","PhysicalProjectile","meele_1","Meele","debug_1","DebugElement","textureType_1","TextureType","stickyAnimation_1","StickyAnimation","rotationAnimation_1","RotationAnimation","staticRotationAnimation_1","StaticRotationAnimation","collisionProjectile_1","CollisionProjectile","projectileType_1","ProjectileType","cast_1","Cast","instantCast_1","InstantCast","channelCast_1","ChannelCast","spellCast_1","SpellCast","particleProjectile_1","ParticleProjectile","dynamicTile_1","dynamicTileData_1","DynamicTileData","renderable_data_1","RenderableData","progress_1","Progress","add","vector","copy","normalize","mag","magnitude","Math","sqrt","multiply","factor","invert","position","animation","collisionRatio","collisionArea","projectileType","None","damage","update","travelDistanceX","travelDistanceY","delta","areaToRender","updateForces","render_1","textureNumbers","timeToChange","delay","frameIndex","lastChange","textureCoords","textureNumbers_1","textureNumber","push","RenderHelper","getTextureCoordinates","repetitions","getCurrentFrame","reset","renderer_1","Renderer","renderCall_1","RenderCall","colorRenderCall_1","ColorRenderCall","colorRenderer_1","ColorRenderer","renderHelper_1","dynamicRenderCall_1","DynamicRenderCall","textureMapper_1","TextureMapper","particleRenderer_1","ParticleRenderer","matrix3_1","Matrix3","context","gl","shaderProgram","useProgram","bindAttribLocation","positionLocation","getAttribLocation","textureCoordAttribute","resolutionLocation","getUniformLocation","cameraLocation","resolution","vertexBuffer","createBuffer","textureCoordBuffer","indeciesBuffer","render","renderCalls","renderCall","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","vertecies","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","indecies","vertexAttribPointer","FLOAT","uniform2f","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","tileTextures","get","glTexture","drawElements","TRIANGLES","UNSIGNED_SHORT","disableVertexAttribArray","color","colorShaderProgram","colorAttributeLocation","colorBuffer","renderCalls_1","textureMapper","canvasWidth","canvasHeight","projectionMatrix","createProjectionMatrix","getRelativeValue","relativePosition","getVertecies","currentVertecies","x1","x2","y1","y2","newVertecies","apply","getInverseVertecies","getColor","currentColors","col","getMatrices","angle","currentMatrices","rotationPointX","rotationPointY","moveToRotationPointMatrix","createTranslationMatrix","rotationMatrix","createRotationMatrix","moveBackMatrix","matrix","getIndeciesAttribute","attribute","slice","i","getIndecies","currentIndecies","vertexIndices","addTextureCoordinates","currentTextureCoordinates","textureType","rect","mapTexture","textureCoordinates","getCoords","textureSize","getTiledTextureCoordinates","getMainTextureCoords","texture0","texture1","texture2","texture3","texture4","texture5","texture6","texture7","texture8","texture9","texture10","texture11","texture12","texture13","texture14","texture15","texture16","texture17","texture18","texture19","texture20","texture21","texture22","texture23","texture24","texture25","texture26","texture50","texture51","texture52","texture53","texture54","texture55","texture56","texture57","texture58","texture59","texture60","texture61","texture62","texture63","texture100","texture101","texture102","texture103","texture104","texture105","texture106","texture107","texture108","texture109","texture110","texture111","texture112","texture113","texture114","texture115","texture116","texture117","texture118","texture119","texture120","texture121","texture122","texture123","texture124","texture125","texture126","texture127","texture128","texture129","texture130","texture131","texture132","texture133","texture134","texture135","texture136","texture137","texture138","texture139","texture140","texture141","texture142","texture143","texture144","texture145","texture146","texture147","texture148","texture149","texture150","texture151","texture152","texture153","texture154","texture155","texture156","texture157","texture158","texture159","texture160","texture161","texture162","texture163","texture165","texture166","texture167","texture168","texture169","texture170","texture171","texture172","texture173","texture174","texture175","texture176","texture177","texture178","texture179","texture180","texture181","texture182","texture183","texture184","texture185","texture186","texture187","texture188","texture189","texture190","texture191","texture192","texture193","texture194","texture195","texture196","texture197","texture198","texture199","texture200","texture201","texture202","texture203","texture204","texture205","texture206","texture207","texture208","texture209","texture210","texture211","texture212","texture214","texture215","texture216","texture217","texture218","texture219","texture220","texture221","texture222","texture223","texture224","texture225","texture226","texture227","texture228","texture229","texture230","texture231","texture232","texture233","texture234","texture235","texture236","texture237","texture238","texture239","texture240","texture241","texture242","texture243","texture244","texture245","texture246","texture247","texture248","texture249","texture250","texture251","texture252","texture253","texture254","texture255","texture256","texture257","texture262","texture263","texture264","texture265","texture266","texture267","texture268","texture269","texture270","texture271","texture272","texture273","texture274","texture275","texture276","texture277","texture278","texture279","texture280","texture281","texture282","texture283","texture284","texture285","texture286","texture287","texture288","texture289","texture290","texture291","texture292","texture293","texture294","texture295","texture296","texture297","texture298","texture299","texture300","texture301","texture302","texture303","texture304","texture305","texture306","texture500","texture550","texture551","texture552","texture553","texture554","texture555","texture556","texture557","texture558","texture560","texture561","texture562","texture563","texture564","texture565","texture566","texture567","texture568","texture569","texture570","texture571","texture572","texture573","texture574","texture575","texture576","texture577","texture578","texture579","texture580","texture581","texture582","texture583","texture584","texture585","texture586","texture587","texture588","texture589","texture590","texture591","texture592","texture593","texture594","texture595","texture596","texture597","texture598","texture600","texture601","texture602","texture603","texture604","texture605","texture606","texture607","createIdentityMatrix","tx","ty","angleInRadians","c","cos","s","sin","createScaleMatrix","sx","sy","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","positionConvertion","matrices","collisionDetection_1","collisionDetection","CollisionDetection","relativeTimeAttribute","lifeTimeAttribute","startPositionLocation","endPositionLocation","colorLocation","pointEndPositionsBuffer","pointStartPositionsBuffer","pointLifetimesBuffer","pointRelativeTimeBuffer","call","relativeTime","itemSize","numItems","lifetimes","startPositions","endPositions","type","frostBlast","frostParticelTexture","uniform1i","uniform4f","drawArrays","POINTS","createGrid","collidables","grid","Grid","collidables_1","collidable","insert","character","frameVelocity","collisionData","checkCollision","fastCheckEnviroment","clear","possibleColls","possibleColls_1","aabbCheck","checkProjectileCollisionX","projectile","staticCollisions","checkClose","broadphasebox","getSweptBroadphaseBoxX","CollisionData","possibleColls_2","aabbCollisionX","_a","possibleColls_3","wallCollision","checkProjectileCollisionY","getSweptBroadphaseBoxY","possibleColls_4","aabbCollisionY","tilesToCheck","dynamicCollisionData","rect1","getCollisionArea","dynamicTiles_1","dynamicTile","deltaVelocity","checkDynamicTileY","possibleColls_5","groundCollision","velocityY","collisionTimeY","_b","dynamicTiles_2","checkDynamicTileX","_c","tilesToCheck_1","collisionTimeX","velocityX","remainingTime","getClosestX","closestX","possibleColls_6","tileVal","checkCoutOfBounds","dead","rect2","aabbCheckS","areas","areas_1","characterCollisionArea","lift","abs","yInvEntry","yInvExit","yEntry","yExit","Number","MAX_SAFE_INTEGER","entryTime","exitTime","normalY","fallDeath","xInvEntry","xInvExit","xEntry","xExit","normalX","collisionData_1","grid_1","canvasSize","gridSize","maxX","maxY","j","coords","getGridCoordinates","result","floor","xi","ceil","yi","__extends","d","__","constructor","p","hasOwnProperty","Object","_super","growthX","growthY","offsetX","offsetY","particleFunction","texturenumbers","lastFrameIndex","gravity_1","drag_1","gravityStrength","gravity","Gravity","dragStrength","drag","Drag","onGroundCollision","PI","extendedOnGroundCollision","strength","deltaDrag","offset","vec","atan2","done","cancel","onCast","currentAnimation","channelAnimation","lowerChannelAnimation","onChannel","onCancel","defaultValue","maxValue","growth","channeling","lowerCurrentAnimation","currentValue","resetValue","mainRepetion","hasCast","onUpdate","verticalAxis","maxDistance","renderHelper","initialDown","initialRight","tileSize","initialPosition","travelDistance","calculateVerticalMovement","calculateHorizontalMovement","turn","TextureResource","enemyData_1","EnemyData","levelData_1","LevelData","enemyType_1","EnemyType","texture_resource_1","tile_asset_1","image","active","enemy_1","Enemy","swordman_1","archer_1","Character","player_1","Player","shadow_1","state_1","State","apprentice_1","screamer_1","masterSorcerer_1","iEnemy_1","IEnemy","deathType_1","burnValue","direction","oldDirection","hitDamage","hp","freezeDamage","flameDamage","maxFreeze","freezeValue","burnDamage","cinderValue","burnDurationFactor","hitAreaOffset","minDistance","searchAreaOffset","trackingTime","trackingMaxTime","trackingSpeed","idleSpeed","hitting","currentState","Idle","takeDamage","deathType","DeathType","freezeDeath","fireBlast","fireDeath","swordDeath","burn","setFreezeSpeed","actualSpeed","maxSpeed","pow","freeze","toMove","nextToEdge","fall","leftEdge","rightEdge","freezePercent","updateColor","updateBurnDamage","idle","idleAnimation","inRange","IdleToTrackingTransition","idleToTrackingTransition","trackingToInRangeTransition","trackingToIdleTransition","patrol","moveLeft","moveRight","hit","hitAnimation","Tracking","moveToPlayer","npcAction","TrackingToIdleTransition","track","TrackingToInRangeTransition","InHitRange","checkStop","stop","gapSize","trackingAnimation","rand","min","max","random","getDeltaPosition","middlePosition","colorColl","acceleration","moving","hitCollisionAreas","hitOffset","setHitAnimation","checkHitCollisionAreas","createCollisionProjectile","meeleAnimation","createHit","swordscut_a","debugHandler_1","arrowVelocity","shoot","debugHandler","DebugHandler","calculatePath","bowPosition","createArrow","deltaPos","clearShoot","pathBlocks","getPathBlocks","pathBlocks_1","block","blocksize","blocks","newMagnitude","getDeltaVelocity","getVelocity","debugRects","createRenderCall","spellHandler_1","mana","progress","fireLevel","frostLevel","shieldLevel","defaultJumpSpeed","jumpSpeed","damageAnimations","stunned","liftVelocity","externalDragForce","dragForce","externalDrag","idleTime","idleTimeChange","jumping","inJump","manaRegen","externalVelocity","onGroundTimer","shieldTextureCoords","spellHandler","SpellHandler","lowerIdleAnimation","upperIdleAnimation","upperRunningAnimation","lowerRunningAnimation","stunnedAnimation","lowerJumpAnimation","upperJumpAnimation","lowerStillAnimation","upperStillAnimation","maxMana","lowerAnimation","upperAnimation","hardHit","stun","useMana","regenMana","isMoving","renderLower","castingShield","renderShield","shieldExplosion","createShieldExplosionEffect","getCalculatedPos","getShieldCollidables","shieldCollidables","createPlayerSword_death","currentCast","totalVelocity","updateDamageAnimations","getProjectileCollisionArea","calcPos","jump","cast","removeItems","stickyAnimation","removeItems_1","remove","index","indexOf","splice","break","refShieldCollidables","maxMagicValue","minMagicValue","createShieldCollidables","initCasts","channelMagicCast","createMagicEffect","createShieldEffect","updateBreak","spellType","fireball","castFireBall","electricbolt","castElectricBall","castFireBlast","castFrostBlast","shield","castShield","channelmagic","castChannelMagic","posx","posy","fireBallCast","fireBlastCast","frostBlastCast","fireblastAnimation","onFireCast","getOnCastFireBlast","frostBlastAnimation","onFrostCast","getOnCastFrostBlast","channelLowerAnimation","onChannelMagic","createChannelMagic","onCancelChannelMagic","castAnimation","onFireBallUpdate","createFireBall","onFireBallCast","createFireBlast","createFrostBlast","idleToTrackingAnimation","trackingToIdleTransitionAnimation","pos","projectileVelocity","onBlackFireUpdate","createNecroFireBall","createNecroBall","hitTimer","chargeTimer","positionMiddle","defaultChannelTime","shootDefaultCooldown","shootCooldown","channelTimer","shootsFired","maxShoots","channelHitTransitionAnimation","channel","createNecroChannelMagic","index_1","renderHalper","sorcererAnimation","rendercall","textRenderer_1","animationHandler_1","projectileHandler_1","dynamicTileHandler_1","particleHandler_1","simpleParticleRenderer_1","enemyHandler_1","camera_1","dynamicRenderer_1","ui_1","sceneHandler_1","localStorageHelper_1","sceneIndex_1","fps","collision","gameArea","levelCompleted","deathTimer","Context","renderer","sceneHandler","SceneHandler","colorRenderer","simpleParticleRenderer","SimpleParticleRenderer","dynamicRenderer","DynamicRenderer","initKeyBindings","initLoop","loadLevel","intevalTimer","setInterval","run","lastUpdate","Date","getTime","loops","skipTicks","maxFrameSkip","nextGameTick","started","enemyHandler","dynamicTileHandler","setCurrentLevel","currentScene","SceneIndex","RestartMenu","checkGoal","checkKeys","UI","dynamicRenderCall","colorRenderCall","colorRenderCalls","simpleRenderCalls","tileMap","createGoalRenderCall","textRenderer","createTextRenderCall","createDynamicRenderCall","createStaticRenderCall","createRenderCalls","collisionAreaEnd","leftKeyPress","rightKeyPress","jumpKeyPress","shieldPress","frostKeyPress","fireKeyPress","fireballKeyPress","channelMagicKeyPress","addEventListener","event","keyCode","LocalStorageHelper","getCurrentProgress","ParticleHandler","AnimationHandler","ProjectileHandler","getSpellLevel","defence","DynamicTileHandler","Camera","fire","frost","EnemyHandler","TileMap","TextRenderer","spellPoints","context_1","tileMap_1","initContext","initShaders","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","clearColor","getContext","compileShader","Vertex","Fragment","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","dynamicVertecyProgram","simpleParticleProgram","initAssetTextures","initTextures","initBaseTextures","textureMap","tileAsset","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","generateMipmap","LINEAR","CLAMP_TO_EDGE","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","source","shaderType","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","decorativeRenderCalls","decorativeTileMap","createStaticRenderCalls","tiles_1","tiles_2","goal","createDecorativeRenderCall","sizeX","sizeY","animations","dynamicAnimations","staticAnimations","bloodAnimation_A","bloodAnimation_B_Right","bloodAnimation_B_Left","voidAnimation","bloodAnimation_C","swordman_death","onCompletion","swordman_corpse","createArcherDeath","archer_death","archer_corpse","player_sword_death_corpse","player_sword_death_animation","apprentice_Death","apprentice_corpse","masterSorcerer_death","masterSorcerer_corpse","screamer_Death","screamer_corpse","shadow_Death","shadow_corpse","swordman_head","fireball_destroy","necroball_explosion","createNecroballExplosion","fireball_explosion","createFireballExplosion","createDebugAnimation","fireDeathSwordman","createFireDeath","fireDeathArcher","createDeadArrow","collAngle","createArrowHit","useCollisionArea","frozenSwordMan","frozenArcher","frozenPart","partIndex","baseTextureNumber","completedAnimations","totalAnimations","concat","totalAnimations_1","completedAnimations_1","completedAnimation","projectiles","enemyProjectiles","debuggHandler","arrow","collRect","rectangle","Arrow","necroBall","NecroBall","velocityValue","fireBall","createFireballRank1","collisionProjectile","Sword","createSwordman_death","currentFrame","projectileCorpse","createShadow_death","createMasterSorcerer_death","createScreamer_death","createApprentice_death","createFrozenSwordManDeath","onComplete","velocotyies","collisionAreas","createFrozenPart","createFrozenArcherDeath","removeProjectile","removeEnemyProjectile","updateFriendslyProjectiles","updateEnemyProjectiles","removeProjectile_1","destroyProjectile","removeEnemyProjectile_1","destroyAnimation","calculateDirection","removeProjectiles","playerCollisionArea","updateAndCollCheckEnemyProjectile","checkStaticObjectCollisions","shieldCollisionData","setShieldDamage","setDamageAnimation","createStickyArrowAnimation","setStaticObjectAnimation","animationOffset","updateAndCollCheck","drainShield","amount","extra","baseNumber","particle_1","simpleParticleRenderCall_1","frostParticles","frostEffectParticles","fireParticles","fireEffectParticles","necroEffectParticles","shieldEffectParticles","noGravity","fireColor","frostColor","frostEffectColor","shieldColor","necroColor","flameParticleSettings","largeFlameParticleSettings","flameEffectSettings","channelMagicEffectSettings","fireExplosionSettings","magicEffectSettings","frostParticleSettings","largefrostParticleSettings","frostEffectParticleSettings","burnEffectSettings","shieldEffectSettings","invertedShieldEffectSettings","shieldExplosionEffectSettings","invertedShieldExplosionEffectSettings","settings","effectParticles","createCircleParticles","createCenterCircleParticles","fireballExplosion","radius","particleSize","positionOffset","offSetX","offSetY","createParticles","particles","createBurn","positionCopy","updateEffectParticles","updateParticles","fireRenderCall","SimpleParticleRenderCall","allFireParticles","frostRenderCall","frostEffectRenderCall","frostTexture","shieldEffectRenderCall","blackFireRenderCall","addParticles","settingFactor","particles_1","particle","pointSize","itemCount","particleCollection","removeCollection","particleCollection_1","updateParticle","collisionSize","lifeTime","removeParticles","spelltype","particleCollection_2","collisionRectangle","enemies_1","removeCollection_1","particleNumber","newParticles","deltaX","collTime","Particle","radiusX","radiusY","inward","centerOffsetValue","centerSize","centerLifeTime","centerGrowth","centerOffSetX","centerOffSetY","centerParticle","offSet","sizeAttributeLocation","colorUniformLocation","pointSizeBuffer","enemyCollisionCheck","checkBurn","checkEnemyDeath","collarea","removeEnemy","velocityDelta","_d","removeEnemy_1","sceneSize","cameraOffset","maxXCameraPosition","maxYCameraPosition","focusPosition","matrixAttributeLocation","matricesBuffer","bar_1","maxHp","bars","hpBar","ProgressBar","manaBar","hudTextureCoords","bar","Bar","hpFactor","maxWidth","textureArea","maxTextureWidth","manaFactor","menu_1","clickable_1","powerSelector_1","active_1","powerSelectionMenu_1","newGameMenu_1","restartMenu_1","StartMenu","lastCurrentScene","scenes","mousePosition","click","clicked","importClicked","playerlist","textInput","textArea","fileUploadButton","fileUploadButtonHighlight","uploadInput","modal","localStorageHelper","assetLoader","startMenu","Menu","createNewGameButton","createContinueButton","createLoadButton","load","loadMenu","createToStartMenuBack","LoadMenu","loadLevelSelectionScreen","loadLevelFinishedScreen","loadNewGameMenu","loadRestartMenu","createEventListerners","style","visibility","mouseOver","createMouseRenderCall","scene","currentLevel","levelFinishedScene","PowerSelectionMenu","createNextLevelButton","newPowerSelector","LevelFinished","restartMenu","newGameMenu","NewGameMenu","createToPowerSelectorMenuButton","assets","active1","Active","active2","active3","PowerSelector","levelSelectionMenu","createLevelMenuButtons","createToStartMenuBackFromLevelMenu","LevelSelection","window","relativeElement","getBoundingClientRect","clientX","left","clientY","top","fileReader","FileReader","evt","target","leveldata","tempLevel","display","innerHTML","readAsText","files","setCurrentProgress","onClick","Clickable","disabled","clickable","completedLevels","clickables","collumns","createLevelButton","buttonTexture","scene_1","text","menu","getProgression","t","Scene","createBackGround","createMenu","progressionKey","newPlayer","progression","progression_1","saveProgress","playerName","setPowers","getItem","defaultProgress","find","prg","setItem","setActive","progression_2","localStorage","stringify","hoverTexture","textTexture","disabledTexture","hover","baseTextureCoords","hoverTextureCoords","textTextureCoords","disabledTextureCoords","mouseposition","isWithinArea","actives","getPoints","fill","points","addPoint","activeAsset","addRenderCall","partial","has","simpleClickable_1","powerSelectors","powerSelector","simpleClickables","simpleClickable","getAvailablePoints","onHpClick","hpClickable","SimpleClickable","onManaClick","manaClickable","textureKey","checkProgressionExists","reDrawPlayerList","firstChild","removeChild","children","item","createElement","setProperty","textShadow","padding","onclick","this_1","appendChild","getClickCall"],"mappings":"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","file":"app.15ad03206fd586b79ae8.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar loader_1 = __webpack_require__(1);\r\n\t(function () {\r\n\t    new loader_1.Loader().initialize();\r\n\t})();\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assetsLoader_1 = __webpack_require__(2);\r\n\tvar rxjs_1 = __webpack_require__(3);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar game_1 = __webpack_require__(417);\r\n\tvar loadHelper_1 = __webpack_require__(346);\r\n\tvar Loader = (function () {\r\n\t    function Loader() {\r\n\t        var _this = this;\r\n\t        this.loadHelper = loadHelper_1.LoadHelper.getInstance();\r\n\t        this.asset = new model_1.Asset();\r\n\t        this.assetsLoader = new assetsLoader_1.AssetsLoader();\r\n\t        rxjs_1.Observable.forkJoin(this.assetsLoader.getShader(\"vertexShader.c\"), this.assetsLoader.getShader(\"fragmentShader.c\"), this.assetsLoader.getShader(\"simpleParticleVertexShader.c\"), this.assetsLoader.getShader(\"simpleParticleFragmentShader.c\"), this.assetsLoader.getShader(\"dynamicVertexShader.c\"), this.assetsLoader.getShader(\"dynamicFragmentShader.c\"), this.assetsLoader.getShader(\"colorVertexShader.c\"), this.assetsLoader.getShader(\"colorFragmentShader.c\"), this.assetsLoader.getTexture(\"tiles.png\"), this.assetsLoader.getTexture(\"particleSprites.png\"), this.assetsLoader.getTexture(\"genericParticle.png\"), this.assetsLoader.getTileTextures(\"tile\"), this.assetsLoader.getUiTextures(\"ui\"), this.assetsLoader.getLevel(\"0\")).subscribe(function (data) {\r\n\t            _this.asset.vertexShader = data[0];\r\n\t            _this.asset.fragmentShader = data[1];\r\n\t            _this.asset.simpleParticleVertexShader = data[2];\r\n\t            _this.asset.simpleParticleFragmentShader = data[3];\r\n\t            _this.asset.dynamicVertexShader = data[4];\r\n\t            _this.asset.dynamicFragmentShader = data[5];\r\n\t            _this.asset.colorVertexShader = data[6];\r\n\t            _this.asset.colorFragmentShader = data[7];\r\n\t            _this.asset.texture = data[8];\r\n\t            _this.asset.particleTexture = data[9];\r\n\t            _this.asset.genericParticleTexture = data[10];\r\n\t            _this.asset.tileAssets = data[11];\r\n\t            _this.asset.tileAssets = _this.addToTileAssets(_this.asset.tileAssets, data[12]);\r\n\t            _this.level = data[13];\r\n\t            _this.canvas = document.getElementById(\"gameCanvas\");\r\n\t            _this.game = new game_1.Game(_this.asset, _this.canvas, _this.level);\r\n\t        });\r\n\t    }\r\n\t    Loader.prototype.addToTileAssets = function (tileAssets, newTileAssets) {\r\n\t        newTileAssets.forEach(function (value, key) {\r\n\t            tileAssets.set(key, value);\r\n\t        });\r\n\t        return tileAssets;\r\n\t    };\r\n\t    Loader.prototype.initialize = function () {\r\n\t    };\r\n\t    return Loader;\r\n\t}());\r\n\texports.Loader = Loader;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar rxjs_1 = __webpack_require__(3);\r\n\tvar loadHelper_1 = __webpack_require__(346);\r\n\tvar constants_1 = __webpack_require__(391);\r\n\tvar _1 = __webpack_require__(392);\r\n\tvar AssetsLoader = (function () {\r\n\t    function AssetsLoader() {\r\n\t        this.shaderUrl = 'src/assets/shader/';\r\n\t        this.textureUrl = \"src/assets/texture/\";\r\n\t        this.levelUrl = \"src/assets/maps/\";\r\n\t        this.constants = constants_1.Constants.getInstance();\r\n\t    }\r\n\t    AssetsLoader.prototype.getShader = function (fileName) {\r\n\t        return this.httpGet(this.shaderUrl + fileName)\r\n\t            .catch(this.handleError);\r\n\t    };\r\n\t    AssetsLoader.prototype.getTexture = function (fileName) {\r\n\t        var _this = this;\r\n\t        return rxjs_1.Observable.create(function (observer) {\r\n\t            var texture = new Image();\r\n\t            texture.src = _this.textureUrl + fileName;\r\n\t            texture.onload = function () {\r\n\t                observer.next(texture);\r\n\t                observer.complete();\r\n\t            };\r\n\t        });\r\n\t    };\r\n\t    AssetsLoader.prototype.getLevel = function (level) {\r\n\t        return this.httpGet(this.levelUrl + level + \".json\")\r\n\t            .map(this.extractLevel)\r\n\t            .catch(this.handleError);\r\n\t    };\r\n\t    AssetsLoader.prototype.httpGet = function (url) {\r\n\t        return rxjs_1.Observable.create(function (observer) {\r\n\t            var xmlHttp = new XMLHttpRequest();\r\n\t            xmlHttp.onreadystatechange = function () {\r\n\t                if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {\r\n\t                    observer.next(xmlHttp.responseText);\r\n\t                    observer.complete();\r\n\t                }\r\n\t                ;\r\n\t            };\r\n\t            xmlHttp.onerror = function () {\r\n\t                observer.error(xmlHttp.responseText);\r\n\t            };\r\n\t            xmlHttp.open(\"GET\", url, true);\r\n\t            xmlHttp.send(null);\r\n\t        });\r\n\t    };\r\n\t    AssetsLoader.prototype.getTileTextures = function (name) {\r\n\t        return this.getTextures(name, this.constants.tileResources);\r\n\t    };\r\n\t    AssetsLoader.prototype.getUiTextures = function (name) {\r\n\t        return this.getTextures(name, this.constants.uiResources);\r\n\t    };\r\n\t    AssetsLoader.prototype.getTextures = function (name, textureResources) {\r\n\t        var _this = this;\r\n\t        return rxjs_1.Observable.create(function (obs) {\r\n\t            var textures = new Map();\r\n\t            var count = 0;\r\n\t            var _loop_1 = function(textureResource) {\r\n\t                var texture = new Image();\r\n\t                texture.src = _this.textureUrl + textureResource.name;\r\n\t                texture.onload = function () {\r\n\t                    count++;\r\n\t                    var key = +textureResource.name.split(name)[0];\r\n\t                    textures.set(key, new _1.TileAsset(key, texture, textureResource.size));\r\n\t                    if (count >= textureResources.length) {\r\n\t                        obs.next(textures);\r\n\t                        obs.complete();\r\n\t                    }\r\n\t                };\r\n\t            };\r\n\t            for (var _i = 0, textureResources_1 = textureResources; _i < textureResources_1.length; _i++) {\r\n\t                var textureResource = textureResources_1[_i];\r\n\t                _loop_1(textureResource);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    AssetsLoader.prototype.extractLevel = function (responseText) {\r\n\t        var loadHelper = loadHelper_1.LoadHelper.getInstance();\r\n\t        var body = JSON.parse(responseText);\r\n\t        try {\r\n\t            var valid = loadHelper.validateLevelData(body);\r\n\t        }\r\n\t        catch (e) {\r\n\t            console.log(\"Invalid level: \" + e);\r\n\t        }\r\n\t        return body;\r\n\t    };\r\n\t    AssetsLoader.prototype.handleError = function (error) {\r\n\t        var errMsg;\r\n\t        errMsg = error.message ? error.message : error.toString();\r\n\t        console.error(errMsg);\r\n\t        return rxjs_1.Observable.throw(errMsg);\r\n\t    };\r\n\t    return AssetsLoader;\r\n\t}());\r\n\texports.AssetsLoader = AssetsLoader;\r\n\n\n/***/ }),\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */,\n/* 197 */,\n/* 198 */,\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */,\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */,\n/* 229 */,\n/* 230 */,\n/* 231 */,\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */,\n/* 240 */,\n/* 241 */,\n/* 242 */,\n/* 243 */,\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar character_1 = __webpack_require__(401);\r\n\tvar shapeshifter_1 = __webpack_require__(416);\r\n\tvar LoadHelper = (function () {\r\n\t    function LoadHelper() {\r\n\t    }\r\n\t    LoadHelper.prototype.constrcuctor = function () {\r\n\t        if (LoadHelper.instance) {\r\n\t            throw new Error(\"Static class cant be instanced!\");\r\n\t        }\r\n\t        LoadHelper.instance = this;\r\n\t    };\r\n\t    LoadHelper.getInstance = function () {\r\n\t        return LoadHelper.instance;\r\n\t    };\r\n\t    LoadHelper.prototype.levelDataToLevel = function (levelData, projectileHandler, animationHandler, particleHandler) {\r\n\t        var level = new model_1.Level();\r\n\t        level.name = levelData.name;\r\n\t        level.end = new model_1.Rectangle(levelData.end[0], levelData.end[1], 256, 128);\r\n\t        level.player = [levelData.player[0], levelData.player[1]];\r\n\t        level.gameSize = [levelData.gameSize[0], levelData.gameSize[1]];\r\n\t        level.camera = [levelData.camera[0], levelData.camera[1]];\r\n\t        level.tiles = levelData.tiles.map(function (it) { return new model_1.Tile(it.area.x, it.area.y, it.area.width, it.area.height, it.key); });\r\n\t        level.decorativeTiles = levelData.decorativeTiles.map(function (it) { return new model_1.Tile(it.area.x, it.area.y, it.area.width, it.area.height, it.key); });\r\n\t        if (levelData.background) {\r\n\t            var background = levelData.background;\r\n\t            level.decorativeTiles.unshift(new model_1.Tile(background.area.x, background.area.y, background.area.width, background.area.height, background.key));\r\n\t        }\r\n\t        level.dynamicTiles = levelData.dynamicTiles.map(function (it) {\r\n\t            var velocity;\r\n\t            if (it.vertical) {\r\n\t                if (it.inverse) {\r\n\t                    velocity = new model_1.Vector(0, -it.velocity);\r\n\t                }\r\n\t                else {\r\n\t                    velocity = new model_1.Vector(0, it.velocity);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (it.inverse) {\r\n\t                    velocity = new model_1.Vector(-it.velocity, 0);\r\n\t                }\r\n\t                else {\r\n\t                    velocity = new model_1.Vector(it.velocity, 0);\r\n\t                }\r\n\t            }\r\n\t            return new model_1.DynamicTile(new model_1.Tile(it.tile.x, it.tile.y, it.tile.width, it.tile.height, it.key), velocity, it.vertical, it.distance);\r\n\t        });\r\n\t        level.dynamicTiles.sort(function (a, b) {\r\n\t            return a.tile.key - b.tile.key;\r\n\t        });\r\n\t        level.enemies = levelData.enemies.map(function (it) {\r\n\t            var enemy;\r\n\t            if (it.key == 50) {\r\n\t                enemy = new character_1.Swordman(new model_1.Vector(it.area.x, it.area.y), it.area.width, it.area.height, projectileHandler, animationHandler);\r\n\t            }\r\n\t            else if (it.key == 51) {\r\n\t                enemy = new character_1.Archer(new model_1.Vector(it.area.x, it.area.y), it.area.width, it.area.height, projectileHandler, animationHandler);\r\n\t            }\r\n\t            else if (it.key == 52) {\r\n\t                enemy = new character_1.Shadow(new model_1.Vector(it.area.x, it.area.y), 85, 85, projectileHandler, animationHandler);\r\n\t            }\r\n\t            else if (it.key == 53) {\r\n\t                enemy = new character_1.MasterSorcerer(new model_1.Vector(it.area.x, it.area.y), 128, 96, projectileHandler, animationHandler, particleHandler);\r\n\t            }\r\n\t            else if (it.key == 54) {\r\n\t                enemy = new character_1.Apprentice(new model_1.Vector(it.area.x, it.area.y), it.area.width, it.area.height, projectileHandler, animationHandler, particleHandler);\r\n\t            }\r\n\t            else if (it.key == 55) {\r\n\t                enemy = new character_1.Screamer(new model_1.Vector(it.area.x, it.area.y), 64, 96, projectileHandler, animationHandler, particleHandler);\r\n\t            }\r\n\t            else if (it.key == 56) {\r\n\t                enemy = new shapeshifter_1.ShapeShifter(new model_1.Vector(it.area.x, it.area.y), 96, 96, projectileHandler, animationHandler, particleHandler);\r\n\t            }\r\n\t            return enemy;\r\n\t        });\r\n\t        return level;\r\n\t    };\r\n\t    LoadHelper.prototype.validateLevelData = function (levelData) {\r\n\t        var valid = (this.checkDoubleNumberTouple(levelData, \"camera\")\r\n\t            && this.checkPropertyExists(levelData, \"dynamicTiles\")\r\n\t            && this.checkPropertyExists(levelData, \"enemies\")\r\n\t            && this.checkPropertyExists(levelData, \"tiles\")\r\n\t            && this.checkPropertyExists(levelData, \"decorativeTiles\")\r\n\t            && this.checkPropertyExists(levelData, \"background\")\r\n\t            && this.checkDoubleNumberTouple(levelData, \"player\")\r\n\t            && this.checkDoubleNumberTouple(levelData, \"gameSize\")\r\n\t            && this.checkDoubleNumberTouple(levelData, \"end\"));\r\n\t        return valid;\r\n\t    };\r\n\t    LoadHelper.prototype.checkDoubleNumberTouple = function (levelData, property) {\r\n\t        var value = (this.checkPropertyExists(levelData, property) && levelData[property].length == 2 && this.isNumber(levelData[property][0]) && this.isNumber(levelData[property][1]));\r\n\t        return value;\r\n\t    };\r\n\t    LoadHelper.prototype.isNumber = function (number) {\r\n\t        return (!isNaN(+number));\r\n\t    };\r\n\t    LoadHelper.prototype.checkPropertyExists = function (levelData, property) {\r\n\t        var value = (levelData[property] !== undefined);\r\n\t        return value;\r\n\t    };\r\n\t    LoadHelper.instance = new LoadHelper();\r\n\t    return LoadHelper;\r\n\t}());\r\n\texports.LoadHelper = LoadHelper;\r\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar shaderType_1 = __webpack_require__(348);\r\n\texports.ShaderType = shaderType_1.ShaderType;\r\n\tvar tile_1 = __webpack_require__(349);\r\n\texports.Tile = tile_1.Tile;\r\n\tvar vector_1 = __webpack_require__(350);\r\n\texports.Vector = vector_1.Vector;\r\n\tvar rectangle_1 = __webpack_require__(351);\r\n\texports.Rectangle = rectangle_1.Rectangle;\r\n\tvar sprite_1 = __webpack_require__(352);\r\n\texports.Sprite = sprite_1.Sprite;\r\n\tvar level_1 = __webpack_require__(353);\r\n\texports.Level = level_1.Level;\r\n\tvar assets_1 = __webpack_require__(354);\r\n\texports.Asset = assets_1.Asset;\r\n\tvar projectile_1 = __webpack_require__(355);\r\n\texports.Projectile = projectile_1.Projectile;\r\n\tvar animation_1 = __webpack_require__(356);\r\n\texports.Animation = animation_1.Animation;\r\n\tvar frameAnimation_1 = __webpack_require__(371);\r\n\texports.FrameAnimation = frameAnimation_1.FrameAnimation;\r\n\tvar spellType_1 = __webpack_require__(372);\r\n\texports.SpellType = spellType_1.SpellType;\r\n\tvar spell_1 = __webpack_require__(373);\r\n\texports.Spell = spell_1.Spell;\r\n\tvar physicalProjectile_1 = __webpack_require__(374);\r\n\texports.PhysicalProjectile = physicalProjectile_1.PhysicalProjectile;\r\n\tvar meele_1 = __webpack_require__(377);\r\n\texports.Meele = meele_1.Meele;\r\n\tvar debug_1 = __webpack_require__(378);\r\n\texports.DebugElement = debug_1.DebugElement;\r\n\tvar textureType_1 = __webpack_require__(379);\r\n\texports.TextureType = textureType_1.TextureType;\r\n\tvar stickyAnimation_1 = __webpack_require__(380);\r\n\texports.StickyAnimation = stickyAnimation_1.StickyAnimation;\r\n\tvar rotationAnimation_1 = __webpack_require__(381);\r\n\texports.RotationAnimation = rotationAnimation_1.RotationAnimation;\r\n\tvar staticRotationAnimation_1 = __webpack_require__(382);\r\n\texports.StaticRotationAnimation = staticRotationAnimation_1.StaticRotationAnimation;\r\n\tvar collisionProjectile_1 = __webpack_require__(383);\r\n\texports.CollisionProjectile = collisionProjectile_1.CollisionProjectile;\r\n\tvar projectileType_1 = __webpack_require__(384);\r\n\texports.ProjectileType = projectileType_1.ProjectileType;\r\n\tvar cast_1 = __webpack_require__(385);\r\n\texports.Cast = cast_1.Cast;\r\n\tvar instantCast_1 = __webpack_require__(386);\r\n\texports.InstantCast = instantCast_1.InstantCast;\r\n\tvar channelCast_1 = __webpack_require__(387);\r\n\texports.ChannelCast = channelCast_1.ChannelCast;\r\n\tvar spellCast_1 = __webpack_require__(388);\r\n\texports.SpellCast = spellCast_1.SpellCast;\r\n\tvar particleProjectile_1 = __webpack_require__(389);\r\n\texports.ParticleProjectile = particleProjectile_1.ParticleProjectile;\r\n\tvar dynamicTile_1 = __webpack_require__(390);\r\n\texports.DynamicTile = dynamicTile_1.DynamicTile;\r\n\tvar dynamicTileData_1 = __webpack_require__(398);\r\n\texports.DynamicTileData = dynamicTileData_1.DynamicTileData;\r\n\tvar renderable_data_1 = __webpack_require__(399);\r\n\texports.RenderableData = renderable_data_1.RenderableData;\r\n\tvar progress_1 = __webpack_require__(400);\r\n\texports.Progress = progress_1.Progress;\r\n\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (ShaderType) {\r\n\t    ShaderType[ShaderType[\"Vertex\"] = 1] = \"Vertex\";\r\n\t    ShaderType[ShaderType[\"Fragment\"] = 2] = \"Fragment\";\r\n\t})(exports.ShaderType || (exports.ShaderType = {}));\r\n\tvar ShaderType = exports.ShaderType;\r\n\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Tile = (function () {\r\n\t    function Tile(x, y, width, height, key) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.key = key;\r\n\t    }\r\n\t    return Tile;\r\n\t}());\r\n\texports.Tile = Tile;\r\n\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Vector = (function () {\r\n\t    function Vector(x, y) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t    }\r\n\t    Vector.prototype.add = function (vector) {\r\n\t        if (vector) {\r\n\t            this.x += vector.x;\r\n\t            this.y += vector.y;\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t    Vector.prototype.copy = function (vector) {\r\n\t        return new Vector(vector.x, vector.y);\r\n\t    };\r\n\t    Vector.prototype.normalize = function () {\r\n\t        var mag = this.magnitude();\r\n\t        this.x = this.x / mag;\r\n\t        this.y = this.y / mag;\r\n\t    };\r\n\t    Vector.prototype.magnitude = function () {\r\n\t        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t    };\r\n\t    Vector.prototype.multiply = function (factor) {\r\n\t        this.x = this.x * factor;\r\n\t        this.y = this.y * factor;\r\n\t    };\r\n\t    Vector.prototype.invert = function () {\r\n\t        this.x = -this.x;\r\n\t        this.y = -this.y;\r\n\t        return this;\r\n\t    };\r\n\t    return Vector;\r\n\t}());\r\n\texports.Vector = Vector;\r\n\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Rectangle = (function () {\r\n\t    function Rectangle(x, y, width, height) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t    }\r\n\t    return Rectangle;\r\n\t}());\r\n\texports.Rectangle = Rectangle;\r\n\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Sprite = (function () {\r\n\t    function Sprite(position) {\r\n\t        this.position = position;\r\n\t    }\r\n\t    return Sprite;\r\n\t}());\r\n\texports.Sprite = Sprite;\r\n\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Level = (function () {\r\n\t    function Level() {\r\n\t        this.tiles = [];\r\n\t        this.decorativeTiles = [];\r\n\t        this.dynamicTiles = [];\r\n\t        this.enemies = [];\r\n\t    }\r\n\t    return Level;\r\n\t}());\r\n\texports.Level = Level;\r\n\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Asset = (function () {\r\n\t    function Asset() {\r\n\t    }\r\n\t    return Asset;\r\n\t}());\r\n\texports.Asset = Asset;\r\n\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar Projectile = (function () {\r\n\t    function Projectile(velocity, area, animation, collisionRatio, collisionArea) {\r\n\t        this.projectileType = _1.ProjectileType.None;\r\n\t        this.damage = 0;\r\n\t        this.velocity = velocity;\r\n\t        this.area = area;\r\n\t        this.animation = animation;\r\n\t        if (collisionArea) {\r\n\t            this.collisionArea = collisionArea;\r\n\t        }\r\n\t        else {\r\n\t            this.collisionArea = new _1.Rectangle(this.area.x + (this.area.width / 2) - ((this.area.width * collisionRatio) / 2), this.area.y + (this.area.height / 2) - ((this.area.height * collisionRatio) / 2), this.area.width * collisionRatio, this.area.height * collisionRatio);\r\n\t        }\r\n\t    }\r\n\t    Projectile.prototype.update = function (travelDistanceX, travelDistanceY, delta) {\r\n\t        this.area.x += travelDistanceX;\r\n\t        this.area.y += travelDistanceY;\r\n\t        this.collisionArea.x += travelDistanceX;\r\n\t        this.collisionArea.y += travelDistanceY;\r\n\t        this.animation.areaToRender.x = this.area.x;\r\n\t        this.animation.areaToRender.y = this.area.y;\r\n\t    };\r\n\t    Projectile.prototype.updateForces = function (delta) {\r\n\t    };\r\n\t    return Projectile;\r\n\t}());\r\n\texports.Projectile = Projectile;\r\n\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar Animation = (function () {\r\n\t    function Animation(textureNumbers) {\r\n\t        this.timeToChange = 100;\r\n\t        this.inverse = false;\r\n\t        this.delay = 0;\r\n\t        this.frameIndex = 0;\r\n\t        this.lastChange = 0;\r\n\t        this.textureCoords = [];\r\n\t        for (var _i = 0, textureNumbers_1 = textureNumbers; _i < textureNumbers_1.length; _i++) {\r\n\t            var textureNumber = textureNumbers_1[_i];\r\n\t            this.textureCoords.push(render_1.RenderHelper.getInstance().getTextureCoordinates([], textureNumber));\r\n\t        }\r\n\t    }\r\n\t    Animation.prototype.next = function (delta) {\r\n\t        this.lastChange += delta;\r\n\t        if (this.lastChange >= this.timeToChange) {\r\n\t            this.lastChange = 0;\r\n\t            if (this.delay > 0) {\r\n\t                this.delay--;\r\n\t            }\r\n\t            this.frameIndex++;\r\n\t            if (this.repetitions) {\r\n\t                this.repetitions--;\r\n\t            }\r\n\t            if (this.frameIndex >= this.textureCoords.length) {\r\n\t                this.frameIndex = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Animation.prototype.getCurrentFrame = function () {\r\n\t        return this.textureCoords[this.frameIndex];\r\n\t    };\r\n\t    Animation.prototype.reset = function () {\r\n\t        this.frameIndex = 0;\r\n\t        this.lastChange = 0;\r\n\t    };\r\n\t    return Animation;\r\n\t}());\r\n\texports.Animation = Animation;\r\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar renderer_1 = __webpack_require__(358);\r\n\texports.Renderer = renderer_1.Renderer;\r\n\tvar renderCall_1 = __webpack_require__(359);\r\n\texports.RenderCall = renderCall_1.RenderCall;\r\n\tvar colorRenderCall_1 = __webpack_require__(360);\r\n\texports.ColorRenderCall = colorRenderCall_1.ColorRenderCall;\r\n\tvar colorRenderer_1 = __webpack_require__(361);\r\n\texports.ColorRenderer = colorRenderer_1.ColorRenderer;\r\n\tvar renderHelper_1 = __webpack_require__(362);\r\n\texports.RenderHelper = renderHelper_1.RenderHelper;\r\n\tvar dynamicRenderCall_1 = __webpack_require__(365);\r\n\texports.DynamicRenderCall = dynamicRenderCall_1.DynamicRenderCall;\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\texports.TextureMapper = textureMapper_1.TextureMapper;\r\n\tvar particleRenderer_1 = __webpack_require__(366);\r\n\texports.ParticleRenderer = particleRenderer_1.ParticleRenderer;\r\n\tvar matrix3_1 = __webpack_require__(364);\r\n\texports.Matrix3 = matrix3_1.Matrix3;\r\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar Renderer = (function () {\r\n\t    function Renderer(context) {\r\n\t        this.context = context;\r\n\t        this.gl = this.context.gl;\r\n\t        this.shaderProgram = this.context.shaderProgram;\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 1, \"a_texture_coord\");\r\n\t        this.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t        this.textureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_texture_coord\");\r\n\t        this.resolutionLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_resolution\");\r\n\t        this.cameraLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_camera\");\r\n\t        this.resolution = new model_1.Vector(this.context.gl.canvas.width, this.context.gl.canvas.height);\r\n\t        this.vertexBuffer = this.gl.createBuffer();\r\n\t        this.textureCoordBuffer = this.gl.createBuffer();\r\n\t        this.indeciesBuffer = this.gl.createBuffer();\r\n\t    }\r\n\t    Renderer.prototype.render = function (renderCalls, camera) {\r\n\t        var _this = this;\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        renderCalls.forEach(function (renderCall, key) {\r\n\t            _this.gl.enableVertexAttribArray(_this.positionLocation);\r\n\t            _this.gl.enableVertexAttribArray(_this.textureCoordAttribute);\r\n\t            _this.gl.bindBuffer(_this.gl.ARRAY_BUFFER, _this.vertexBuffer);\r\n\t            _this.gl.bufferData(_this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), _this.gl.STATIC_DRAW);\r\n\t            _this.gl.bindBuffer(_this.gl.ARRAY_BUFFER, _this.textureCoordBuffer);\r\n\t            _this.gl.bufferData(_this.gl.ARRAY_BUFFER, new Float32Array(renderCall.textureCoords), _this.gl.STATIC_DRAW);\r\n\t            _this.gl.bindBuffer(_this.gl.ELEMENT_ARRAY_BUFFER, _this.indeciesBuffer);\r\n\t            _this.gl.bufferData(_this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(renderCall.indecies), _this.gl.STATIC_DRAW);\r\n\t            _this.gl.bindBuffer(_this.gl.ARRAY_BUFFER, _this.vertexBuffer);\r\n\t            _this.gl.vertexAttribPointer(_this.positionLocation, 2, _this.gl.FLOAT, false, 0, 0);\r\n\t            _this.gl.bindBuffer(_this.gl.ARRAY_BUFFER, _this.textureCoordBuffer);\r\n\t            _this.gl.vertexAttribPointer(_this.textureCoordAttribute, 2, _this.gl.FLOAT, false, 0, 0);\r\n\t            _this.gl.uniform2f(_this.resolutionLocation, _this.resolution.x, _this.resolution.y);\r\n\t            _this.gl.uniform2f(_this.cameraLocation, camera[0], camera[1]);\r\n\t            _this.gl.activeTexture(_this.gl.TEXTURE0);\r\n\t            if (key != -1) {\r\n\t                _this.gl.bindTexture(_this.gl.TEXTURE_2D, _this.context.tileTextures.get(key));\r\n\t            }\r\n\t            else {\r\n\t                _this.gl.bindTexture(_this.gl.TEXTURE_2D, _this.context.glTexture);\r\n\t            }\r\n\t            _this.gl.bindBuffer(_this.gl.ELEMENT_ARRAY_BUFFER, _this.indeciesBuffer);\r\n\t            _this.gl.drawElements(_this.gl.TRIANGLES, renderCall.indecies.length, _this.gl.UNSIGNED_SHORT, 0);\r\n\t            _this.gl.disableVertexAttribArray(_this.positionLocation);\r\n\t            _this.gl.disableVertexAttribArray(_this.textureCoordAttribute);\r\n\t        });\r\n\t    };\r\n\t    return Renderer;\r\n\t}());\r\n\texports.Renderer = Renderer;\r\n\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar RenderCall = (function () {\r\n\t    function RenderCall() {\r\n\t        this.vertecies = [];\r\n\t        this.indecies = [];\r\n\t        this.textureCoords = [];\r\n\t    }\r\n\t    return RenderCall;\r\n\t}());\r\n\texports.RenderCall = RenderCall;\r\n\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar ColorRenderCall = (function () {\r\n\t    function ColorRenderCall() {\r\n\t        this.vertecies = [];\r\n\t        this.indecies = [];\r\n\t        this.textureCoords = [];\r\n\t        this.color = [];\r\n\t    }\r\n\t    return ColorRenderCall;\r\n\t}());\r\n\texports.ColorRenderCall = ColorRenderCall;\r\n\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar ColorRenderer = (function () {\r\n\t    function ColorRenderer(context) {\r\n\t        this.context = context;\r\n\t        this.gl = this.context.gl;\r\n\t        this.shaderProgram = this.context.colorShaderProgram;\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 1, \"a_color\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 2, \"a_texture_coord\");\r\n\t        this.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t        this.colorAttributeLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_color\");\r\n\t        this.textureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_texture_coord\");\r\n\t        this.resolutionLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_resolution\");\r\n\t        this.cameraLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_camera\");\r\n\t        this.resolution = new model_1.Vector(this.context.gl.canvas.width, this.context.gl.canvas.height);\r\n\t        this.colorBuffer = this.gl.createBuffer();\r\n\t        this.vertexBuffer = this.gl.createBuffer();\r\n\t        this.textureCoordBuffer = this.gl.createBuffer();\r\n\t        this.indeciesBuffer = this.gl.createBuffer();\r\n\t    }\r\n\t    ColorRenderer.prototype.render = function (renderCalls, camera) {\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        for (var _i = 0, renderCalls_1 = renderCalls; _i < renderCalls_1.length; _i++) {\r\n\t            var renderCall = renderCalls_1[_i];\r\n\t            this.gl.enableVertexAttribArray(this.positionLocation);\r\n\t            this.gl.enableVertexAttribArray(this.textureCoordAttribute);\r\n\t            this.gl.enableVertexAttribArray(this.colorAttributeLocation);\r\n\t            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t            this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\t            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t            this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.textureCoords), this.gl.STATIC_DRAW);\r\n\t            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer);\r\n\t            this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.color), this.gl.STATIC_DRAW);\r\n\t            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t            this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(renderCall.indecies), this.gl.STATIC_DRAW);\r\n\t            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t            this.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\t            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t            this.gl.vertexAttribPointer(this.textureCoordAttribute, 2, this.gl.FLOAT, false, 0, 0);\r\n\t            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer);\r\n\t            this.gl.vertexAttribPointer(this.colorAttributeLocation, 4, this.gl.FLOAT, false, 0, 0);\r\n\t            this.gl.uniform2f(this.resolutionLocation, this.resolution.x, this.resolution.y);\r\n\t            this.gl.uniform2f(this.cameraLocation, camera[0], camera[1]);\r\n\t            this.gl.activeTexture(this.gl.TEXTURE0);\r\n\t            this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.glTexture);\r\n\t            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t            this.gl.drawElements(this.gl.TRIANGLES, renderCall.indecies.length, this.gl.UNSIGNED_SHORT, 0);\r\n\t            this.gl.disableVertexAttribArray(this.positionLocation);\r\n\t            this.gl.disableVertexAttribArray(this.textureCoordAttribute);\r\n\t            this.gl.disableVertexAttribArray(this.colorAttributeLocation);\r\n\t        }\r\n\t    };\r\n\t    return ColorRenderer;\r\n\t}());\r\n\texports.ColorRenderer = ColorRenderer;\r\n\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar matrix3_1 = __webpack_require__(364);\r\n\tvar RenderHelper = (function () {\r\n\t    function RenderHelper() {\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.canvasWidth = 1200;\r\n\t        this.canvasHeight = 800;\r\n\t        this.projectionMatrix = matrix3_1.Matrix3.createProjectionMatrix(this.canvasWidth, this.canvasHeight);\r\n\t    }\r\n\t    RenderHelper.prototype.constrcuctor = function () {\r\n\t        if (RenderHelper.instance) {\r\n\t            throw new Error(\"Static class cant be instanced!\");\r\n\t        }\r\n\t        RenderHelper.instance = this;\r\n\t    };\r\n\t    RenderHelper.getInstance = function () {\r\n\t        return RenderHelper.instance;\r\n\t    };\r\n\t    RenderHelper.prototype.getRelativeValue = function (x, y) {\r\n\t        var relativePosition = new model_1.Vector(0, 0);\r\n\t        relativePosition.x = x / (this.canvasWidth / 2) - 1;\r\n\t        relativePosition.y = -y / (this.canvasHeight / 2) + 1;\r\n\t        return relativePosition;\r\n\t    };\r\n\t    RenderHelper.prototype.getVertecies = function (x, y, width, height, currentVertecies) {\r\n\t        var x1 = x;\r\n\t        var x2 = x + width;\r\n\t        var y1 = y;\r\n\t        var y2 = y + height;\r\n\t        var newVertecies = [\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x2, y1,\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x1, y2\r\n\t        ];\r\n\t        currentVertecies.push.apply(currentVertecies, newVertecies);\r\n\t        return currentVertecies;\r\n\t    };\r\n\t    RenderHelper.prototype.getInverseVertecies = function (x, y, width, height, currentVertecies) {\r\n\t        var x1 = x + width;\r\n\t        var x2 = x;\r\n\t        var y1 = y;\r\n\t        var y2 = y + height;\r\n\t        var newVertecies = [\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x2, y1,\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x1, y2\r\n\t        ];\r\n\t        currentVertecies.push.apply(currentVertecies, newVertecies);\r\n\t        return currentVertecies;\r\n\t    };\r\n\t    RenderHelper.prototype.getColor = function (currentColors, color) {\r\n\t        var col = [];\r\n\t        if (color) {\r\n\t            col = color;\r\n\t        }\r\n\t        else {\r\n\t            col = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n\t        }\r\n\t        currentColors.push.apply(currentColors, col);\r\n\t        return currentColors;\r\n\t    };\r\n\t    RenderHelper.prototype.getMatrices = function (x, y, width, height, angle, currentMatrices) {\r\n\t        var rotationPointX = x + width / 2;\r\n\t        var rotationPointY = y + height / 2;\r\n\t        var moveToRotationPointMatrix = matrix3_1.Matrix3.createTranslationMatrix(-rotationPointX, -rotationPointY);\r\n\t        var rotationMatrix = matrix3_1.Matrix3.createRotationMatrix(angle);\r\n\t        var moveBackMatrix = matrix3_1.Matrix3.createTranslationMatrix(rotationPointX, rotationPointY);\r\n\t        var matrix = matrix3_1.Matrix3.multiply(moveToRotationPointMatrix, rotationMatrix);\r\n\t        matrix = matrix3_1.Matrix3.multiply(matrix, moveBackMatrix);\r\n\t        matrix = matrix3_1.Matrix3.multiply(matrix, this.projectionMatrix);\r\n\t        matrix = this.getIndeciesAttribute(matrix);\r\n\t        currentMatrices.push.apply(currentMatrices, matrix);\r\n\t        return currentMatrices;\r\n\t    };\r\n\t    RenderHelper.prototype.getIndeciesAttribute = function (attribute) {\r\n\t        var copy = attribute.slice(0, attribute.length);\r\n\t        for (var i = 0; i < 5; i++) {\r\n\t            attribute.push.apply(attribute, copy);\r\n\t        }\r\n\t        return attribute;\r\n\t    };\r\n\t    RenderHelper.prototype.getIndecies = function (currentIndecies) {\r\n\t        var vertexIndices = [\r\n\t            currentIndecies.length, currentIndecies.length + 1, currentIndecies.length + 2, currentIndecies.length + 3, currentIndecies.length + 4, currentIndecies.length + 5\r\n\t        ];\r\n\t        currentIndecies.push.apply(currentIndecies, vertexIndices);\r\n\t        return currentIndecies;\r\n\t    };\r\n\t    RenderHelper.prototype.addTextureCoordinates = function (currentTextureCoordinates, textureCoords) {\r\n\t        currentTextureCoordinates.push.apply(currentTextureCoordinates, textureCoords);\r\n\t        return currentTextureCoordinates;\r\n\t    };\r\n\t    RenderHelper.prototype.getTextureCoordinates = function (currentTextureCoordinates, textureType) {\r\n\t        var rect = this.textureMapper.mapTexture(textureType);\r\n\t        var textureCoordinates = this.getCoords(rect, RenderHelper.textureSize);\r\n\t        currentTextureCoordinates.push.apply(currentTextureCoordinates, textureCoordinates);\r\n\t        return currentTextureCoordinates;\r\n\t    };\r\n\t    RenderHelper.prototype.getTiledTextureCoordinates = function (tile, currentTextureCoordinates, size) {\r\n\t        var x1 = 0;\r\n\t        var x2 = tile.width / size[0];\r\n\t        var y1 = 0;\r\n\t        var y2 = tile.height / size[1];\r\n\t        var textureCoordinates = [\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x2, y1,\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x1, y2\r\n\t        ];\r\n\t        currentTextureCoordinates.push.apply(currentTextureCoordinates, textureCoordinates);\r\n\t        return currentTextureCoordinates;\r\n\t    };\r\n\t    RenderHelper.prototype.getMainTextureCoords = function (rect) {\r\n\t        return this.getCoords(rect, RenderHelper.textureSize);\r\n\t    };\r\n\t    RenderHelper.prototype.getCoords = function (rect, size) {\r\n\t        var x1 = rect.x / size;\r\n\t        var y1 = rect.y / size;\r\n\t        var x2 = (rect.x + rect.width) / size;\r\n\t        var y2 = (rect.y + rect.height) / size;\r\n\t        var textureCoordinates = [\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x2, y1,\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x1, y2\r\n\t        ];\r\n\t        return textureCoordinates;\r\n\t    };\r\n\t    RenderHelper.instance = new RenderHelper();\r\n\t    RenderHelper.textureSize = 2048;\r\n\t    return RenderHelper;\r\n\t}());\r\n\texports.RenderHelper = RenderHelper;\r\n\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar TextureMapper = (function () {\r\n\t    function TextureMapper() {\r\n\t        this.texture0 = new model_1.Rectangle(0, 0, 0, 0);\r\n\t        this.texture1 = new model_1.Rectangle(0, 0, 51.2, 51.2);\r\n\t        this.texture2 = new model_1.Rectangle(51.2, 0, 51.2, 51.2);\r\n\t        this.texture3 = new model_1.Rectangle(102.4, 0, 51.2, 51.2);\r\n\t        this.texture4 = new model_1.Rectangle(153.6, 0, 51.2, 51.2);\r\n\t        this.texture5 = new model_1.Rectangle(204.8, 0, 51.2, 51.2);\r\n\t        this.texture6 = new model_1.Rectangle(0, 51.2, 51.2, 51.2);\r\n\t        this.texture7 = new model_1.Rectangle(51.2, 51.2, 51.2, 51.2);\r\n\t        this.texture8 = new model_1.Rectangle(102.4, 51.2, 51.2, 51.2);\r\n\t        this.texture9 = new model_1.Rectangle(153.6, 51.2, 51.2, 51.2);\r\n\t        this.texture10 = new model_1.Rectangle(204.8, 51.2, 51.2, 51.2);\r\n\t        this.texture11 = new model_1.Rectangle(0, 102.4, 51.2, 51.2);\r\n\t        this.texture12 = new model_1.Rectangle(51.2, 102.4, 51.2, 51.2);\r\n\t        this.texture13 = new model_1.Rectangle(102.4, 102.4, 51.2, 51.2);\r\n\t        this.texture14 = new model_1.Rectangle(153.6, 102.4, 51.2, 51.2);\r\n\t        this.texture15 = new model_1.Rectangle(204.8, 102.4, 51.2, 50);\r\n\t        this.texture16 = new model_1.Rectangle(0, 153.6, 51.2, 51.2);\r\n\t        this.texture17 = new model_1.Rectangle(51.2, 153.6, 51.2, 51.2);\r\n\t        this.texture18 = new model_1.Rectangle(102.4, 153.6, 51.2, 51.2);\r\n\t        this.texture19 = new model_1.Rectangle(153.6, 153.6, 50, 50);\r\n\t        this.texture20 = new model_1.Rectangle(204.8, 153.6, 51.2, 51.2);\r\n\t        this.texture21 = new model_1.Rectangle(0, 204.8, 51.2, 51.2);\r\n\t        this.texture22 = new model_1.Rectangle(51.2, 204.8, 51.2, 51.2);\r\n\t        this.texture23 = new model_1.Rectangle(102.4, 204.8, 50, 51.2);\r\n\t        this.texture24 = new model_1.Rectangle(153.6, 204.8, 51.2, 51.2);\r\n\t        this.texture25 = new model_1.Rectangle(234, 220, 20, 36);\r\n\t        this.texture26 = new model_1.Rectangle(128, 320, 86, 128);\r\n\t        this.texture50 = new model_1.Rectangle(0, 368, 128, 16);\r\n\t        this.texture51 = new model_1.Rectangle(32, 1280, 290, 32);\r\n\t        this.texture52 = new model_1.Rectangle(32, 1440, 64, 8);\r\n\t        this.texture53 = new model_1.Rectangle(33, 1448, 8, 8);\r\n\t        this.texture54 = new model_1.Rectangle(33, 1456, 8, 8);\r\n\t        this.texture55 = new model_1.Rectangle(384, 1024, 128, 128);\r\n\t        this.texture56 = new model_1.Rectangle(512, 1024, 128, 128);\r\n\t        this.texture57 = new model_1.Rectangle(640, 1024, 128, 128);\r\n\t        this.texture58 = new model_1.Rectangle(768, 1024, 128, 128);\r\n\t        this.texture59 = new model_1.Rectangle(896, 1024, 128, 128);\r\n\t        this.texture60 = new model_1.Rectangle(1760, 1248, 32, 64);\r\n\t        this.texture61 = new model_1.Rectangle(1792, 1248, 32, 64);\r\n\t        this.texture62 = new model_1.Rectangle(1824, 1248, 32, 64);\r\n\t        this.texture63 = new model_1.Rectangle(1856, 1248, 32, 64);\r\n\t        this.texture100 = new model_1.Rectangle(258, 2, 55, 50);\r\n\t        this.texture101 = new model_1.Rectangle(311, 2, 64, 55);\r\n\t        this.texture102 = new model_1.Rectangle(375, 2, 72, 64);\r\n\t        this.texture103 = new model_1.Rectangle(257, 64, 75, 64);\r\n\t        this.texture104 = new model_1.Rectangle(336, 64, 78, 72);\r\n\t        this.texture105 = new model_1.Rectangle(416, 64, 82, 75);\r\n\t        this.texture106 = new model_1.Rectangle(256, 192, 128, 128);\r\n\t        this.texture107 = new model_1.Rectangle(384, 192, 128, 128);\r\n\t        this.texture108 = new model_1.Rectangle(512, 192, 128, 128);\r\n\t        this.texture109 = new model_1.Rectangle(256, 320, 128, 128);\r\n\t        this.texture110 = new model_1.Rectangle(384, 320, 128, 128);\r\n\t        this.texture111 = new model_1.Rectangle(512, 320, 128, 128);\r\n\t        this.texture112 = new model_1.Rectangle(512, 0, 128, 128);\r\n\t        this.texture113 = new model_1.Rectangle(640, 0, 128, 128);\r\n\t        this.texture114 = new model_1.Rectangle(768, 0, 128, 128);\r\n\t        this.texture115 = new model_1.Rectangle(896, 0, 128, 128);\r\n\t        this.texture116 = new model_1.Rectangle(704, 128, 128, 128);\r\n\t        this.texture117 = new model_1.Rectangle(832, 128, 128, 128);\r\n\t        this.texture118 = new model_1.Rectangle(1870, 340, 85, 85);\r\n\t        this.texture119 = new model_1.Rectangle(1955, 340, 85, 85);\r\n\t        this.texture120 = new model_1.Rectangle(1700, 425, 85, 85);\r\n\t        this.texture121 = new model_1.Rectangle(1785, 425, 85, 85);\r\n\t        this.texture122 = new model_1.Rectangle(1870, 425, 85, 85);\r\n\t        this.texture123 = new model_1.Rectangle(1955, 425, 85, 85);\r\n\t        this.texture124 = new model_1.Rectangle(1700, 510, 85, 85);\r\n\t        this.texture125 = new model_1.Rectangle(1785, 510, 85, 85);\r\n\t        this.texture126 = new model_1.Rectangle(1870, 510, 85, 85);\r\n\t        this.texture127 = new model_1.Rectangle(1955, 510, 85, 85);\r\n\t        this.texture128 = new model_1.Rectangle(1700, 595, 85, 85);\r\n\t        this.texture129 = new model_1.Rectangle(1785, 595, 85, 85);\r\n\t        this.texture130 = new model_1.Rectangle(1870, 595, 85, 85);\r\n\t        this.texture131 = new model_1.Rectangle(1955, 595, 85, 85);\r\n\t        this.texture132 = new model_1.Rectangle(1700, 680, 85, 85);\r\n\t        this.texture133 = new model_1.Rectangle(1785, 680, 85, 85);\r\n\t        this.texture134 = new model_1.Rectangle(1870, 680, 85, 85);\r\n\t        this.texture135 = new model_1.Rectangle(1955, 680, 85, 85);\r\n\t        this.texture136 = new model_1.Rectangle(1700, 765, 85, 85);\r\n\t        this.texture137 = new model_1.Rectangle(1785, 765, 85, 85);\r\n\t        this.texture138 = new model_1.Rectangle(1870, 765, 85, 85);\r\n\t        this.texture139 = new model_1.Rectangle(1408, 448, 64, 64);\r\n\t        this.texture140 = new model_1.Rectangle(1472, 448, 64, 64);\r\n\t        this.texture141 = new model_1.Rectangle(1536, 448, 64, 64);\r\n\t        this.texture142 = new model_1.Rectangle(1600, 448, 64, 64);\r\n\t        this.texture143 = new model_1.Rectangle(1408, 512, 64, 64);\r\n\t        this.texture144 = new model_1.Rectangle(1472, 512, 64, 64);\r\n\t        this.texture145 = new model_1.Rectangle(1536, 512, 64, 64);\r\n\t        this.texture146 = new model_1.Rectangle(1600, 512, 64, 64);\r\n\t        this.texture147 = new model_1.Rectangle(0, 896, 128, 128);\r\n\t        this.texture148 = new model_1.Rectangle(128, 896, 128, 128);\r\n\t        this.texture149 = new model_1.Rectangle(256, 896, 128, 128);\r\n\t        this.texture150 = new model_1.Rectangle(0, 1024, 128, 128);\r\n\t        this.texture151 = new model_1.Rectangle(128, 1024, 128, 128);\r\n\t        this.texture152 = new model_1.Rectangle(256, 1024, 128, 128);\r\n\t        this.texture153 = new model_1.Rectangle(1408, 576, 64, 64);\r\n\t        this.texture154 = new model_1.Rectangle(1472, 576, 64, 64);\r\n\t        this.texture155 = new model_1.Rectangle(1536, 576, 64, 64);\r\n\t        this.texture156 = new model_1.Rectangle(32, 608, 32, 64);\r\n\t        this.texture157 = new model_1.Rectangle(96, 608, 32, 64);\r\n\t        this.texture158 = new model_1.Rectangle(160, 608, 32, 64);\r\n\t        this.texture159 = new model_1.Rectangle(224, 608, 32, 64);\r\n\t        this.texture160 = new model_1.Rectangle(1056, 1248, 32, 64);\r\n\t        this.texture161 = new model_1.Rectangle(1088, 1248, 32, 64);\r\n\t        this.texture162 = new model_1.Rectangle(992, 1248, 32, 64);\r\n\t        this.texture163 = new model_1.Rectangle(1024, 1248, 32, 64);\r\n\t        this.texture165 = new model_1.Rectangle(1152, 1248, 32, 64);\r\n\t        this.texture166 = new model_1.Rectangle(1184, 1248, 32, 64);\r\n\t        this.texture167 = new model_1.Rectangle(1216, 1248, 32, 64);\r\n\t        this.texture168 = new model_1.Rectangle(1280, 1248, 32, 64);\r\n\t        this.texture169 = new model_1.Rectangle(1312, 1248, 32, 64);\r\n\t        this.texture170 = new model_1.Rectangle(1344, 1248, 32, 64);\r\n\t        this.texture171 = new model_1.Rectangle(1376, 1248, 32, 64);\r\n\t        this.texture172 = new model_1.Rectangle(1408, 1248, 32, 64);\r\n\t        this.texture173 = new model_1.Rectangle(1472, 1248, 32, 64);\r\n\t        this.texture174 = new model_1.Rectangle(1504, 1248, 32, 64);\r\n\t        this.texture175 = new model_1.Rectangle(1536, 1248, 32, 64);\r\n\t        this.texture176 = new model_1.Rectangle(1568, 1248, 32, 64);\r\n\t        this.texture177 = new model_1.Rectangle(1600, 1248, 32, 64);\r\n\t        this.texture178 = new model_1.Rectangle(1632, 1248, 32, 64);\r\n\t        this.texture179 = new model_1.Rectangle(1248, 32, 164, 27);\r\n\t        this.texture180 = new model_1.Rectangle(1248, 96, 32, 32);\r\n\t        this.texture181 = new model_1.Rectangle(1248, 64, 164, 27);\r\n\t        this.texture182 = new model_1.Rectangle(1248, 0, 164, 27);\r\n\t        this.texture183 = new model_1.Rectangle(1440, 0, 164, 27);\r\n\t        this.texture184 = new model_1.Rectangle(1440, 32, 164, 27);\r\n\t        this.texture185 = new model_1.Rectangle(1440, 64, 164, 27);\r\n\t        this.texture186 = new model_1.Rectangle(1440, 96, 164, 27);\r\n\t        this.texture187 = new model_1.Rectangle(1088, 96, 128, 64);\r\n\t        this.texture188 = new model_1.Rectangle(1088, 192, 128, 64);\r\n\t        this.texture189 = new model_1.Rectangle(1088, 256, 128, 64);\r\n\t        this.texture190 = new model_1.Rectangle(1088, 320, 128, 64);\r\n\t        this.texture191 = new model_1.Rectangle(1088, 384, 128, 64);\r\n\t        this.texture192 = new model_1.Rectangle(1088, 448, 128, 64);\r\n\t        this.texture193 = new model_1.Rectangle(1088, 512, 128, 64);\r\n\t        this.texture194 = new model_1.Rectangle(1088, 576, 128, 64);\r\n\t        this.texture195 = new model_1.Rectangle(1088, 640, 128, 64);\r\n\t        this.texture196 = new model_1.Rectangle(1088, 704, 128, 64);\r\n\t        this.texture197 = new model_1.Rectangle(1088, 768, 128, 64);\r\n\t        this.texture198 = new model_1.Rectangle(1632, 0, 270, 64);\r\n\t        this.texture199 = new model_1.Rectangle(64, 1664, 128, 128);\r\n\t        this.texture200 = new model_1.Rectangle(28, 293, 28, 26);\r\n\t        this.texture201 = new model_1.Rectangle(56, 293, 28, 26);\r\n\t        this.texture202 = new model_1.Rectangle(84, 293, 28, 26);\r\n\t        this.texture203 = new model_1.Rectangle(0, 290, 28, 29);\r\n\t        this.texture204 = new model_1.Rectangle(112, 290, 28, 29);\r\n\t        this.texture205 = new model_1.Rectangle(140, 290, 28, 29);\r\n\t        this.texture206 = new model_1.Rectangle(168, 290, 28, 29);\r\n\t        this.texture207 = new model_1.Rectangle(196, 290, 28, 29);\r\n\t        this.texture208 = new model_1.Rectangle(224, 290, 28, 29);\r\n\t        this.texture209 = new model_1.Rectangle(0, 480, 28, 29);\r\n\t        this.texture210 = new model_1.Rectangle(28, 480, 28, 29);\r\n\t        this.texture211 = new model_1.Rectangle(56, 480, 28, 29);\r\n\t        this.texture212 = new model_1.Rectangle(84, 480, 28, 29);\r\n\t        this.texture214 = new model_1.Rectangle(0, 448, 28, 29);\r\n\t        this.texture215 = new model_1.Rectangle(28, 448, 28, 29);\r\n\t        this.texture216 = new model_1.Rectangle(56, 448, 28, 29);\r\n\t        this.texture217 = new model_1.Rectangle(84, 448, 28, 29);\r\n\t        this.texture218 = new model_1.Rectangle(112, 448, 28, 29);\r\n\t        this.texture219 = new model_1.Rectangle(140, 448, 28, 29);\r\n\t        this.texture220 = new model_1.Rectangle(0, 416, 28, 29);\r\n\t        this.texture221 = new model_1.Rectangle(28, 416, 28, 29);\r\n\t        this.texture222 = new model_1.Rectangle(56, 416, 28, 29);\r\n\t        this.texture223 = new model_1.Rectangle(84, 416, 28, 29);\r\n\t        this.texture224 = new model_1.Rectangle(0, 384, 28, 29);\r\n\t        this.texture225 = new model_1.Rectangle(28, 384, 28, 29);\r\n\t        this.texture226 = new model_1.Rectangle(56, 384, 28, 29);\r\n\t        this.texture227 = new model_1.Rectangle(112, 480, 28, 29);\r\n\t        this.texture228 = new model_1.Rectangle(140, 480, 28, 29);\r\n\t        this.texture229 = new model_1.Rectangle(168, 480, 28, 29);\r\n\t        this.texture230 = new model_1.Rectangle(196, 480, 28, 29);\r\n\t        this.texture231 = new model_1.Rectangle(224, 480, 28, 29);\r\n\t        this.texture232 = new model_1.Rectangle(252, 480, 28, 29);\r\n\t        this.texture233 = new model_1.Rectangle(32, 1152, 32, 32);\r\n\t        this.texture234 = new model_1.Rectangle(64, 1152, 32, 32);\r\n\t        this.texture235 = new model_1.Rectangle(96, 1152, 32, 32);\r\n\t        this.texture236 = new model_1.Rectangle(128, 1152, 32, 32);\r\n\t        this.texture237 = new model_1.Rectangle(160, 1152, 32, 32);\r\n\t        this.texture238 = new model_1.Rectangle(192, 1152, 32, 32);\r\n\t        this.texture239 = new model_1.Rectangle(224, 1152, 32, 32);\r\n\t        this.texture240 = new model_1.Rectangle(256, 1152, 32, 32);\r\n\t        this.texture241 = new model_1.Rectangle(288, 1152, 32, 32);\r\n\t        this.texture242 = new model_1.Rectangle(320, 1152, 32, 32);\r\n\t        this.texture243 = new model_1.Rectangle(32, 1216, 32, 32);\r\n\t        this.texture244 = new model_1.Rectangle(64, 1216, 32, 32);\r\n\t        this.texture245 = new model_1.Rectangle(96, 1216, 32, 32);\r\n\t        this.texture246 = new model_1.Rectangle(128, 1216, 32, 32);\r\n\t        this.texture247 = new model_1.Rectangle(160, 1216, 32, 32);\r\n\t        this.texture248 = new model_1.Rectangle(192, 1216, 32, 32);\r\n\t        this.texture249 = new model_1.Rectangle(0, 320, 28, 32);\r\n\t        this.texture250 = new model_1.Rectangle(224, 1216, 32, 32);\r\n\t        this.texture251 = new model_1.Rectangle(256, 1216, 32, 32);\r\n\t        this.texture252 = new model_1.Rectangle(288, 1216, 32, 32);\r\n\t        this.texture253 = new model_1.Rectangle(320, 1216, 32, 32);\r\n\t        this.texture254 = new model_1.Rectangle(352, 1216, 32, 32);\r\n\t        this.texture255 = new model_1.Rectangle(384, 1216, 32, 32);\r\n\t        this.texture256 = new model_1.Rectangle(416, 1216, 32, 32);\r\n\t        this.texture257 = new model_1.Rectangle(448, 1216, 32, 32);\r\n\t        this.texture262 = new model_1.Rectangle(32, 1344, 32, 32);\r\n\t        this.texture263 = new model_1.Rectangle(64, 1344, 32, 32);\r\n\t        this.texture264 = new model_1.Rectangle(96, 1344, 32, 32);\r\n\t        this.texture265 = new model_1.Rectangle(160, 1344, 32, 32);\r\n\t        this.texture266 = new model_1.Rectangle(192, 1344, 32, 32);\r\n\t        this.texture267 = new model_1.Rectangle(224, 1344, 32, 32);\r\n\t        this.texture268 = new model_1.Rectangle(32, 1401, 24, 7);\r\n\t        this.texture269 = new model_1.Rectangle(64, 1401, 15, 7);\r\n\t        this.texture270 = new model_1.Rectangle(288, 1344, 32, 32);\r\n\t        this.texture271 = new model_1.Rectangle(320, 1344, 32, 32);\r\n\t        this.texture272 = new model_1.Rectangle(352, 1344, 32, 32);\r\n\t        this.texture273 = new model_1.Rectangle(384, 1344, 32, 32);\r\n\t        this.texture274 = new model_1.Rectangle(416, 1344, 32, 32);\r\n\t        this.texture275 = new model_1.Rectangle(448, 1344, 32, 32);\r\n\t        this.texture276 = new model_1.Rectangle(288, 1376, 32, 32);\r\n\t        this.texture277 = new model_1.Rectangle(320, 1376, 32, 32);\r\n\t        this.texture278 = new model_1.Rectangle(352, 1376, 32, 32);\r\n\t        this.texture279 = new model_1.Rectangle(384, 1376, 32, 32);\r\n\t        this.texture280 = new model_1.Rectangle(416, 1376, 32, 32);\r\n\t        this.texture281 = new model_1.Rectangle(448, 1376, 32, 32);\r\n\t        this.texture282 = new model_1.Rectangle(512, 1344, 32, 32);\r\n\t        this.texture283 = new model_1.Rectangle(544, 1344, 32, 32);\r\n\t        this.texture284 = new model_1.Rectangle(576, 1344, 32, 32);\r\n\t        this.texture285 = new model_1.Rectangle(608, 1344, 32, 32);\r\n\t        this.texture286 = new model_1.Rectangle(640, 1344, 32, 32);\r\n\t        this.texture287 = new model_1.Rectangle(672, 1344, 32, 32);\r\n\t        this.texture288 = new model_1.Rectangle(704, 1344, 32, 32);\r\n\t        this.texture289 = new model_1.Rectangle(736, 1344, 32, 32);\r\n\t        this.texture290 = new model_1.Rectangle(800, 1344, 32, 32);\r\n\t        this.texture291 = new model_1.Rectangle(832, 1344, 32, 32);\r\n\t        this.texture292 = new model_1.Rectangle(864, 1344, 32, 32);\r\n\t        this.texture293 = new model_1.Rectangle(896, 1344, 32, 32);\r\n\t        this.texture294 = new model_1.Rectangle(480, 1376, 28, 32);\r\n\t        this.texture295 = new model_1.Rectangle(512, 1376, 28, 32);\r\n\t        this.texture296 = new model_1.Rectangle(544, 1376, 28, 32);\r\n\t        this.texture297 = new model_1.Rectangle(480, 1440, 20, 20);\r\n\t        this.texture298 = new model_1.Rectangle(512, 1440, 20, 20);\r\n\t        this.texture299 = new model_1.Rectangle(544, 1440, 20, 20);\r\n\t        this.texture300 = new model_1.Rectangle(32, 1664, 128, 128);\r\n\t        this.texture301 = new model_1.Rectangle(1344, 1184, 64, 64);\r\n\t        this.texture302 = new model_1.Rectangle(1408, 1184, 64, 64);\r\n\t        this.texture303 = new model_1.Rectangle(1472, 1184, 64, 64);\r\n\t        this.texture304 = new model_1.Rectangle(1536, 1184, 64, 64);\r\n\t        this.texture305 = new model_1.Rectangle(1600, 1184, 64, 64);\r\n\t        this.texture306 = new model_1.Rectangle(1664, 1184, 64, 64);\r\n\t        this.texture500 = new model_1.Rectangle(0, 1536, 96, 64);\r\n\t        this.texture550 = new model_1.Rectangle(1088, 0, 128, 64);\r\n\t        this.texture551 = new model_1.Rectangle(1632, 96, 111, 12);\r\n\t        this.texture552 = new model_1.Rectangle(1632, 128, 111, 12);\r\n\t        this.texture553 = new model_1.Rectangle(1440, 128, 164, 27);\r\n\t        this.texture554 = new model_1.Rectangle(1248, 128, 164, 27);\r\n\t        this.texture555 = new model_1.Rectangle(1440, 160, 164, 27);\r\n\t        this.texture556 = new model_1.Rectangle(1440, 192, 164, 27);\r\n\t        this.texture557 = new model_1.Rectangle(1440, 224, 164, 27);\r\n\t        this.texture558 = new model_1.Rectangle(1440, 256, 164, 27);\r\n\t        this.texture560 = new model_1.Rectangle(1344, 704, 64, 96);\r\n\t        this.texture561 = new model_1.Rectangle(1408, 704, 64, 96);\r\n\t        this.texture562 = new model_1.Rectangle(1472, 704, 64, 96);\r\n\t        this.texture563 = new model_1.Rectangle(1536, 704, 64, 96);\r\n\t        this.texture564 = new model_1.Rectangle(1600, 704, 64, 96);\r\n\t        this.texture565 = new model_1.Rectangle(1344, 800, 64, 96);\r\n\t        this.texture566 = new model_1.Rectangle(1408, 800, 64, 96);\r\n\t        this.texture567 = new model_1.Rectangle(1472, 800, 64, 96);\r\n\t        this.texture568 = new model_1.Rectangle(1536, 800, 64, 96);\r\n\t        this.texture569 = new model_1.Rectangle(1600, 800, 64, 96);\r\n\t        this.texture570 = new model_1.Rectangle(1344, 896, 64, 96);\r\n\t        this.texture571 = new model_1.Rectangle(1408, 896, 64, 96);\r\n\t        this.texture572 = new model_1.Rectangle(1472, 896, 64, 96);\r\n\t        this.texture573 = new model_1.Rectangle(1536, 896, 64, 96);\r\n\t        this.texture574 = new model_1.Rectangle(1600, 896, 64, 96);\r\n\t        this.texture575 = new model_1.Rectangle(1344, 992, 64, 96);\r\n\t        this.texture576 = new model_1.Rectangle(1408, 992, 64, 96);\r\n\t        this.texture577 = new model_1.Rectangle(1472, 992, 64, 96);\r\n\t        this.texture578 = new model_1.Rectangle(1536, 992, 64, 96);\r\n\t        this.texture579 = new model_1.Rectangle(1600, 992, 64, 96);\r\n\t        this.texture580 = new model_1.Rectangle(1408, 1440, 128, 96);\r\n\t        this.texture581 = new model_1.Rectangle(1536, 1440, 128, 96);\r\n\t        this.texture582 = new model_1.Rectangle(1664, 1440, 128, 96);\r\n\t        this.texture583 = new model_1.Rectangle(1792, 1440, 128, 96);\r\n\t        this.texture584 = new model_1.Rectangle(1408, 1568, 128, 96);\r\n\t        this.texture585 = new model_1.Rectangle(1536, 1568, 128, 96);\r\n\t        this.texture586 = new model_1.Rectangle(1664, 1568, 128, 96);\r\n\t        this.texture587 = new model_1.Rectangle(1792, 1568, 128, 96);\r\n\t        this.texture588 = new model_1.Rectangle(1408, 1696, 128, 96);\r\n\t        this.texture589 = new model_1.Rectangle(1536, 1696, 128, 96);\r\n\t        this.texture590 = new model_1.Rectangle(1664, 1696, 128, 96);\r\n\t        this.texture591 = new model_1.Rectangle(1792, 1696, 128, 96);\r\n\t        this.texture592 = new model_1.Rectangle(1408, 1824, 128, 96);\r\n\t        this.texture593 = new model_1.Rectangle(1536, 1824, 128, 96);\r\n\t        this.texture594 = new model_1.Rectangle(1664, 1824, 128, 96);\r\n\t        this.texture595 = new model_1.Rectangle(1792, 1824, 128, 96);\r\n\t        this.texture596 = new model_1.Rectangle(1408, 1952, 128, 96);\r\n\t        this.texture597 = new model_1.Rectangle(1664, 1952, 128, 96);\r\n\t        this.texture598 = new model_1.Rectangle(1792, 1952, 128, 96);\r\n\t        this.texture600 = new model_1.Rectangle(544, 0, 96, 96);\r\n\t        this.texture601 = new model_1.Rectangle(640, 0, 96, 96);\r\n\t        this.texture602 = new model_1.Rectangle(736, 0, 96, 96);\r\n\t        this.texture603 = new model_1.Rectangle(832, 0, 96, 96);\r\n\t        this.texture604 = new model_1.Rectangle(544, 96, 96, 96);\r\n\t        this.texture605 = new model_1.Rectangle(640, 96, 96, 96);\r\n\t        this.texture606 = new model_1.Rectangle(736, 96, 96, 96);\r\n\t        this.texture607 = new model_1.Rectangle(832, 96, 96, 96);\r\n\t    }\r\n\t    TextureMapper.prototype.constrcuctor = function () {\r\n\t        if (TextureMapper.instance) {\r\n\t            throw new Error(\"Static class cant be instanced!\");\r\n\t        }\r\n\t        TextureMapper.instance = this;\r\n\t    };\r\n\t    TextureMapper.getInstance = function () {\r\n\t        return TextureMapper.instance;\r\n\t    };\r\n\t    TextureMapper.prototype.mapTexture = function (textureType) {\r\n\t        switch (textureType) {\r\n\t            case 0: return this.texture0;\r\n\t            case 1: return this.texture1;\r\n\t            case 2: return this.texture2;\r\n\t            case 3: return this.texture3;\r\n\t            case 4: return this.texture4;\r\n\t            case 5: return this.texture5;\r\n\t            case 6: return this.texture6;\r\n\t            case 7: return this.texture7;\r\n\t            case 8: return this.texture8;\r\n\t            case 9: return this.texture9;\r\n\t            case 10: return this.texture10;\r\n\t            case 11: return this.texture11;\r\n\t            case 12: return this.texture12;\r\n\t            case 13: return this.texture13;\r\n\t            case 14: return this.texture14;\r\n\t            case 15: return this.texture15;\r\n\t            case 16: return this.texture16;\r\n\t            case 17: return this.texture17;\r\n\t            case 18: return this.texture18;\r\n\t            case 19: return this.texture19;\r\n\t            case 20: return this.texture20;\r\n\t            case 21: return this.texture21;\r\n\t            case 22: return this.texture22;\r\n\t            case 23: return this.texture23;\r\n\t            case 24: return this.texture24;\r\n\t            case 25: return this.texture25;\r\n\t            case 26: return this.texture26;\r\n\t            case 50: return this.texture50;\r\n\t            case 51: return this.texture51;\r\n\t            case 52: return this.texture52;\r\n\t            case 53: return this.texture53;\r\n\t            case 54: return this.texture54;\r\n\t            case 55: return this.texture55;\r\n\t            case 56: return this.texture56;\r\n\t            case 57: return this.texture57;\r\n\t            case 58: return this.texture58;\r\n\t            case 59: return this.texture59;\r\n\t            case 60: return this.texture60;\r\n\t            case 61: return this.texture61;\r\n\t            case 62: return this.texture62;\r\n\t            case 63: return this.texture63;\r\n\t            case 100: return this.texture100;\r\n\t            case 101: return this.texture101;\r\n\t            case 102: return this.texture102;\r\n\t            case 103: return this.texture103;\r\n\t            case 104: return this.texture104;\r\n\t            case 105: return this.texture105;\r\n\t            case 106: return this.texture106;\r\n\t            case 107: return this.texture107;\r\n\t            case 108: return this.texture108;\r\n\t            case 109: return this.texture109;\r\n\t            case 110: return this.texture110;\r\n\t            case 111: return this.texture111;\r\n\t            case 112: return this.texture112;\r\n\t            case 113: return this.texture113;\r\n\t            case 114: return this.texture114;\r\n\t            case 115: return this.texture115;\r\n\t            case 116: return this.texture116;\r\n\t            case 117: return this.texture117;\r\n\t            case 118: return this.texture118;\r\n\t            case 119: return this.texture119;\r\n\t            case 120: return this.texture120;\r\n\t            case 121: return this.texture121;\r\n\t            case 122: return this.texture122;\r\n\t            case 123: return this.texture123;\r\n\t            case 124: return this.texture124;\r\n\t            case 125: return this.texture125;\r\n\t            case 126: return this.texture126;\r\n\t            case 127: return this.texture127;\r\n\t            case 128: return this.texture128;\r\n\t            case 129: return this.texture129;\r\n\t            case 130: return this.texture130;\r\n\t            case 131: return this.texture131;\r\n\t            case 132: return this.texture132;\r\n\t            case 133: return this.texture133;\r\n\t            case 134: return this.texture134;\r\n\t            case 135: return this.texture135;\r\n\t            case 136: return this.texture136;\r\n\t            case 137: return this.texture137;\r\n\t            case 138: return this.texture138;\r\n\t            case 139: return this.texture139;\r\n\t            case 140: return this.texture140;\r\n\t            case 141: return this.texture141;\r\n\t            case 142: return this.texture142;\r\n\t            case 143: return this.texture143;\r\n\t            case 144: return this.texture144;\r\n\t            case 145: return this.texture145;\r\n\t            case 146: return this.texture146;\r\n\t            case 147: return this.texture147;\r\n\t            case 148: return this.texture148;\r\n\t            case 149: return this.texture149;\r\n\t            case 150: return this.texture150;\r\n\t            case 151: return this.texture151;\r\n\t            case 152: return this.texture152;\r\n\t            case 153: return this.texture153;\r\n\t            case 154: return this.texture154;\r\n\t            case 155: return this.texture155;\r\n\t            case 156: return this.texture156;\r\n\t            case 157: return this.texture157;\r\n\t            case 158: return this.texture158;\r\n\t            case 159: return this.texture159;\r\n\t            case 160: return this.texture160;\r\n\t            case 161: return this.texture161;\r\n\t            case 162: return this.texture162;\r\n\t            case 163: return this.texture163;\r\n\t            case 165: return this.texture165;\r\n\t            case 166: return this.texture166;\r\n\t            case 167: return this.texture167;\r\n\t            case 168: return this.texture168;\r\n\t            case 169: return this.texture169;\r\n\t            case 170: return this.texture170;\r\n\t            case 171: return this.texture171;\r\n\t            case 172: return this.texture172;\r\n\t            case 173: return this.texture173;\r\n\t            case 174: return this.texture174;\r\n\t            case 175: return this.texture175;\r\n\t            case 176: return this.texture176;\r\n\t            case 177: return this.texture177;\r\n\t            case 178: return this.texture178;\r\n\t            case 179: return this.texture179;\r\n\t            case 180: return this.texture180;\r\n\t            case 181: return this.texture181;\r\n\t            case 182: return this.texture182;\r\n\t            case 183: return this.texture183;\r\n\t            case 184: return this.texture184;\r\n\t            case 185: return this.texture185;\r\n\t            case 186: return this.texture186;\r\n\t            case 187: return this.texture187;\r\n\t            case 188: return this.texture188;\r\n\t            case 189: return this.texture189;\r\n\t            case 190: return this.texture190;\r\n\t            case 191: return this.texture191;\r\n\t            case 192: return this.texture192;\r\n\t            case 193: return this.texture193;\r\n\t            case 194: return this.texture194;\r\n\t            case 195: return this.texture195;\r\n\t            case 196: return this.texture196;\r\n\t            case 197: return this.texture197;\r\n\t            case 198: return this.texture198;\r\n\t            case 199: return this.texture199;\r\n\t            case 200: return this.texture200;\r\n\t            case 201: return this.texture201;\r\n\t            case 202: return this.texture202;\r\n\t            case 203: return this.texture203;\r\n\t            case 204: return this.texture204;\r\n\t            case 205: return this.texture205;\r\n\t            case 206: return this.texture206;\r\n\t            case 207: return this.texture207;\r\n\t            case 208: return this.texture208;\r\n\t            case 209: return this.texture209;\r\n\t            case 210: return this.texture210;\r\n\t            case 211: return this.texture211;\r\n\t            case 212: return this.texture212;\r\n\t            case 214: return this.texture214;\r\n\t            case 215: return this.texture215;\r\n\t            case 216: return this.texture216;\r\n\t            case 217: return this.texture217;\r\n\t            case 218: return this.texture218;\r\n\t            case 219: return this.texture219;\r\n\t            case 220: return this.texture220;\r\n\t            case 221: return this.texture221;\r\n\t            case 222: return this.texture222;\r\n\t            case 223: return this.texture223;\r\n\t            case 224: return this.texture224;\r\n\t            case 225: return this.texture225;\r\n\t            case 226: return this.texture226;\r\n\t            case 227: return this.texture227;\r\n\t            case 228: return this.texture228;\r\n\t            case 229: return this.texture229;\r\n\t            case 230: return this.texture230;\r\n\t            case 231: return this.texture231;\r\n\t            case 232: return this.texture232;\r\n\t            case 233: return this.texture233;\r\n\t            case 234: return this.texture234;\r\n\t            case 235: return this.texture235;\r\n\t            case 236: return this.texture236;\r\n\t            case 237: return this.texture237;\r\n\t            case 238: return this.texture238;\r\n\t            case 239: return this.texture239;\r\n\t            case 240: return this.texture240;\r\n\t            case 241: return this.texture241;\r\n\t            case 242: return this.texture242;\r\n\t            case 243: return this.texture243;\r\n\t            case 244: return this.texture244;\r\n\t            case 245: return this.texture245;\r\n\t            case 246: return this.texture246;\r\n\t            case 247: return this.texture247;\r\n\t            case 248: return this.texture248;\r\n\t            case 249: return this.texture249;\r\n\t            case 250: return this.texture250;\r\n\t            case 251: return this.texture251;\r\n\t            case 252: return this.texture252;\r\n\t            case 253: return this.texture253;\r\n\t            case 254: return this.texture254;\r\n\t            case 255: return this.texture255;\r\n\t            case 256: return this.texture256;\r\n\t            case 257: return this.texture257;\r\n\t            case 262: return this.texture262;\r\n\t            case 263: return this.texture263;\r\n\t            case 264: return this.texture264;\r\n\t            case 265: return this.texture265;\r\n\t            case 266: return this.texture266;\r\n\t            case 267: return this.texture267;\r\n\t            case 268: return this.texture268;\r\n\t            case 269: return this.texture269;\r\n\t            case 270: return this.texture270;\r\n\t            case 271: return this.texture271;\r\n\t            case 272: return this.texture272;\r\n\t            case 273: return this.texture273;\r\n\t            case 274: return this.texture274;\r\n\t            case 275: return this.texture275;\r\n\t            case 276: return this.texture276;\r\n\t            case 277: return this.texture277;\r\n\t            case 278: return this.texture278;\r\n\t            case 279: return this.texture279;\r\n\t            case 280: return this.texture280;\r\n\t            case 281: return this.texture281;\r\n\t            case 282: return this.texture282;\r\n\t            case 283: return this.texture283;\r\n\t            case 284: return this.texture284;\r\n\t            case 285: return this.texture285;\r\n\t            case 286: return this.texture286;\r\n\t            case 287: return this.texture287;\r\n\t            case 288: return this.texture288;\r\n\t            case 289: return this.texture289;\r\n\t            case 290: return this.texture290;\r\n\t            case 291: return this.texture291;\r\n\t            case 292: return this.texture292;\r\n\t            case 293: return this.texture293;\r\n\t            case 294: return this.texture294;\r\n\t            case 295: return this.texture295;\r\n\t            case 296: return this.texture296;\r\n\t            case 297: return this.texture297;\r\n\t            case 298: return this.texture298;\r\n\t            case 299: return this.texture299;\r\n\t            case 300: return this.texture300;\r\n\t            case 301: return this.texture301;\r\n\t            case 302: return this.texture302;\r\n\t            case 303: return this.texture303;\r\n\t            case 304: return this.texture304;\r\n\t            case 305: return this.texture305;\r\n\t            case 306: return this.texture306;\r\n\t            case 500: return this.texture500;\r\n\t            case 550: return this.texture550;\r\n\t            case 551: return this.texture551;\r\n\t            case 552: return this.texture552;\r\n\t            case 553: return this.texture553;\r\n\t            case 554: return this.texture554;\r\n\t            case 555: return this.texture555;\r\n\t            case 556: return this.texture556;\r\n\t            case 557: return this.texture557;\r\n\t            case 558: return this.texture558;\r\n\t            case 560: return this.texture560;\r\n\t            case 561: return this.texture561;\r\n\t            case 562: return this.texture562;\r\n\t            case 563: return this.texture563;\r\n\t            case 564: return this.texture564;\r\n\t            case 565: return this.texture565;\r\n\t            case 566: return this.texture566;\r\n\t            case 567: return this.texture567;\r\n\t            case 568: return this.texture568;\r\n\t            case 569: return this.texture569;\r\n\t            case 570: return this.texture570;\r\n\t            case 571: return this.texture571;\r\n\t            case 572: return this.texture572;\r\n\t            case 573: return this.texture573;\r\n\t            case 574: return this.texture574;\r\n\t            case 575: return this.texture575;\r\n\t            case 576: return this.texture576;\r\n\t            case 577: return this.texture577;\r\n\t            case 578: return this.texture578;\r\n\t            case 579: return this.texture579;\r\n\t            case 580: return this.texture580;\r\n\t            case 581: return this.texture581;\r\n\t            case 582: return this.texture582;\r\n\t            case 583: return this.texture583;\r\n\t            case 584: return this.texture584;\r\n\t            case 585: return this.texture585;\r\n\t            case 586: return this.texture586;\r\n\t            case 587: return this.texture587;\r\n\t            case 588: return this.texture588;\r\n\t            case 589: return this.texture589;\r\n\t            case 590: return this.texture590;\r\n\t            case 591: return this.texture591;\r\n\t            case 592: return this.texture592;\r\n\t            case 593: return this.texture593;\r\n\t            case 594: return this.texture594;\r\n\t            case 595: return this.texture595;\r\n\t            case 596: return this.texture596;\r\n\t            case 597: return this.texture597;\r\n\t            case 598: return this.texture598;\r\n\t            case 600: return this.texture600;\r\n\t            case 601: return this.texture601;\r\n\t            case 602: return this.texture602;\r\n\t            case 603: return this.texture603;\r\n\t            case 604: return this.texture604;\r\n\t            case 605: return this.texture605;\r\n\t            case 606: return this.texture606;\r\n\t            case 607: return this.texture607;\r\n\t        }\r\n\t    };\r\n\t    TextureMapper.instance = new TextureMapper();\r\n\t    return TextureMapper;\r\n\t}());\r\n\texports.TextureMapper = TextureMapper;\r\n\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Matrix3 = (function () {\r\n\t    function Matrix3() {\r\n\t    }\r\n\t    Matrix3.prototype.createIdentityMatrix = function () {\r\n\t        return [\r\n\t            1, 0, 0,\r\n\t            0, 1, 0,\r\n\t            0, 0, 1\r\n\t        ];\r\n\t    };\r\n\t    Matrix3.createProjectionMatrix = function (width, height) {\r\n\t        return [\r\n\t            2 / width, 0, 0,\r\n\t            0, -2 / height, 0,\r\n\t            -1, 1, 1\r\n\t        ];\r\n\t    };\r\n\t    Matrix3.createTranslationMatrix = function (tx, ty) {\r\n\t        return [\r\n\t            1, 0, 0,\r\n\t            0, 1, 0,\r\n\t            tx, ty, 1\r\n\t        ];\r\n\t    };\r\n\t    Matrix3.createRotationMatrix = function (angleInRadians) {\r\n\t        var c = Math.cos(angleInRadians);\r\n\t        var s = Math.sin(angleInRadians);\r\n\t        return [\r\n\t            c, -s, 0,\r\n\t            s, c, 0,\r\n\t            0, 0, 1\r\n\t        ];\r\n\t    };\r\n\t    Matrix3.createScaleMatrix = function (sx, sy) {\r\n\t        return [\r\n\t            sx, 0, 0,\r\n\t            0, sy, 0,\r\n\t            0, 0, 1\r\n\t        ];\r\n\t    };\r\n\t    Matrix3.multiply = function (a, b) {\r\n\t        var a00 = a[0 * 3 + 0];\r\n\t        var a01 = a[0 * 3 + 1];\r\n\t        var a02 = a[0 * 3 + 2];\r\n\t        var a10 = a[1 * 3 + 0];\r\n\t        var a11 = a[1 * 3 + 1];\r\n\t        var a12 = a[1 * 3 + 2];\r\n\t        var a20 = a[2 * 3 + 0];\r\n\t        var a21 = a[2 * 3 + 1];\r\n\t        var a22 = a[2 * 3 + 2];\r\n\t        var b00 = b[0 * 3 + 0];\r\n\t        var b01 = b[0 * 3 + 1];\r\n\t        var b02 = b[0 * 3 + 2];\r\n\t        var b10 = b[1 * 3 + 0];\r\n\t        var b11 = b[1 * 3 + 1];\r\n\t        var b12 = b[1 * 3 + 2];\r\n\t        var b20 = b[2 * 3 + 0];\r\n\t        var b21 = b[2 * 3 + 1];\r\n\t        var b22 = b[2 * 3 + 2];\r\n\t        return [a00 * b00 + a01 * b10 + a02 * b20,\r\n\t            a00 * b01 + a01 * b11 + a02 * b21,\r\n\t            a00 * b02 + a01 * b12 + a02 * b22,\r\n\t            a10 * b00 + a11 * b10 + a12 * b20,\r\n\t            a10 * b01 + a11 * b11 + a12 * b21,\r\n\t            a10 * b02 + a11 * b12 + a12 * b22,\r\n\t            a20 * b00 + a21 * b10 + a22 * b20,\r\n\t            a20 * b01 + a21 * b11 + a22 * b21,\r\n\t            a20 * b02 + a21 * b12 + a22 * b22];\r\n\t    };\r\n\t    Matrix3.positionConvertion = function (x, y, matrix) {\r\n\t        x = x * matrix[0] + y * matrix[3] + 1 * matrix[6];\r\n\t        y = x * matrix[1] + y * matrix[4] + 1 * matrix[7];\r\n\t        return [x, y];\r\n\t    };\r\n\t    return Matrix3;\r\n\t}());\r\n\texports.Matrix3 = Matrix3;\r\n\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DynamicRenderCall = (function () {\r\n\t    function DynamicRenderCall() {\r\n\t        this.vertecies = [];\r\n\t        this.indecies = [];\r\n\t        this.textureCoords = [];\r\n\t        this.matrices = [];\r\n\t    }\r\n\t    return DynamicRenderCall;\r\n\t}());\r\n\texports.DynamicRenderCall = DynamicRenderCall;\r\n\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar ParticleRenderer = (function () {\r\n\t    function ParticleRenderer(context, particleHandler) {\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.context = context;\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.gl = this.context.gl;\r\n\t        //this.shaderProgram = this.context.particleProgram;\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 0, \"a_relativeTime\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 1, \"a_lifetime\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 2, \"a_startPosition\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 3, \"a_endPosition\");\r\n\t        this.relativeTimeAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_relativeTime\");\r\n\t        this.lifeTimeAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_lifetime\");\r\n\t        this.startPositionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_startPosition\");\r\n\t        this.endPositionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_endPosition\");\r\n\t        this.particleTexture = this.gl.getUniformLocation(this.shaderProgram, \"u_particleTexture\");\r\n\t        this.colorLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_color\");\r\n\t        this.pointEndPositionsBuffer = this.gl.createBuffer();\r\n\t        this.pointStartPositionsBuffer = this.gl.createBuffer();\r\n\t        this.pointLifetimesBuffer = this.gl.createBuffer();\r\n\t        this.pointRelativeTimeBuffer = this.gl.createBuffer();\r\n\t    }\r\n\t    ParticleRenderer.prototype.render = function (renderCalls) {\r\n\t        for (var _i = 0, renderCalls_1 = renderCalls; _i < renderCalls_1.length; _i++) {\r\n\t            var call = renderCalls_1[_i];\r\n\t            if (call.length > 0) {\r\n\t                this.gl.useProgram(this.shaderProgram);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointRelativeTimeBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.relativeTime), this.gl.STATIC_DRAW);\r\n\t                this.pointRelativeTimeBuffer.itemSize = 1;\r\n\t                this.pointRelativeTimeBuffer.numItems = call.length;\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointLifetimesBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.lifetimes), this.gl.STATIC_DRAW);\r\n\t                this.pointLifetimesBuffer.itemSize = 1;\r\n\t                this.pointLifetimesBuffer.numItems = call.length;\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointStartPositionsBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.startPositions), this.gl.STATIC_DRAW);\r\n\t                this.pointStartPositionsBuffer.itemSize = 3;\r\n\t                this.pointStartPositionsBuffer.numItems = call.length;\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointEndPositionsBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.endPositions), this.gl.STATIC_DRAW);\r\n\t                this.pointEndPositionsBuffer.itemSize = 3;\r\n\t                this.pointEndPositionsBuffer.numItems = call.length;\r\n\t                this.gl.enableVertexAttribArray(this.lifeTimeAttribute);\r\n\t                this.gl.enableVertexAttribArray(this.relativeTimeAttribute);\r\n\t                this.gl.enableVertexAttribArray(this.startPositionLocation);\r\n\t                this.gl.enableVertexAttribArray(this.endPositionLocation);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointRelativeTimeBuffer);\r\n\t                this.gl.vertexAttribPointer(this.relativeTimeAttribute, this.pointRelativeTimeBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointLifetimesBuffer);\r\n\t                this.gl.vertexAttribPointer(this.lifeTimeAttribute, this.pointLifetimesBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointStartPositionsBuffer);\r\n\t                this.gl.vertexAttribPointer(this.startPositionLocation, this.pointStartPositionsBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointEndPositionsBuffer);\r\n\t                this.gl.vertexAttribPointer(this.endPositionLocation, this.pointEndPositionsBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.activeTexture(this.gl.TEXTURE0);\r\n\t                if (call.type == model_1.SpellType.frostBlast) {\r\n\t                    this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.frostParticelTexture);\r\n\t                }\r\n\t                else {\r\n\t                    this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.genericParticleTexture);\r\n\t                }\r\n\t                this.gl.uniform1i(this.particleTexture, 0);\r\n\t                this.gl.uniform4f(this.colorLocation, call.color[0], call.color[1], call.color[2], call.color[3]);\r\n\t                this.gl.drawArrays(this.gl.POINTS, 0, this.pointLifetimesBuffer.numItems);\r\n\t                this.gl.disableVertexAttribArray(this.lifeTimeAttribute);\r\n\t                this.gl.disableVertexAttribArray(this.relativeTimeAttribute);\r\n\t                this.gl.disableVertexAttribArray(this.startPositionLocation);\r\n\t                this.gl.disableVertexAttribArray(this.endPositionLocation);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return ParticleRenderer;\r\n\t}());\r\n\texports.ParticleRenderer = ParticleRenderer;\r\n\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar _1 = __webpack_require__(368);\r\n\tvar CollisionDetection = (function () {\r\n\t    function CollisionDetection() {\r\n\t        if (CollisionDetection.instance) {\r\n\t            throw new Error(\"Static class cant be instanced!\");\r\n\t        }\r\n\t        CollisionDetection.instance = this;\r\n\t    }\r\n\t    CollisionDetection.getInstance = function () {\r\n\t        return CollisionDetection.instance;\r\n\t    };\r\n\t    CollisionDetection.prototype.createGrid = function (gameSize, collidables) {\r\n\t        this.gameSize = gameSize;\r\n\t        this.grid = new _1.Grid(25, this.gameSize);\r\n\t        for (var _i = 0, collidables_1 = collidables; _i < collidables_1.length; _i++) {\r\n\t            var collidable = collidables_1[_i];\r\n\t            this.grid.insert(collidable);\r\n\t        }\r\n\t    };\r\n\t    CollisionDetection.prototype.collisionDetection = function (tiles, dynamicTiles, character, frameVelocity, delta) {\r\n\t        var collisionData = this.checkCollision(tiles, dynamicTiles, character, frameVelocity, delta);\r\n\t        return collisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.fastCheckEnviroment = function (rect, tiles) {\r\n\t        var clear = true;\r\n\t        var possibleColls = this.grid.get(rect);\r\n\t        for (var _i = 0, possibleColls_1 = possibleColls; _i < possibleColls_1.length; _i++) {\r\n\t            var tile = possibleColls_1[_i];\r\n\t            if (this.aabbCheck(rect, tile)) {\r\n\t                clear = false;\r\n\t            }\r\n\t        }\r\n\t        return clear;\r\n\t    };\r\n\t    CollisionDetection.prototype.checkProjectileCollisionX = function (collidables, projectile, frameVelocity, staticCollisions, checkClose) {\r\n\t        var broadphasebox = this.getSweptBroadphaseBoxX(projectile.collisionArea, frameVelocity);\r\n\t        var possibleColls;\r\n\t        if (staticCollisions) {\r\n\t            possibleColls = this.grid.get(broadphasebox);\r\n\t        }\r\n\t        else {\r\n\t            possibleColls = collidables;\r\n\t        }\r\n\t        var collisionData = new _1.CollisionData();\r\n\t        for (var _i = 0, possibleColls_2 = possibleColls; _i < possibleColls_2.length; _i++) {\r\n\t            var collidable = possibleColls_2[_i];\r\n\t            if (this.aabbCheck(broadphasebox, collidable)) {\r\n\t                collisionData = this.aabbCollisionX(projectile.collisionArea, collidable, frameVelocity, collisionData);\r\n\t            }\r\n\t        }\r\n\t        if (checkClose) {\r\n\t            for (var _a = 0, possibleColls_3 = possibleColls; _a < possibleColls_3.length; _a++) {\r\n\t                var collidable = possibleColls_3[_a];\r\n\t                if (this.aabbCheck(projectile.collisionArea, collidable)) {\r\n\t                    collisionData.wallCollision = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return collisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.checkProjectileCollisionY = function (collidables, projectile, frameVelocity, staticCollisions) {\r\n\t        var broadphasebox = this.getSweptBroadphaseBoxY(projectile.collisionArea, frameVelocity);\r\n\t        var possibleColls;\r\n\t        if (staticCollisions) {\r\n\t            possibleColls = this.grid.get(broadphasebox);\r\n\t        }\r\n\t        else {\r\n\t            possibleColls = collidables;\r\n\t        }\r\n\t        var collisionData = new _1.CollisionData();\r\n\t        for (var _i = 0, possibleColls_4 = possibleColls; _i < possibleColls_4.length; _i++) {\r\n\t            var collidable = possibleColls_4[_i];\r\n\t            if (this.aabbCheck(broadphasebox, collidable)) {\r\n\t                collisionData = this.aabbCollisionY(projectile.collisionArea, collidable, frameVelocity, collisionData);\r\n\t            }\r\n\t        }\r\n\t        return collisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.checkCollision = function (tiles, dynamicTiles, character, frameVelocity, delta) {\r\n\t        var tilesToCheck = tiles;\r\n\t        var collisionData = new _1.CollisionData();\r\n\t        var dynamicCollisionData = new _1.CollisionData();\r\n\t        var rect1 = character.getCollisionArea();\r\n\t        var broadphasebox = this.getSweptBroadphaseBoxY(rect1, frameVelocity);\r\n\t        var possibleColls = this.grid.get(broadphasebox);\r\n\t        for (var _i = 0, dynamicTiles_1 = dynamicTiles; _i < dynamicTiles_1.length; _i++) {\r\n\t            var dynamicTile = dynamicTiles_1[_i];\r\n\t            var deltaVelocity = new model_1.Vector(frameVelocity.x - dynamicTile.velocity.x * delta, frameVelocity.y - dynamicTile.velocity.y * delta);\r\n\t            dynamicCollisionData = this.checkDynamicTileY(dynamicTile, rect1, character, deltaVelocity, dynamicCollisionData, delta);\r\n\t        }\r\n\t        for (var _a = 0, possibleColls_5 = possibleColls; _a < possibleColls_5.length; _a++) {\r\n\t            var tile = possibleColls_5[_a];\r\n\t            if (this.aabbCheck(broadphasebox, tile)) {\r\n\t                collisionData = this.aabbCollisionY(rect1, tile, frameVelocity, collisionData);\r\n\t            }\r\n\t        }\r\n\t        if (dynamicCollisionData.groundCollision) {\r\n\t            collisionData = dynamicCollisionData;\r\n\t            frameVelocity.y = dynamicCollisionData.velocityY;\r\n\t        }\r\n\t        character.position.y += frameVelocity.y * collisionData.collisionTimeY;\r\n\t        rect1 = character.getCollisionArea();\r\n\t        broadphasebox = this.getSweptBroadphaseBoxX(rect1, frameVelocity);\r\n\t        for (var _b = 0, dynamicTiles_2 = dynamicTiles; _b < dynamicTiles_2.length; _b++) {\r\n\t            var dynamicTile = dynamicTiles_2[_b];\r\n\t            var deltaVelocity = new model_1.Vector(frameVelocity.x - dynamicTile.velocity.x * delta, frameVelocity.y - dynamicTile.velocity.y * delta);\r\n\t            dynamicCollisionData = this.checkDynamicTileX(dynamicTile, rect1, character, deltaVelocity, dynamicCollisionData, delta);\r\n\t        }\r\n\t        for (var _c = 0, tilesToCheck_1 = tilesToCheck; _c < tilesToCheck_1.length; _c++) {\r\n\t            var tile = tilesToCheck_1[_c];\r\n\t            if (this.aabbCheck(broadphasebox, tile)) {\r\n\t                collisionData = this.aabbCollisionX(character.getCollisionArea(), tile, frameVelocity, collisionData);\r\n\t            }\r\n\t        }\r\n\t        if (dynamicCollisionData.wallCollision) {\r\n\t            collisionData.wallCollision = dynamicCollisionData.wallCollision;\r\n\t            collisionData.collisionTimeX = dynamicCollisionData.collisionTimeX;\r\n\t            frameVelocity.x = dynamicCollisionData.velocityX;\r\n\t        }\r\n\t        character.position.x += frameVelocity.x * collisionData.collisionTimeX;\r\n\t        collisionData.remainingTime = 1 - collisionData.collisionTimeY;\r\n\t        return collisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.getClosestX = function (rect, tiles, inverse) {\r\n\t        var coliidables = [];\r\n\t        var closestX = inverse ? 0 : this.gameSize.x;\r\n\t        var possibleColls = this.grid.get(rect);\r\n\t        for (var _i = 0, possibleColls_6 = possibleColls; _i < possibleColls_6.length; _i++) {\r\n\t            var tile = possibleColls_6[_i];\r\n\t            if (this.aabbCheck(rect, tile)) {\r\n\t                if (inverse) {\r\n\t                    var tileVal = tile.x + tile.width;\r\n\t                    if (tileVal > closestX) {\r\n\t                        closestX = tileVal;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    var tileVal = tile.x;\r\n\t                    if (tileVal < closestX) {\r\n\t                        closestX = tileVal;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return closestX;\r\n\t    };\r\n\t    CollisionDetection.prototype.checkCoutOfBounds = function (character, area) {\r\n\t        var rect = new model_1.Rectangle(0, 0, area[0], area[1]);\r\n\t        if (!this.aabbCheck(character.getCollisionArea(), rect)) {\r\n\t            character.dead = true;\r\n\t        }\r\n\t    };\r\n\t    CollisionDetection.prototype.aabbCheck = function (rect1, rect2) {\r\n\t        return (rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.height + rect1.y > rect2.y);\r\n\t    };\r\n\t    CollisionDetection.prototype.aabbCheckS = function (rect1, areas) {\r\n\t        for (var _i = 0, areas_1 = areas; _i < areas_1.length; _i++) {\r\n\t            var rect2 = areas_1[_i];\r\n\t            if ((rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.height + rect1.y > rect2.y)) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    CollisionDetection.prototype.checkDynamicTileY = function (dynamicTile, characterCollisionArea, character, frameVelocity, dynamicCollisionData, delta) {\r\n\t        var broadphasebox = this.getSweptBroadphaseBoxY(characterCollisionArea, frameVelocity);\r\n\t        if (this.aabbCheck(broadphasebox, dynamicTile.tile)) {\r\n\t            dynamicCollisionData = this.aabbCollisionY(characterCollisionArea, dynamicTile.tile, frameVelocity, dynamicCollisionData);\r\n\t            if (dynamicCollisionData.groundCollision) {\r\n\t                dynamicCollisionData.lift = dynamicTile;\r\n\t            }\r\n\t        }\r\n\t        return dynamicCollisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.checkDynamicTileX = function (dynamicTile, characterCollisionArea, character, frameVelocity, dynamicCollisionData, delta) {\r\n\t        var broadphasebox = this.getSweptBroadphaseBoxX(characterCollisionArea, frameVelocity);\r\n\t        if (this.aabbCheck(broadphasebox, dynamicTile.tile)) {\r\n\t            dynamicCollisionData = this.aabbCollisionX(characterCollisionArea, dynamicTile.tile, frameVelocity, dynamicCollisionData);\r\n\t        }\r\n\t        return dynamicCollisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.getSweptBroadphaseBoxX = function (rect, velocity) {\r\n\t        var x = rect.x + velocity.x;\r\n\t        var y = rect.y;\r\n\t        var width = rect.width + Math.abs(velocity.x);\r\n\t        var height = rect.height;\r\n\t        return new model_1.Rectangle(x, y, width, height);\r\n\t    };\r\n\t    CollisionDetection.prototype.getSweptBroadphaseBoxY = function (rect, velocity) {\r\n\t        var x = rect.x;\r\n\t        var y = rect.y + velocity.y;\r\n\t        var width = rect.width;\r\n\t        var height = rect.height + Math.abs(velocity.y);\r\n\t        return new model_1.Rectangle(x, y, width, height);\r\n\t    };\r\n\t    CollisionDetection.prototype.aabbCollisionY = function (rect1, rect2, velocity, collisionData) {\r\n\t        var yInvEntry;\r\n\t        var yInvExit;\r\n\t        if (velocity.y > 0) {\r\n\t            yInvEntry = (rect2.y) - (rect1.y + rect1.height);\r\n\t            yInvExit = (rect2.y + rect2.height) - (rect1.y);\r\n\t        }\r\n\t        else {\r\n\t            yInvEntry = (rect2.y + rect2.height) - (rect1.y);\r\n\t            yInvExit = (rect2.y) - (rect1.y + rect1.height);\r\n\t        }\r\n\t        var yEntry;\r\n\t        var yExit;\r\n\t        if (velocity.y == 0) {\r\n\t            yEntry = -Number.MAX_SAFE_INTEGER;\r\n\t            yExit = Number.MAX_SAFE_INTEGER;\r\n\t        }\r\n\t        else {\r\n\t            yEntry = yInvEntry / velocity.y;\r\n\t            yExit = yInvExit / velocity.y;\r\n\t        }\r\n\t        var entryTime = yEntry;\r\n\t        var exitTime = yExit;\r\n\t        if (entryTime > exitTime || yEntry < 0 || yEntry > 1) {\r\n\t            return collisionData;\r\n\t        }\r\n\t        else {\r\n\t            if (velocity.y < 0) {\r\n\t                collisionData.normalY = 1;\r\n\t            }\r\n\t            else {\r\n\t                collisionData.normalY = -1;\r\n\t            }\r\n\t            if (collisionData.collisionTimeY > entryTime) {\r\n\t                collisionData.collisionTimeY = entryTime;\r\n\t                collisionData.velocityY = velocity.y;\r\n\t            }\r\n\t            if (velocity.y > 20) {\r\n\t                collisionData.fallDeath = true;\r\n\t            }\r\n\t            collisionData.groundCollision = true;\r\n\t        }\r\n\t        return collisionData;\r\n\t    };\r\n\t    CollisionDetection.prototype.aabbCollisionX = function (rect1, rect2, velocity, collisionData) {\r\n\t        var xInvEntry;\r\n\t        var xInvExit;\r\n\t        if (velocity.x > 0) {\r\n\t            xInvEntry = (rect2.x) - (rect1.x + rect1.width);\r\n\t            xInvExit = (rect2.x + rect2.width) - (rect1.x);\r\n\t        }\r\n\t        else {\r\n\t            xInvEntry = (rect2.x + rect2.width) - (rect1.x);\r\n\t            xInvExit = (rect2.x) - (rect1.x + rect1.width);\r\n\t        }\r\n\t        var xEntry;\r\n\t        var xExit;\r\n\t        if (velocity.x == 0) {\r\n\t            xEntry = -Number.MAX_SAFE_INTEGER;\r\n\t            xExit = Number.MAX_SAFE_INTEGER;\r\n\t        }\r\n\t        else {\r\n\t            xEntry = xInvEntry / velocity.x;\r\n\t            xExit = xInvExit / velocity.x;\r\n\t        }\r\n\t        var entryTime = xEntry;\r\n\t        var exitTime = xExit;\r\n\t        if (entryTime > exitTime || xEntry < 0 || xEntry > 1) {\r\n\t            return collisionData;\r\n\t        }\r\n\t        else {\r\n\t            if (xInvEntry < 0) {\r\n\t                collisionData.normalX = 1;\r\n\t            }\r\n\t            else {\r\n\t                collisionData.normalX = -1;\r\n\t            }\r\n\t            if (collisionData.collisionTimeX > entryTime) {\r\n\t                collisionData.collisionTimeX = entryTime;\r\n\t                collisionData.velocityX = velocity.x;\r\n\t            }\r\n\t            collisionData.wallCollision = true;\r\n\t        }\r\n\t        return collisionData;\r\n\t    };\r\n\t    CollisionDetection.instance = new CollisionDetection();\r\n\t    return CollisionDetection;\r\n\t}());\r\n\texports.CollisionDetection = CollisionDetection;\r\n\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar collisionData_1 = __webpack_require__(369);\r\n\texports.CollisionData = collisionData_1.CollisionData;\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\texports.CollisionDetection = collisionDetection_1.CollisionDetection;\r\n\tvar grid_1 = __webpack_require__(370);\r\n\texports.Grid = grid_1.Grid;\r\n\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar CollisionData = (function () {\r\n\t    function CollisionData() {\r\n\t        this.normalX = 0;\r\n\t        this.normalY = 0;\r\n\t        this.collisionTimeY = 1;\r\n\t        this.collisionTimeX = 1;\r\n\t        this.remainingTime = 0;\r\n\t        this.wallCollision = false;\r\n\t        this.groundCollision = false;\r\n\t        this.lift = null;\r\n\t        this.fallDeath = false;\r\n\t    }\r\n\t    return CollisionData;\r\n\t}());\r\n\texports.CollisionData = CollisionData;\r\n\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Grid = (function () {\r\n\t    function Grid(size, canvasSize) {\r\n\t        this.grid = [];\r\n\t        this.gridSize = size;\r\n\t        this.maxX = canvasSize.x / this.gridSize;\r\n\t        this.maxY = canvasSize.y / this.gridSize;\r\n\t        for (var i = 0; i < this.maxX; i++) {\r\n\t            this.grid[i] = [];\r\n\t            for (var j = 0; j < this.maxY; j++) {\r\n\t                this.grid[i][j] = [];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    Grid.prototype.insert = function (rect) {\r\n\t        var coords = this.getGridCoordinates(rect);\r\n\t        for (var i = 0; i < coords[2]; i++) {\r\n\t            for (var j = 0; j < coords[3]; j++) {\r\n\t                this.grid[coords[0] + i][coords[1] + j].push(rect);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Grid.prototype.get = function (rect) {\r\n\t        var result = [];\r\n\t        var coords = this.getGridCoordinates(rect);\r\n\t        for (var i = 0; i < coords[2]; i++) {\r\n\t            for (var j = 0; j < coords[3]; j++) {\r\n\t                result.push.apply(result, this.grid[coords[0] + i][coords[1] + j]);\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    Grid.prototype.getGridCoordinates = function (rect) {\r\n\t        var x = Math.floor(rect.x / this.gridSize);\r\n\t        var y = Math.floor(rect.y / this.gridSize);\r\n\t        var xi = Math.ceil(rect.width / this.gridSize) + 1;\r\n\t        var yi = Math.ceil(rect.height / this.gridSize) + 1;\r\n\t        if (x < 0) {\r\n\t            x = 0;\r\n\t        }\r\n\t        if (y < 0) {\r\n\t            y = 0;\r\n\t        }\r\n\t        if (x + xi > this.maxX) {\r\n\t            xi = this.maxX - x;\r\n\t        }\r\n\t        if (y + yi > this.maxY) {\r\n\t            yi = this.maxY - y;\r\n\t        }\r\n\t        return [x, y, xi, yi];\r\n\t    };\r\n\t    return Grid;\r\n\t}());\r\n\texports.Grid = Grid;\r\n\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar FrameAnimation = (function (_super) {\r\n\t    __extends(FrameAnimation, _super);\r\n\t    function FrameAnimation(growthX, growthY, offsetX, offsetY, particleFunction, texturenumbers) {\r\n\t        _super.call(this, texturenumbers);\r\n\t        this.offsetY = 20;\r\n\t        this.offsetX = 10;\r\n\t        this.particleFunction = particleFunction;\r\n\t        this.growthX = growthX;\r\n\t        this.growthY = growthY;\r\n\t        this.offsetX = offsetX;\r\n\t        this.offsetY = offsetY;\r\n\t        this.lastFrameIndex = this.frameIndex;\r\n\t    }\r\n\t    FrameAnimation.prototype.next = function (delta) {\r\n\t        if (this.lastFrameIndex != this.frameIndex) {\r\n\t            this.lastFrameIndex = this.frameIndex;\r\n\t            this.offsetX += this.growthX;\r\n\t            this.offsetY += this.growthY;\r\n\t        }\r\n\t        this.particleFunction(new _1.Vector(this.areaToRender.x + this.offsetX, this.areaToRender.y - this.offsetY));\r\n\t        _super.prototype.next.call(this, delta);\r\n\t    };\r\n\t    return FrameAnimation;\r\n\t}(_1.Animation));\r\n\texports.FrameAnimation = FrameAnimation;\r\n\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (SpellType) {\r\n\t    SpellType[SpellType[\"fireball\"] = 1] = \"fireball\";\r\n\t    SpellType[SpellType[\"electricbolt\"] = 2] = \"electricbolt\";\r\n\t    SpellType[SpellType[\"frostBlast\"] = 3] = \"frostBlast\";\r\n\t    SpellType[SpellType[\"fireBlast\"] = 4] = \"fireBlast\";\r\n\t    SpellType[SpellType[\"shield\"] = 5] = \"shield\";\r\n\t    SpellType[SpellType[\"channelmagic\"] = 6] = \"channelmagic\";\r\n\t})(exports.SpellType || (exports.SpellType = {}));\r\n\tvar SpellType = exports.SpellType;\r\n\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar Spell = (function (_super) {\r\n\t    __extends(Spell, _super);\r\n\t    function Spell(velocity, area, animation, collisionRatio, distance, type) {\r\n\t        _super.call(this, velocity, area, animation, collisionRatio);\r\n\t        this.distance = distance;\r\n\t        this.type = type;\r\n\t    }\r\n\t    Spell.prototype.update = function (travelDistanceX, travelDistanceY, delta) {\r\n\t        _super.prototype.update.call(this, travelDistanceX, travelDistanceY, delta);\r\n\t        this.distance -= Math.abs(travelDistanceX);\r\n\t    };\r\n\t    return Spell;\r\n\t}(_1.Projectile));\r\n\texports.Spell = Spell;\r\n\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar gravity_1 = __webpack_require__(375);\r\n\tvar drag_1 = __webpack_require__(376);\r\n\tvar PhysicalProjectile = (function (_super) {\r\n\t    __extends(PhysicalProjectile, _super);\r\n\t    function PhysicalProjectile(velocity, area, animation, collisionRatio, collisionArea, angle) {\r\n\t        _super.call(this, velocity, area, animation, collisionRatio, collisionArea);\r\n\t        this.gravityStrength = 0.0025;\r\n\t        this.gravity = new gravity_1.Gravity(this.gravityStrength);\r\n\t        this.dragStrength = 0.0005;\r\n\t        this.drag = new drag_1.Drag(this.dragStrength);\r\n\t        this.angle = angle;\r\n\t    }\r\n\t    PhysicalProjectile.prototype.update = function (travelDistanceX, travelDistanceY, delta) {\r\n\t        _super.prototype.update.call(this, travelDistanceX, travelDistanceY, delta);\r\n\t    };\r\n\t    PhysicalProjectile.prototype.updateForces = function (delta) {\r\n\t        this.gravity.apply(this.velocity, delta);\r\n\t        this.drag.apply(this.velocity, delta);\r\n\t    };\r\n\t    PhysicalProjectile.prototype.onGroundCollision = function () {\r\n\t        if (this.animation instanceof _1.StaticRotationAnimation) {\r\n\t            if (this.animation.inverse) {\r\n\t                this.animation.angle = 0;\r\n\t            }\r\n\t            else {\r\n\t                this.animation.angle = Math.PI * 2;\r\n\t            }\r\n\t        }\r\n\t        if (this.extendedOnGroundCollision) {\r\n\t            this.extendedOnGroundCollision();\r\n\t        }\r\n\t    };\r\n\t    return PhysicalProjectile;\r\n\t}(_1.Projectile));\r\n\texports.PhysicalProjectile = PhysicalProjectile;\r\n\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Gravity = (function () {\r\n\t    function Gravity(strength) {\r\n\t        this.strength = 0;\r\n\t        this.strength = strength;\r\n\t    }\r\n\t    Gravity.prototype.apply = function (vector, delta) {\r\n\t        vector.y += this.strength * delta;\r\n\t    };\r\n\t    return Gravity;\r\n\t}());\r\n\texports.Gravity = Gravity;\r\n\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Drag = (function () {\r\n\t    function Drag(strength) {\r\n\t        this.strength = 0;\r\n\t        this.strength = strength;\r\n\t    }\r\n\t    Drag.prototype.apply = function (vector, delta) {\r\n\t        var deltaDrag = delta * this.strength;\r\n\t        if (vector.x > 0) {\r\n\t            vector.x -= deltaDrag;\r\n\t            if (vector.x < deltaDrag) {\r\n\t                vector.x = 0;\r\n\t            }\r\n\t        }\r\n\t        else if (vector.x < 0) {\r\n\t            vector.x += deltaDrag;\r\n\t            if (vector.x > deltaDrag) {\r\n\t                vector.x = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Drag;\r\n\t}());\r\n\texports.Drag = Drag;\r\n\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar Meele = (function (_super) {\r\n\t    __extends(Meele, _super);\r\n\t    function Meele(velocity, area, animation, collisionRatio) {\r\n\t        _super.call(this, velocity, area, animation, collisionRatio);\r\n\t    }\r\n\t    Meele.prototype.update = function (travelDistanceX, travelDistanceY, delta) {\r\n\t        _super.prototype.update.call(this, travelDistanceX, travelDistanceY, delta);\r\n\t    };\r\n\t    return Meele;\r\n\t}(_1.Projectile));\r\n\texports.Meele = Meele;\r\n\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DebugElement = (function () {\r\n\t    function DebugElement(area, inverse) {\r\n\t        this.area = area;\r\n\t        this.inverse = inverse;\r\n\t    }\r\n\t    return DebugElement;\r\n\t}());\r\n\texports.DebugElement = DebugElement;\r\n\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (TextureType) {\r\n\t    TextureType[TextureType[\"tileTexture\"] = 1] = \"tileTexture\";\r\n\t    TextureType[TextureType[\"particleTexture\"] = 2] = \"particleTexture\";\r\n\t    TextureType[TextureType[\"frostTexture\"] = 3] = \"frostTexture\";\r\n\t})(exports.TextureType || (exports.TextureType = {}));\r\n\tvar TextureType = exports.TextureType;\r\n\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar StickyAnimation = (function () {\r\n\t    function StickyAnimation(animation, offset) {\r\n\t        this.animation = animation;\r\n\t        this.offset = offset;\r\n\t    }\r\n\t    return StickyAnimation;\r\n\t}());\r\n\texports.StickyAnimation = StickyAnimation;\r\n\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar RotationAnimation = (function (_super) {\r\n\t    __extends(RotationAnimation, _super);\r\n\t    function RotationAnimation(vec, texturenumbers) {\r\n\t        _super.call(this, texturenumbers);\r\n\t        this.vec = vec;\r\n\t    }\r\n\t    RotationAnimation.prototype.next = function (delta) {\r\n\t        this.angle = Math.atan2(this.vec.x, this.vec.y);\r\n\t        if (this.inverse) {\r\n\t            this.angle = this.angle + Math.PI * 0.5;\r\n\t        }\r\n\t        else {\r\n\t            this.angle = this.angle + Math.PI * 1.5;\r\n\t        }\r\n\t        _super.prototype.next.call(this, delta);\r\n\t    };\r\n\t    return RotationAnimation;\r\n\t}(_1.Animation));\r\n\texports.RotationAnimation = RotationAnimation;\r\n\n\n/***/ }),\n/* 382 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar StaticRotationAnimation = (function (_super) {\r\n\t    __extends(StaticRotationAnimation, _super);\r\n\t    function StaticRotationAnimation(vec, inverse, texturenumbers) {\r\n\t        _super.call(this, texturenumbers);\r\n\t        this.vec = vec;\r\n\t        this.inverse = inverse;\r\n\t        this.angle = Math.atan2(this.vec.x, this.vec.y);\r\n\t        if (this.inverse) {\r\n\t            this.angle = this.angle + Math.PI * 0.5;\r\n\t        }\r\n\t        else {\r\n\t            this.angle = this.angle + Math.PI * 1.5;\r\n\t        }\r\n\t    }\r\n\t    StaticRotationAnimation.prototype.next = function (delta) {\r\n\t        _super.prototype.next.call(this, delta);\r\n\t    };\r\n\t    return StaticRotationAnimation;\r\n\t}(_1.Animation));\r\n\texports.StaticRotationAnimation = StaticRotationAnimation;\r\n\n\n/***/ }),\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar CollisionProjectile = (function (_super) {\r\n\t    __extends(CollisionProjectile, _super);\r\n\t    function CollisionProjectile(velocity, area, distance, animation, damage) {\r\n\t        _super.call(this, velocity, area, animation, 1);\r\n\t        this.damage = damage;\r\n\t        this.distance = distance;\r\n\t    }\r\n\t    CollisionProjectile.prototype.update = function (travelDistanceX, travelDistanceY, delta) {\r\n\t        _super.prototype.update.call(this, travelDistanceX, travelDistanceY, delta);\r\n\t        this.distance -= Math.abs(travelDistanceX);\r\n\t    };\r\n\t    return CollisionProjectile;\r\n\t}(_1.Projectile));\r\n\texports.CollisionProjectile = CollisionProjectile;\r\n\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (ProjectileType) {\r\n\t    ProjectileType[ProjectileType[\"None\"] = 0] = \"None\";\r\n\t    ProjectileType[ProjectileType[\"Arrow\"] = 1] = \"Arrow\";\r\n\t    ProjectileType[ProjectileType[\"Sword\"] = 2] = \"Sword\";\r\n\t    ProjectileType[ProjectileType[\"NecroBall\"] = 3] = \"NecroBall\";\r\n\t})(exports.ProjectileType || (exports.ProjectileType = {}));\r\n\tvar ProjectileType = exports.ProjectileType;\r\n\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Cast = (function () {\r\n\t    function Cast() {\r\n\t        this.done = false;\r\n\t    }\r\n\t    Cast.prototype.update = function (delta) {\r\n\t    };\r\n\t    Cast.prototype.cancel = function () {\r\n\t    };\r\n\t    Cast.prototype.reset = function () {\r\n\t        this.done = false;\r\n\t    };\r\n\t    return Cast;\r\n\t}());\r\n\texports.Cast = Cast;\r\n\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar InstantCast = (function (_super) {\r\n\t    __extends(InstantCast, _super);\r\n\t    function InstantCast(animation, onCast) {\r\n\t        _super.call(this);\r\n\t        this.currentAnimation = animation;\r\n\t        this.onCast = onCast;\r\n\t    }\r\n\t    InstantCast.prototype.update = function (delta) {\r\n\t        this.currentAnimation = this.onCast(this.currentAnimation);\r\n\t        this.currentAnimation.next(delta);\r\n\t        if (this.currentAnimation.repetitions <= 0) {\r\n\t            this.done = true;\r\n\t        }\r\n\t    };\r\n\t    InstantCast.prototype.reset = function () {\r\n\t        this.currentAnimation.reset();\r\n\t        this.currentAnimation.repetitions = 1;\r\n\t        _super.prototype.reset.call(this);\r\n\t    };\r\n\t    return InstantCast;\r\n\t}(model_1.Cast));\r\n\texports.InstantCast = InstantCast;\r\n\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar ChannelCast = (function (_super) {\r\n\t    __extends(ChannelCast, _super);\r\n\t    function ChannelCast(channelAnimation, lowerChannelAnimation, onChannel, onCancel, defaultValue, maxValue, growth) {\r\n\t        _super.call(this);\r\n\t        this.channeling = false;\r\n\t        this.onChannel = onChannel;\r\n\t        this.onCancel = onCancel;\r\n\t        this.currentAnimation = channelAnimation;\r\n\t        this.lowerCurrentAnimation = lowerChannelAnimation;\r\n\t        this.defaultValue = defaultValue;\r\n\t        this.maxValue = maxValue;\r\n\t        this.growth = growth;\r\n\t        this.currentValue = this.defaultValue;\r\n\t    }\r\n\t    ChannelCast.prototype.update = function (delta) {\r\n\t        if (this.channeling) {\r\n\t            this.delay = 150;\r\n\t        }\r\n\t        if (this.delay > 0) {\r\n\t            this.currentAnimation.next(delta);\r\n\t            if (this.currentValue >= this.maxValue) {\r\n\t                this.currentValue = this.maxValue;\r\n\t            }\r\n\t            else {\r\n\t                this.currentValue += (delta * this.growth);\r\n\t            }\r\n\t            this.onChannel();\r\n\t        }\r\n\t        else {\r\n\t            this.done = true;\r\n\t        }\r\n\t        this.delay -= delta;\r\n\t        this.channeling = false;\r\n\t    };\r\n\t    ChannelCast.prototype.resetValue = function () {\r\n\t        this.currentValue = this.defaultValue;\r\n\t    };\r\n\t    ChannelCast.prototype.cancel = function () {\r\n\t        this.onCancel();\r\n\t    };\r\n\t    ChannelCast.prototype.reset = function () {\r\n\t    };\r\n\t    return ChannelCast;\r\n\t}(model_1.Cast));\r\n\texports.ChannelCast = ChannelCast;\r\n\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar SpellCast = (function (_super) {\r\n\t    __extends(SpellCast, _super);\r\n\t    function SpellCast(animation, mainRepetion, onCast) {\r\n\t        _super.call(this);\r\n\t        this.size = 20;\r\n\t        this.currentAnimation = animation;\r\n\t        this.onCast = onCast;\r\n\t        this.mainRepetion = mainRepetion;\r\n\t        this.hasCast = false;\r\n\t    }\r\n\t    SpellCast.prototype.update = function (delta) {\r\n\t        if (this.currentAnimation.repetitions == this.mainRepetion && !this.hasCast) {\r\n\t            this.currentAnimation = this.onCast(this.currentAnimation, this.size);\r\n\t            this.hasCast = true;\r\n\t        }\r\n\t        this.currentAnimation.next(delta);\r\n\t        if (this.currentAnimation.repetitions <= 0) {\r\n\t            this.done = true;\r\n\t        }\r\n\t    };\r\n\t    SpellCast.prototype.reset = function () {\r\n\t        this.hasCast = false;\r\n\t        this.currentAnimation.repetitions = 4;\r\n\t        this.currentAnimation.reset();\r\n\t        _super.prototype.reset.call(this);\r\n\t    };\r\n\t    return SpellCast;\r\n\t}(model_1.Cast));\r\n\texports.SpellCast = SpellCast;\r\n\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar ParticleProjectile = (function (_super) {\r\n\t    __extends(ParticleProjectile, _super);\r\n\t    function ParticleProjectile(velocity, area, animation, collisionRatio, distance, inverse, offset, onUpdate, collisionArea) {\r\n\t        _super.call(this, velocity, area, animation, collisionRatio, collisionArea);\r\n\t        this.onUpdate = onUpdate;\r\n\t        this.distance = distance;\r\n\t        this.inverse = inverse;\r\n\t        this.offset = offset;\r\n\t    }\r\n\t    ParticleProjectile.prototype.update = function (travelDistanceX, travelDistanceY, delta) {\r\n\t        _super.prototype.update.call(this, travelDistanceX, travelDistanceY, delta);\r\n\t        this.onUpdate(this.area, this.inverse, this.offset);\r\n\t        this.distance -= Math.abs(travelDistanceX);\r\n\t    };\r\n\t    return ParticleProjectile;\r\n\t}(_1.Projectile));\r\n\texports.ParticleProjectile = ParticleProjectile;\r\n\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar constants_1 = __webpack_require__(391);\r\n\tvar _1 = __webpack_require__(347);\r\n\tvar DynamicTile = (function () {\r\n\t    function DynamicTile(tile, velocity, verticalAxis, maxDistance) {\r\n\t        this.inverse = false;\r\n\t        this.distance = 0;\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.constants = constants_1.Constants.getInstance();\r\n\t        this.tile = tile;\r\n\t        this.velocity = velocity;\r\n\t        this.verticalAxis = verticalAxis;\r\n\t        this.maxDistance = maxDistance;\r\n\t        if (this.velocity.y > 0) {\r\n\t            this.initialDown = true;\r\n\t        }\r\n\t        else {\r\n\t            this.initialDown = false;\r\n\t        }\r\n\t        if (this.velocity.x > 0) {\r\n\t            this.initialRight = true;\r\n\t        }\r\n\t        else {\r\n\t            this.initialRight = false;\r\n\t        }\r\n\t        this.textureCoordinates = this.renderHelper.getTiledTextureCoordinates(this.tile, [], this.constants.tileSize);\r\n\t        this.initialPosition = new _1.Vector(tile.x, tile.y);\r\n\t    }\r\n\t    DynamicTile.prototype.update = function (delta, travelDistance) {\r\n\t        if (this.verticalAxis) {\r\n\t            this.calculateVerticalMovement(delta, travelDistance);\r\n\t        }\r\n\t        else {\r\n\t            this.calculateHorizontalMovement(delta, travelDistance);\r\n\t        }\r\n\t    };\r\n\t    DynamicTile.prototype.calculateVerticalMovement = function (delta, travelDistance) {\r\n\t        this.distance += Math.abs(travelDistance);\r\n\t        if (this.distance >= this.maxDistance) {\r\n\t            this.distance = this.maxDistance;\r\n\t            if (this.inverse) {\r\n\t                this.tile.y = this.initialPosition.y;\r\n\t            }\r\n\t            else {\r\n\t                if (this.initialDown) {\r\n\t                    this.tile.y = this.initialPosition.y + this.maxDistance;\r\n\t                }\r\n\t                else {\r\n\t                    this.tile.y = this.initialPosition.y - this.maxDistance;\r\n\t                }\r\n\t            }\r\n\t            this.turn();\r\n\t        }\r\n\t        else {\r\n\t            this.tile.y += travelDistance;\r\n\t        }\r\n\t    };\r\n\t    DynamicTile.prototype.calculateHorizontalMovement = function (delta, travelDistance) {\r\n\t        this.distance += Math.abs(travelDistance);\r\n\t        if (this.distance >= this.maxDistance) {\r\n\t            this.distance = this.maxDistance;\r\n\t            if (this.inverse) {\r\n\t                this.tile.x = this.initialPosition.x;\r\n\t            }\r\n\t            else {\r\n\t                if (this.initialRight) {\r\n\t                    this.tile.x = this.initialPosition.x + this.maxDistance;\r\n\t                }\r\n\t                else {\r\n\t                    this.tile.x = this.initialPosition.x - this.maxDistance;\r\n\t                }\r\n\t            }\r\n\t            this.turn();\r\n\t        }\r\n\t        else {\r\n\t            this.tile.x += travelDistance;\r\n\t        }\r\n\t    };\r\n\t    DynamicTile.prototype.turn = function () {\r\n\t        this.distance = 0;\r\n\t        this.inverse = !this.inverse;\r\n\t        this.velocity.invert();\r\n\t    };\r\n\t    return DynamicTile;\r\n\t}());\r\n\texports.DynamicTile = DynamicTile;\r\n\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar _1 = __webpack_require__(392);\r\n\tvar Constants = (function () {\r\n\t    function Constants() {\r\n\t        this.tileResources = [\r\n\t            new _1.TextureResource(\"1tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"2tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"3tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"4tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"5tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"6tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"7tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"8tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"9tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"10tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"11tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"12tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"13tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"14tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"15tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"16tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"17tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"18tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"19tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"20tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"21tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"22tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"23tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"24tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"25tile.png\", [32, 32]),\r\n\t            new _1.TextureResource(\"26tile.png\", [32, 32])\r\n\t        ];\r\n\t        this.uiResources = [\r\n\t            new _1.TextureResource(\"100ui.png\", [256, 128]),\r\n\t            new _1.TextureResource(\"101ui.png\", [512, 512]),\r\n\t            new _1.TextureResource(\"102ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"103ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"104ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"105ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"106ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"107ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"108ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"109ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"110ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"111ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"112ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"113ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"114ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"115ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"116ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"117ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"118ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"119ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"120ui.png\", [256, 256]),\r\n\t            new _1.TextureResource(\"121ui.png\", [256, 256]),\r\n\t        ];\r\n\t        this.tileSize = [32, 32];\r\n\t    }\r\n\t    Constants.prototype.constrcuctor = function () {\r\n\t        if (Constants.instance) {\r\n\t            throw new Error(\"Static class cant be instanced!\");\r\n\t        }\r\n\t        Constants.instance = this;\r\n\t    };\r\n\t    Constants.getInstance = function () {\r\n\t        return Constants.instance;\r\n\t    };\r\n\t    Constants.instance = new Constants();\r\n\t    return Constants;\r\n\t}());\r\n\texports.Constants = Constants;\r\n\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar enemyData_1 = __webpack_require__(393);\r\n\texports.EnemyData = enemyData_1.EnemyData;\r\n\tvar levelData_1 = __webpack_require__(394);\r\n\texports.LevelData = levelData_1.LevelData;\r\n\tvar enemyType_1 = __webpack_require__(395);\r\n\texports.EnemyType = enemyType_1.EnemyType;\r\n\tvar texture_resource_1 = __webpack_require__(396);\r\n\texports.TextureResource = texture_resource_1.TextureResource;\r\n\tvar tile_asset_1 = __webpack_require__(397);\r\n\texports.TileAsset = tile_asset_1.TileAsset;\r\n\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar EnemyData = (function () {\r\n\t    function EnemyData() {\r\n\t    }\r\n\t    return EnemyData;\r\n\t}());\r\n\texports.EnemyData = EnemyData;\r\n\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar LevelData = (function () {\r\n\t    function LevelData() {\r\n\t    }\r\n\t    return LevelData;\r\n\t}());\r\n\texports.LevelData = LevelData;\r\n\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (EnemyType) {\r\n\t    EnemyType[EnemyType[\"swordman\"] = 1] = \"swordman\";\r\n\t})(exports.EnemyType || (exports.EnemyType = {}));\r\n\tvar EnemyType = exports.EnemyType;\r\n\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar TextureResource = (function () {\r\n\t    function TextureResource(name, size) {\r\n\t        this.name = name;\r\n\t        this.size = size;\r\n\t    }\r\n\t    return TextureResource;\r\n\t}());\r\n\texports.TextureResource = TextureResource;\r\n\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar TileAsset = (function () {\r\n\t    function TileAsset(key, image, size) {\r\n\t        this.key = key;\r\n\t        this.image = image;\r\n\t        this.size = size;\r\n\t    }\r\n\t    return TileAsset;\r\n\t}());\r\n\texports.TileAsset = TileAsset;\r\n\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DynamicTileData = (function () {\r\n\t    function DynamicTileData() {\r\n\t    }\r\n\t    return DynamicTileData;\r\n\t}());\r\n\texports.DynamicTileData = DynamicTileData;\r\n\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar RenderableData = (function () {\r\n\t    function RenderableData() {\r\n\t    }\r\n\t    return RenderableData;\r\n\t}());\r\n\texports.RenderableData = RenderableData;\r\n\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Progress = (function () {\r\n\t    function Progress() {\r\n\t        this.active = false;\r\n\t    }\r\n\t    return Progress;\r\n\t}());\r\n\texports.Progress = Progress;\r\n\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\texports.Enemy = enemy_1.Enemy;\r\n\tvar swordman_1 = __webpack_require__(405);\r\n\texports.Swordman = swordman_1.Swordman;\r\n\tvar archer_1 = __webpack_require__(407);\r\n\texports.Archer = archer_1.Archer;\r\n\tvar character_1 = __webpack_require__(403);\r\n\texports.Character = character_1.Character;\r\n\tvar player_1 = __webpack_require__(409);\r\n\texports.Player = player_1.Player;\r\n\tvar shadow_1 = __webpack_require__(411);\r\n\texports.Shadow = shadow_1.Shadow;\r\n\tvar state_1 = __webpack_require__(406);\r\n\texports.State = state_1.State;\r\n\tvar apprentice_1 = __webpack_require__(412);\r\n\texports.Apprentice = apprentice_1.Apprentice;\r\n\tvar screamer_1 = __webpack_require__(413);\r\n\texports.Screamer = screamer_1.Screamer;\r\n\tvar masterSorcerer_1 = __webpack_require__(414);\r\n\texports.MasterSorcerer = masterSorcerer_1.MasterSorcerer;\r\n\tvar iEnemy_1 = __webpack_require__(415);\r\n\texports.IEnemy = iEnemy_1.IEnemy;\r\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar character_1 = __webpack_require__(403);\r\n\tvar _1 = __webpack_require__(401);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar deathType_1 = __webpack_require__(404);\r\n\tvar Enemy = (function (_super) {\r\n\t    __extends(Enemy, _super);\r\n\t    function Enemy(position, width, height) {\r\n\t        _super.call(this, position, width, height);\r\n\t        this.color = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n\t        this.burnValue = 0;\r\n\t        this.direction = true;\r\n\t        this.oldDirection = true;\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.hitDamage = 0;\r\n\t        this.hp = 100;\r\n\t        this.freezeDamage = 0.08;\r\n\t        this.flameDamage = 0.12;\r\n\t        this.maxFreeze = this.hp / this.freezeDamage;\r\n\t        this.freezeValue = 0;\r\n\t        this.burnDamage = 0.2;\r\n\t        this.cinderValue = 0;\r\n\t        this.burnDurationFactor = 3;\r\n\t        this.hitAreaOffset = 40;\r\n\t        this.minDistance = 5;\r\n\t        this.searchAreaOffset = 150;\r\n\t        this.trackingTime = 0;\r\n\t        this.trackingMaxTime = 3000;\r\n\t        this.trackingSpeed = 0;\r\n\t        this.idleSpeed = 0;\r\n\t        this.hitting = false;\r\n\t        this.currentState = _1.State.Idle;\r\n\t    }\r\n\t    Enemy.prototype.takeDamage = function (damage, type) {\r\n\t        this.hp = this.hp - damage;\r\n\t        if (this.hp <= 0) {\r\n\t            if (type == model_1.SpellType.frostBlast) {\r\n\t                this.deathType = deathType_1.DeathType.freezeDeath;\r\n\t            }\r\n\t            else if (type == model_1.SpellType.fireBlast) {\r\n\t                this.deathType = deathType_1.DeathType.fireDeath;\r\n\t            }\r\n\t            else {\r\n\t                this.deathType = deathType_1.DeathType.swordDeath;\r\n\t            }\r\n\t            this.dead = true;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.burn = function () {\r\n\t        this.cinderValue += this.burnDurationFactor;\r\n\t        this.takeDamage(this.flameDamage, model_1.SpellType.fireBlast);\r\n\t        if (this.cinderValue > 300) {\r\n\t            this.burnValue += this.burnDurationFactor;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.setFreezeSpeed = function () {\r\n\t        this.actualSpeed = this.maxSpeed * Math.pow(0.997, this.freezeValue);\r\n\t        if (this.actualSpeed < this.maxSpeed * 0.3) {\r\n\t            this.actualSpeed = this.maxSpeed * 0.3;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.freeze = function () {\r\n\t        this.freezeValue++;\r\n\t        if (this.actualSpeed > this.maxSpeed * 0.3) {\r\n\t            this.actualSpeed = this.actualSpeed * 0.997;\r\n\t        }\r\n\t        this.takeDamage(this.freezeDamage, model_1.SpellType.frostBlast);\r\n\t    };\r\n\t    Enemy.prototype.update = function (delta, tiles, player) {\r\n\t        this.toMove.x = this.velocity.x * delta;\r\n\t        this.toMove.y = this.velocity.y * delta;\r\n\t        this.nextToEdge = false;\r\n\t        if (this.actualSpeed < this.maxSpeed) {\r\n\t            this.actualSpeed = this.actualSpeed * 1.005;\r\n\t        }\r\n\t        this.collisionData = this.collisionDetection.collisionDetection(tiles, [], this, this.toMove, delta);\r\n\t        this.fall(delta);\r\n\t        var collisionArea = this.getCollisionArea();\r\n\t        var leftEdge = this.collisionDetection.fastCheckEnviroment(new model_1.Rectangle(collisionArea.x, collisionArea.y + collisionArea.height, 1, 30), tiles);\r\n\t        var rightEdge = this.collisionDetection.fastCheckEnviroment(new model_1.Rectangle(collisionArea.x + collisionArea.width, collisionArea.y + collisionArea.height, 1, 30), tiles);\r\n\t        if (leftEdge && rightEdge) {\r\n\t            this.nextToEdge = true;\r\n\t        }\r\n\t        else {\r\n\t            if (this.inverse) {\r\n\t                if (leftEdge) {\r\n\t                    this.direction = false;\r\n\t                    this.nextToEdge = true;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (rightEdge) {\r\n\t                    this.direction = true;\r\n\t                    this.nextToEdge = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (this.collisionData.groundCollision) {\r\n\t            this.velocity.y = 0;\r\n\t        }\r\n\t        if (this.collisionData.wallCollision) {\r\n\t            if (this.collisionData.normalX == 1) {\r\n\t                this.nextToEdge = true;\r\n\t                this.direction = !this.direction;\r\n\t            }\r\n\t            else {\r\n\t                this.nextToEdge = true;\r\n\t                this.direction = !this.direction;\r\n\t            }\r\n\t            this.velocity.x = 0;\r\n\t        }\r\n\t        var freezePercent = this.freezeValue / this.maxFreeze;\r\n\t        this.updateColor([1.0 + (freezePercent * 1.0), 1.0 + (freezePercent * 2.0), 1.0 + (freezePercent * 2.0), 1.0]);\r\n\t        this.updateBurnDamage();\r\n\t    };\r\n\t    Enemy.prototype.getCollisionArea = function () {\r\n\t        var collisionArea = new model_1.Rectangle(0, 0, 0, 0);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Enemy.prototype.idle = function (delta, player, tiles) {\r\n\t        this.currentAnimation = this.idleAnimation;\r\n\t        this.maxSpeed = this.idleSpeed;\r\n\t        if (this.inRange(player, this.searchAreaOffset, tiles)) {\r\n\t            this.currentState = _1.State.IdleToTrackingTransition;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.idleToTrackingTransition = function (delta) {\r\n\t    };\r\n\t    Enemy.prototype.trackingToInRangeTransition = function (delta) {\r\n\t    };\r\n\t    Enemy.prototype.trackingToIdleTransition = function (delta) {\r\n\t    };\r\n\t    Enemy.prototype.patrol = function (delta) {\r\n\t        if (this.oldDirection != this.direction) {\r\n\t            this.oldDirection = this.direction;\r\n\t        }\r\n\t        if (this.oldDirection) {\r\n\t            this.moveLeft(delta);\r\n\t        }\r\n\t        else {\r\n\t            this.moveRight(delta);\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.hit = function (delta, player, tiles) {\r\n\t        this.currentAnimation = this.hitAnimation;\r\n\t        if (!this.inRange(player, this.hitAreaOffset, tiles) && this.hitAnimation.frameIndex == 0) {\r\n\t            this.currentState = _1.State.Tracking;\r\n\t        }\r\n\t        this.moveToPlayer(delta, player, tiles, 10);\r\n\t    };\r\n\t    Enemy.prototype.npcAction = function (delta, player, tiles) {\r\n\t        switch (this.currentState) {\r\n\t            case _1.State.Idle:\r\n\t                this.idle(delta, player, tiles);\r\n\t                break;\r\n\t            case _1.State.IdleToTrackingTransition:\r\n\t                this.idleToTrackingTransition(delta);\r\n\t                break;\r\n\t            case _1.State.TrackingToIdleTransition:\r\n\t                this.trackingToIdleTransition(delta);\r\n\t                break;\r\n\t            case _1.State.Tracking:\r\n\t                this.track(player, delta, tiles, 10);\r\n\t                break;\r\n\t            case _1.State.TrackingToInRangeTransition:\r\n\t                this.trackingToInRangeTransition(delta);\r\n\t                break;\r\n\t            case _1.State.InHitRange:\r\n\t                this.hit(delta, player, tiles);\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.checkStop = function (player, tiles) {\r\n\t        if (this.nextToEdge || this.inRange(player, this.minDistance, tiles)) {\r\n\t            this.stop();\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.stop = function () {\r\n\t        this.velocity.x = 0;\r\n\t    };\r\n\t    Enemy.prototype.track = function (player, delta, tiles, gapSize) {\r\n\t        this.currentAnimation = this.trackingAnimation;\r\n\t        this.maxSpeed = this.trackingSpeed;\r\n\t        this.trackingTime -= delta;\r\n\t        if (this.trackingTime <= 0) {\r\n\t            this.currentState = _1.State.TrackingToIdleTransition;\r\n\t        }\r\n\t        if (this.inRange(player, this.searchAreaOffset, tiles)) {\r\n\t            this.trackingTime = this.trackingMaxTime;\r\n\t        }\r\n\t        if (this.inRange(player, this.hitAreaOffset, tiles)) {\r\n\t            this.currentState = _1.State.TrackingToInRangeTransition;\r\n\t        }\r\n\t        this.moveToPlayer(delta, player, tiles, gapSize);\r\n\t    };\r\n\t    Enemy.prototype.moveToPlayer = function (delta, player, tiles, gapSize) {\r\n\t        if (Math.abs(player.position.x - this.position.x) > gapSize) {\r\n\t            if (player.position.x < this.position.x) {\r\n\t                this.moveLeft(delta);\r\n\t                this.checkStop(player, tiles);\r\n\t            }\r\n\t            else if (player.position.x > this.position.x) {\r\n\t                this.moveRight(delta);\r\n\t                this.checkStop(player, tiles);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.inRange = function (player, offset, tiles) {\r\n\t    };\r\n\t    Enemy.prototype.rand = function (min, max) {\r\n\t        return min + (Math.random() * (max - min));\r\n\t    };\r\n\t    Enemy.prototype.getDeltaPosition = function (player, offsetX, offsetY) {\r\n\t        return new model_1.Vector(player.middlePosition.x - offsetX - this.position.x, player.middlePosition.y - offsetY - this.position.y);\r\n\t    };\r\n\t    Enemy.prototype.updateBurnDamage = function () {\r\n\t        if (this.burnValue > 0) {\r\n\t            this.takeDamage(this.burnDamage, model_1.SpellType.fireBlast);\r\n\t            this.burnValue--;\r\n\t        }\r\n\t    };\r\n\t    Enemy.prototype.updateColor = function (color) {\r\n\t        var colorColl = [];\r\n\t        for (var i = 0; i < 6; i++) {\r\n\t            colorColl.push.apply(colorColl, color);\r\n\t        }\r\n\t        this.color = colorColl;\r\n\t    };\r\n\t    return Enemy;\r\n\t}(character_1.Character));\r\n\texports.Enemy = Enemy;\r\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar gravity_1 = __webpack_require__(375);\r\n\tvar Character = (function () {\r\n\t    function Character(position, width, height) {\r\n\t        this.toMove = new model_1.Vector(0, 0);\r\n\t        this.dead = false;\r\n\t        this.inverse = false;\r\n\t        this.velocity = new model_1.Vector(0, 0);\r\n\t        this.maxSpeed = 0.3;\r\n\t        this.actualSpeed = 0.3;\r\n\t        this.acceleration = 0.009;\r\n\t        this.moving = false;\r\n\t        this.gravityStrength = 0.0025;\r\n\t        this.gravity = new gravity_1.Gravity(this.gravityStrength);\r\n\t        this.position = position;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t    }\r\n\t    Character.prototype.moveRight = function (delta) {\r\n\t        if (this.velocity.x < this.actualSpeed) {\r\n\t            this.velocity.x += this.acceleration * delta;\r\n\t        }\r\n\t        if (this.velocity.x > this.actualSpeed) {\r\n\t            this.velocity.x = this.actualSpeed;\r\n\t        }\r\n\t        this.inverse = false;\r\n\t        this.moving = true;\r\n\t    };\r\n\t    Character.prototype.moveLeft = function (delta) {\r\n\t        if (this.velocity.x > -this.actualSpeed) {\r\n\t            this.velocity.x -= this.acceleration * delta;\r\n\t        }\r\n\t        if (this.velocity.x < this.actualSpeed) {\r\n\t            this.velocity.x = -this.actualSpeed;\r\n\t        }\r\n\t        this.inverse = true;\r\n\t        this.moving = true;\r\n\t    };\r\n\t    Character.prototype.fall = function (delta) {\r\n\t        this.gravity.apply(this.velocity, delta);\r\n\t    };\r\n\t    Character.prototype.getCollisionArea = function () {\r\n\t        var collisionArea = new model_1.Rectangle(this.position.x, this.position.y, this.width, this.height);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    return Character;\r\n\t}());\r\n\texports.Character = Character;\r\n\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (DeathType) {\r\n\t    DeathType[DeathType[\"fallDeath\"] = 0] = \"fallDeath\";\r\n\t    DeathType[DeathType[\"swordDeath\"] = 1] = \"swordDeath\";\r\n\t    DeathType[DeathType[\"freezeDeath\"] = 2] = \"freezeDeath\";\r\n\t    DeathType[DeathType[\"fireDeath\"] = 3] = \"fireDeath\";\r\n\t})(exports.DeathType || (exports.DeathType = {}));\r\n\tvar DeathType = exports.DeathType;\r\n\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar state_1 = __webpack_require__(406);\r\n\tvar Swordman = (function (_super) {\r\n\t    __extends(Swordman, _super);\r\n\t    function Swordman(position, width, height, projectileHandler, animationHandler) {\r\n\t        _super.call(this, position, width, height);\r\n\t        this.hitCollisionAreas = [];\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.hitOffset = 40;\r\n\t        this.hitting = false;\r\n\t        this.trackingSpeed = 0.2;\r\n\t        this.idleSpeed = 0.1;\r\n\t        this.minDistance = 5;\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.maxSpeed = 0.1;\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t        this.idleAnimation = new model_1.Animation([228, 227, 229, 227]);\r\n\t        this.idleAnimation.timeToChange = 150;\r\n\t        this.hitAnimation = new model_1.Animation([231, 231, 232, 230, 212]);\r\n\t        this.trackingAnimation = new model_1.Animation([211, 209, 211, 210]);\r\n\t    }\r\n\t    Swordman.prototype.takeDamage = function (damage, type) {\r\n\t        _super.prototype.takeDamage.call(this, damage, type);\r\n\t    };\r\n\t    Swordman.prototype.update = function (delta, tiles, player) {\r\n\t        this.npcAction(delta, player, tiles);\r\n\t        _super.prototype.update.call(this, delta, tiles, player);\r\n\t        if (this.currentAnimation == this.hitAnimation) {\r\n\t            this.currentAnimation.next(delta);\r\n\t        }\r\n\t        else {\r\n\t            if (this.velocity.x != 0 || this.collisionData.wallCollision) {\r\n\t                this.currentAnimation.next(delta);\r\n\t            }\r\n\t        }\r\n\t        this.setHitAnimation();\r\n\t        this.checkHitCollisionAreas(player);\r\n\t    };\r\n\t    Swordman.prototype.checkHitCollisionAreas = function (player) {\r\n\t        if (this.hitAnimation) {\r\n\t            if (this.hitAnimation.frameIndex == 1 && !this.hitting) {\r\n\t                this.hitting = true;\r\n\t                this.projectileHandler.createCollisionProjectile(this.position, this.width, this.inverse, 30, new model_1.Vector(0.5, 0.6));\r\n\t            }\r\n\t            if (this.hitAnimation.frameIndex == 0) {\r\n\t                this.hitting = false;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Swordman.prototype.idle = function (delta, player, tiles) {\r\n\t        _super.prototype.idle.call(this, delta, player, tiles);\r\n\t        this.patrol(delta);\r\n\t    };\r\n\t    Swordman.prototype.idleToTrackingTransition = function (delta) {\r\n\t        this.currentState = state_1.State.Tracking;\r\n\t        this.maxSpeed = this.trackingSpeed;\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t    };\r\n\t    Swordman.prototype.trackingToInRangeTransition = function (delta) {\r\n\t        this.currentState = state_1.State.InHitRange;\r\n\t    };\r\n\t    Swordman.prototype.trackingToIdleTransition = function (delta) {\r\n\t        this.maxSpeed = this.idleSpeed;\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t        this.currentState = state_1.State.Idle;\r\n\t    };\r\n\t    Swordman.prototype.inRange = function (player, offset) {\r\n\t        var area;\r\n\t        if (this.inverse) {\r\n\t            area = new model_1.Rectangle(this.position.x - offset, this.position.y, offset, this.height);\r\n\t        }\r\n\t        else {\r\n\t            area = new model_1.Rectangle(this.position.x, this.position.y, offset + this.width, this.height);\r\n\t        }\r\n\t        return this.collisionDetection.aabbCheck(area, player.getCollisionArea());\r\n\t    };\r\n\t    Swordman.prototype.hit = function (delta, player, tiles) {\r\n\t        _super.prototype.hit.call(this, delta, player, tiles);\r\n\t        if (this.meeleAnimation) {\r\n\t            if (this.meeleAnimation.repetitions <= 0) {\r\n\t                this.createHit(player);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.createHit(player);\r\n\t        }\r\n\t    };\r\n\t    Swordman.prototype.createHit = function (player) {\r\n\t        if (!this.inverse) {\r\n\t            this.meeleAnimation = this.animationHandler.swordscut_a(new model_1.Vector(this.position.x + this.hitOffset, this.position.y), 50, !this.inverse);\r\n\t        }\r\n\t        else {\r\n\t            this.meeleAnimation = this.animationHandler.swordscut_a(new model_1.Vector(this.position.x - this.hitOffset, this.position.y), 50, !this.inverse);\r\n\t        }\r\n\t    };\r\n\t    Swordman.prototype.setHitAnimation = function () {\r\n\t        if (this.meeleAnimation) {\r\n\t            if (!this.inverse) {\r\n\t                this.meeleAnimation.areaToRender.x = this.position.x + this.hitOffset;\r\n\t                this.meeleAnimation.areaToRender.y = this.position.y;\r\n\t            }\r\n\t            else {\r\n\t                this.meeleAnimation.areaToRender.x = this.position.x - this.hitOffset;\r\n\t                this.meeleAnimation.areaToRender.y = this.position.y;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Swordman.prototype.getCollisionArea = function () {\r\n\t        var collisionArea = new model_1.Rectangle(this.position.x + 10, this.position.y, this.width - 20, 55);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    return Swordman;\r\n\t}(enemy_1.Enemy));\r\n\texports.Swordman = Swordman;\r\n\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (State) {\r\n\t    State[State[\"Idle\"] = 0] = \"Idle\";\r\n\t    State[State[\"IdleToTrackingTransition\"] = 1] = \"IdleToTrackingTransition\";\r\n\t    State[State[\"TrackingToIdleTransition\"] = 2] = \"TrackingToIdleTransition\";\r\n\t    State[State[\"Tracking\"] = 3] = \"Tracking\";\r\n\t    State[State[\"TrackingToInRangeTransition\"] = 4] = \"TrackingToInRangeTransition\";\r\n\t    State[State[\"InHitRange\"] = 5] = \"InHitRange\";\r\n\t})(exports.State || (exports.State = {}));\r\n\tvar State = exports.State;\r\n\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar _1 = __webpack_require__(401);\r\n\tvar Archer = (function (_super) {\r\n\t    __extends(Archer, _super);\r\n\t    function Archer(position, width, height, projectileHandler, animationHandler) {\r\n\t        _super.call(this, position, width, height);\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.hitAreaOffset = 600;\r\n\t        this.searchAreaOffset = 800;\r\n\t        this.hp = 50;\r\n\t        this.arrowVelocity = 0.5;\r\n\t        this.shoot = false;\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.maxSpeed = 0.1;\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t        this.idleAnimation = new model_1.Animation([267, 266, 267, 265]);\r\n\t        this.hitAnimation = new model_1.Animation([262, 264, 263, 264]);\r\n\t        this.trackingAnimation = new model_1.Animation([267, 266, 267, 265]);\r\n\t        this.trackingAnimation.timeToChange = 175;\r\n\t        this.hitAnimation.timeToChange = 300;\r\n\t        this.currentAnimation = this.hitAnimation;\r\n\t        this.idleAnimation.timeToChange = 175;\r\n\t    }\r\n\t    Archer.prototype.update = function (delta, tiles, player) {\r\n\t        this.npcAction(delta, player, tiles);\r\n\t        _super.prototype.update.call(this, delta, tiles, player);\r\n\t        this.currentAnimation.next(delta);\r\n\t    };\r\n\t    Archer.prototype.getCollisionArea = function () {\r\n\t        var collisionArea = new model_1.Rectangle(this.position.x + 10, this.position.y - 5, this.width - 20, 55);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Archer.prototype.idle = function (delta, player, tiles) {\r\n\t        _super.prototype.idle.call(this, delta, player, tiles);\r\n\t        this.patrol(delta);\r\n\t    };\r\n\t    Archer.prototype.hit = function (delta, player, tiles) {\r\n\t        _super.prototype.hit.call(this, delta, player, tiles);\r\n\t        if (this.hitAnimation.frameIndex == 3) {\r\n\t            if (!this.shoot) {\r\n\t                this.shoot = true;\r\n\t                var velocity = this.calculatePath(player, this.inverse);\r\n\t                var bowPosition = new model_1.Vector(this.position.x, this.position.y + 20);\r\n\t                this.projectileHandler.createArrow(bowPosition, this.inverse, velocity);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.shoot = false;\r\n\t        }\r\n\t    };\r\n\t    Archer.prototype.idleToTrackingTransition = function (delta) {\r\n\t        this.currentState = _1.State.Tracking;\r\n\t    };\r\n\t    Archer.prototype.trackingToInRangeTransition = function (delta) {\r\n\t        this.currentState = _1.State.InHitRange;\r\n\t    };\r\n\t    Archer.prototype.trackingToIdleTransition = function (delta) {\r\n\t        this.currentState = _1.State.Idle;\r\n\t    };\r\n\t    Archer.prototype.inRange = function (player, offset, tiles) {\r\n\t        var deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        if (magnitude < this.searchAreaOffset) {\r\n\t            if (this.clearShoot(deltaPos, tiles)) {\r\n\t                return true;\r\n\t            }\r\n\t            else {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return false;\r\n\t        }\r\n\t    };\r\n\t    Archer.prototype.clearShoot = function (deltaPos, tiles) {\r\n\t        var clear = true;\r\n\t        var pathBlocks = this.getPathBlocks(deltaPos);\r\n\t        //this.debugHandler.debugRects.push(...pathBlocks);\r\n\t        for (var _i = 0, pathBlocks_1 = pathBlocks; _i < pathBlocks_1.length; _i++) {\r\n\t            var block = pathBlocks_1[_i];\r\n\t            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n\t                clear = false;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return clear;\r\n\t    };\r\n\t    Archer.prototype.getPathBlocks = function (deltaPos) {\r\n\t        var blocksize = 20;\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        var direction = deltaPos.copy(deltaPos);\r\n\t        var bowPosition = new model_1.Vector(this.position.x, this.position.y + 10);\r\n\t        direction.normalize();\r\n\t        var blocks = [];\r\n\t        for (var i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\t            var newMagnitude = magnitude - (i * blocksize);\r\n\t            blocks.push(new model_1.Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n\t        }\r\n\t        return blocks;\r\n\t    };\r\n\t    Archer.prototype.getDeltaVelocity = function (player, deltaPos) {\r\n\t        var velocity = player.getVelocity();\r\n\t        var deltaVelocity = velocity.x * velocity.x * 800;\r\n\t        if (deltaPos.x < 0) {\r\n\t            if (velocity.x > 0) {\r\n\t                return -deltaVelocity;\r\n\t            }\r\n\t            else {\r\n\t                return deltaVelocity;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (velocity.x > 0) {\r\n\t                return deltaVelocity;\r\n\t            }\r\n\t            else {\r\n\t                return -deltaVelocity;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Archer.prototype.calculatePath = function (player, inverse) {\r\n\t        var deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\t        deltaPos.y = deltaPos.y - ((deltaPos.x * deltaPos.x * 0.00063) + this.getDeltaVelocity(player, deltaPos));\r\n\t        var velocity = new model_1.Vector(deltaPos.x, deltaPos.y * this.rand(0.85, 1.15));\r\n\t        velocity.normalize();\r\n\t        velocity.multiply(this.arrowVelocity);\r\n\t        return velocity;\r\n\t    };\r\n\t    return Archer;\r\n\t}(enemy_1.Enemy));\r\n\texports.Archer = Archer;\r\n\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar renderHelper_1 = __webpack_require__(362);\r\n\tvar DebugHandler = (function () {\r\n\t    function DebugHandler() {\r\n\t        this.debugRects = [];\r\n\t        this.renderHelper = renderHelper_1.RenderHelper.getInstance();\r\n\t        if (DebugHandler.instance) {\r\n\t            throw new Error(\"Static class cant be instanced!\");\r\n\t        }\r\n\t        DebugHandler.instance = this;\r\n\t    }\r\n\t    DebugHandler.getInstance = function () {\r\n\t        return DebugHandler.instance;\r\n\t    };\r\n\t    DebugHandler.prototype.createRenderCall = function (renderCall) {\r\n\t        for (var _i = 0, _a = this.debugRects; _i < _a.length; _i++) {\r\n\t            var rect = _a[_i];\r\n\t            renderCall.vertecies = this.renderHelper.getVertecies(rect.x, rect.y, rect.width, rect.height, renderCall.vertecies);\r\n\t            renderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, 1);\r\n\t            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        }\r\n\t        return renderCall;\r\n\t    };\r\n\t    DebugHandler.instance = new DebugHandler();\r\n\t    return DebugHandler;\r\n\t}());\r\n\texports.DebugHandler = DebugHandler;\r\n\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar spellHandler_1 = __webpack_require__(410);\r\n\tvar drag_1 = __webpack_require__(376);\r\n\tvar character_1 = __webpack_require__(403);\r\n\tvar deathType_1 = __webpack_require__(404);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar Player = (function (_super) {\r\n\t    __extends(Player, _super);\r\n\t    function Player(position, context, projectileHandler, animationHandler, particleHandler, width, height, hp, mana, progress, fireLevel, frostLevel, shieldLevel) {\r\n\t        _super.call(this, position, width, height);\r\n\t        this.defaultJumpSpeed = -0.7;\r\n\t        this.jumpSpeed = this.defaultJumpSpeed;\r\n\t        this.damageAnimations = [];\r\n\t        this.stunned = false;\r\n\t        this.lift = null;\r\n\t        this.liftVelocity = new model_1.Vector(0, 0);\r\n\t        this.middlePosition = new model_1.Vector(0, 0);\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.drag = 0.0015;\r\n\t        this.externalDragForce = 0.0005;\r\n\t        this.dragForce = new drag_1.Drag(this.drag);\r\n\t        this.externalDrag = new drag_1.Drag(this.externalDragForce);\r\n\t        this.idleTime = 3000;\r\n\t        this.idleTimeChange = 3000;\r\n\t        this.jumping = false;\r\n\t        this.inJump = false;\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.manaRegen = 1;\r\n\t        this.externalVelocity = new model_1.Vector(0, 0);\r\n\t        this.onGroundTimer = 0;\r\n\t        this.shieldTextureCoords = this.renderHelper.getTextureCoordinates([], 199);\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.context = context;\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.spellHandler = new spellHandler_1.SpellHandler(this.animationHandler, this.projectileHandler, this.particleHandler, this, fireLevel, frostLevel, shieldLevel);\r\n\t        this.lowerIdleAnimation = new model_1.Animation([162]);\r\n\t        this.upperIdleAnimation = new model_1.Animation([163]);\r\n\t        this.upperRunningAnimation = new model_1.Animation([170, 171, 172, 170, 173, 174]);\r\n\t        this.upperRunningAnimation.timeToChange = 150;\r\n\t        this.lowerRunningAnimation = new model_1.Animation([165, 166, 167, 165, 168, 169]);\r\n\t        this.lowerRunningAnimation.timeToChange = 150;\r\n\t        this.stunnedAnimation = new model_1.Animation([60, 61, 62, 63]);\r\n\t        this.stunnedAnimation.timeToChange = 200;\r\n\t        this.lowerJumpAnimation = new model_1.Animation([160]);\r\n\t        this.upperJumpAnimation = new model_1.Animation([161]);\r\n\t        this.lowerStillAnimation = new model_1.Animation([165]);\r\n\t        this.upperStillAnimation = new model_1.Animation([170]);\r\n\t        this.hp = hp;\r\n\t        this.mana = mana;\r\n\t        this.maxMana = this.mana;\r\n\t        this.lowerAnimation = this.lowerIdleAnimation;\r\n\t        this.upperAnimation = this.upperIdleAnimation;\r\n\t    }\r\n\t    Player.prototype.takeDamage = function (damage) {\r\n\t        this.hp -= damage;\r\n\t        if (this.hp <= 0) {\r\n\t            this.hp = 0;\r\n\t            this.deathType = deathType_1.DeathType.swordDeath;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.hardHit = function (inverse, x) {\r\n\t        this.stun();\r\n\t        this.velocity.x = 0;\r\n\t        if (inverse) {\r\n\t            this.externalVelocity.x += x;\r\n\t        }\r\n\t        else {\r\n\t            this.externalVelocity.x -= x;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.useMana = function (mana) {\r\n\t        if (this.mana - mana <= 0) {\r\n\t            return false;\r\n\t        }\r\n\t        this.mana -= mana;\r\n\t        return true;\r\n\t    };\r\n\t    Player.prototype.regenMana = function () {\r\n\t        this.mana += this.manaRegen;\r\n\t        if (this.mana > this.maxMana) {\r\n\t            this.mana = this.maxMana;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.getVelocity = function () {\r\n\t        return new model_1.Vector(this.velocity.x + this.externalVelocity.x + this.liftVelocity.x, this.velocity.y + this.externalVelocity.y + this.liftVelocity.y);\r\n\t    };\r\n\t    Player.prototype.isMoving = function () {\r\n\t        return this.velocity.x == 0;\r\n\t    };\r\n\t    Player.prototype.createRenderCall = function (renderCall) {\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        if (this.inverse) {\r\n\t            renderCall.vertecies = this.renderHelper.getInverseVertecies(this.position.x, this.position.y, this.width, this.height, renderCall.vertecies);\r\n\t        }\r\n\t        else {\r\n\t            renderCall.vertecies = this.renderHelper.getVertecies(this.position.x, this.position.y, this.width, this.height, renderCall.vertecies);\r\n\t        }\r\n\t        if (this.stunned) {\r\n\t            renderCall.textureCoords.push.apply(renderCall.textureCoords, this.stunnedAnimation.getCurrentFrame());\r\n\t        }\r\n\t        else {\r\n\t            renderCall.textureCoords.push.apply(renderCall.textureCoords, this.upperAnimation.getCurrentFrame());\r\n\t            this.renderLower(renderCall);\r\n\t            if (this.spellHandler.castingShield) {\r\n\t                this.renderShield(renderCall);\r\n\t                this.spellHandler.castingShield = false;\r\n\t            }\r\n\t        }\r\n\t        return renderCall;\r\n\t    };\r\n\t    Player.prototype.shieldExplosion = function (inverse) {\r\n\t        this.particleHandler.createShieldExplosionEffect(this.getCalculatedPos(this.position, 0), this.inverse);\r\n\t        this.hardHit(inverse, 0.7);\r\n\t    };\r\n\t    Player.prototype.getShieldCollidables = function () {\r\n\t        if (this.spellHandler.castingShield) {\r\n\t            return this.spellHandler.shieldCollidables;\r\n\t        }\r\n\t        else {\r\n\t            return [];\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.renderLower = function (renderCall) {\r\n\t        var call = new render_1.RenderCall();\r\n\t        var x = this.position.x;\r\n\t        var x1;\r\n\t        var x2;\r\n\t        var textureNumber;\r\n\t        if (this.inverse) {\r\n\t            x2 = x;\r\n\t            x1 = x + (this.width);\r\n\t        }\r\n\t        else {\r\n\t            x2 = x + (this.width);\r\n\t            x1 = x;\r\n\t        }\r\n\t        var y1 = this.position.y;\r\n\t        var y2 = this.position.y + (this.height);\r\n\t        call.vertecies = [\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x2, y1,\r\n\t            x1, y1,\r\n\t            x2, y2,\r\n\t            x1, y2\r\n\t        ];\r\n\t        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.lowerAnimation.getCurrentFrame());\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        renderCall.vertecies.push.apply(renderCall.vertecies, call.vertecies);\r\n\t    };\r\n\t    Player.prototype.update = function (tiles, dynamicTiles, delta) {\r\n\t        var collisionData = this.collisionDetection.collisionDetection(tiles, dynamicTiles, this, this.toMove, delta);\r\n\t        this.middlePosition.x = (this.position.x + this.width / 2);\r\n\t        this.middlePosition.y = this.position.y;\r\n\t        if (this.lift == null) {\r\n\t            this.fall(delta);\r\n\t        }\r\n\t        else {\r\n\t            if (collisionData.groundCollision) {\r\n\t                this.liftVelocity = new model_1.Vector(0, 0);\r\n\t                this.lift = null;\r\n\t            }\r\n\t            collisionData.groundCollision = true;\r\n\t            collisionData.normalY = -1;\r\n\t        }\r\n\t        if (collisionData.lift != null && collisionData.groundCollision && collisionData.normalY == -1) {\r\n\t            this.lift = collisionData.lift;\r\n\t        }\r\n\t        if (this.deathType) {\r\n\t            if (this.deathType == deathType_1.DeathType.swordDeath) {\r\n\t                this.dead = true;\r\n\t                this.projectileHandler.createPlayerSword_death(this.position, this.inverse);\r\n\t            }\r\n\t        }\r\n\t        if (collisionData.groundCollision) {\r\n\t            this.velocity.y = 0;\r\n\t            if (collisionData.normalY == -1) {\r\n\t                this.inJump = false;\r\n\t                if (this.jumping) {\r\n\t                    this.liftVelocity = new model_1.Vector(0, 0);\r\n\t                    this.lift = null;\r\n\t                    this.idleTime = 0;\r\n\t                    this.velocity.y = this.jumpSpeed;\r\n\t                    this.inJump = true;\r\n\t                }\r\n\t                this.onGroundTimer = 50;\r\n\t            }\r\n\t            else if (this.onGroundTimer >= 0) {\r\n\t                collisionData.fallDeath = true;\r\n\t            }\r\n\t        }\r\n\t        if (collisionData.fallDeath) {\r\n\t            this.dead = true;\r\n\t            this.animationHandler.fallDeath(this.position);\r\n\t        }\r\n\t        if (collisionData.wallCollision) {\r\n\t            this.velocity.x = 0;\r\n\t            this.externalVelocity.x = 0;\r\n\t        }\r\n\t        if (this.velocity.x != 0 || collisionData.wallCollision) {\r\n\t            this.idleTime = 0;\r\n\t        }\r\n\t        else {\r\n\t            this.idleTime += delta;\r\n\t            this.lowerRunningAnimation.reset();\r\n\t            this.upperRunningAnimation.reset();\r\n\t        }\r\n\t        if (!this.moving) {\r\n\t            if (this.externalVelocity.x != 0) {\r\n\t                this.externalDrag.apply(this.externalVelocity, delta);\r\n\t            }\r\n\t            else {\r\n\t                this.dragForce.apply(this.velocity, delta);\r\n\t            }\r\n\t        }\r\n\t        this.spellHandler.update(delta);\r\n\t        if (this.inJump) {\r\n\t            this.lowerAnimation = this.lowerJumpAnimation;\r\n\t        }\r\n\t        else if (this.moving || this.velocity.x != 0) {\r\n\t            this.lowerAnimation = this.lowerRunningAnimation;\r\n\t        }\r\n\t        else {\r\n\t            this.lowerAnimation = this.lowerStillAnimation;\r\n\t        }\r\n\t        if (this.stunned) {\r\n\t            this.stunnedAnimation.next(delta);\r\n\t            this.spellHandler.castingShield = false;\r\n\t            if (this.stunnedAnimation.repetitions == 0) {\r\n\t                this.stunned = false;\r\n\t            }\r\n\t        }\r\n\t        else if (this.spellHandler.currentCast) {\r\n\t            if (this.spellHandler.currentCast instanceof model_1.ChannelCast) {\r\n\t                this.lowerAnimation = this.spellHandler.currentCast.lowerCurrentAnimation;\r\n\t            }\r\n\t            this.upperAnimation = this.spellHandler.currentCast.currentAnimation;\r\n\t        }\r\n\t        else if (this.inJump) {\r\n\t            this.upperAnimation = this.upperJumpAnimation;\r\n\t        }\r\n\t        else if (this.idleTime >= this.idleTimeChange) {\r\n\t            this.lowerAnimation = this.lowerIdleAnimation;\r\n\t            this.upperAnimation = this.upperIdleAnimation;\r\n\t        }\r\n\t        else if (this.moving || this.velocity.x != 0) {\r\n\t            this.upperRunningAnimation.frameIndex = this.lowerRunningAnimation.frameIndex;\r\n\t            this.upperRunningAnimation.lastChange = this.lowerRunningAnimation.lastChange;\r\n\t            this.upperAnimation = this.upperRunningAnimation;\r\n\t            this.lowerAnimation = this.lowerRunningAnimation;\r\n\t        }\r\n\t        else {\r\n\t            this.upperAnimation = this.upperStillAnimation;\r\n\t            this.lowerAnimation = this.lowerStillAnimation;\r\n\t        }\r\n\t        this.lowerAnimation.next(delta);\r\n\t        this.upperAnimation.next(delta);\r\n\t        this.jumping = false;\r\n\t        this.moving = false;\r\n\t        var totalVelocity = this.getVelocity();\r\n\t        this.toMove.x = totalVelocity.x * delta;\r\n\t        this.toMove.y = totalVelocity.y * delta;\r\n\t        this.updateDamageAnimations();\r\n\t        this.onGroundTimer -= delta;\r\n\t    };\r\n\t    Player.prototype.moveRight = function (delta) {\r\n\t        _super.prototype.moveRight.call(this, delta);\r\n\t    };\r\n\t    Player.prototype.moveLeft = function (delta) {\r\n\t        _super.prototype.moveLeft.call(this, delta);\r\n\t    };\r\n\t    Player.prototype.getCollisionArea = function () {\r\n\t        var collisionArea = new model_1.Rectangle(this.position.x + 8, this.position.y + 14, 32, 68);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Player.prototype.getProjectileCollisionArea = function () {\r\n\t        var collisionArea = new model_1.Rectangle(this.position.x + 14, this.position.y + 14, 20, 72);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Player.prototype.getCalculatedPos = function (position, size) {\r\n\t        return new model_1.Vector(this.calcPos(position.x, size, 25), this.calcPos(position.y, size, 43));\r\n\t    };\r\n\t    Player.prototype.calcPos = function (value, size, offset) {\r\n\t        return value - (size / 2 - offset);\r\n\t    };\r\n\t    Player.prototype.jump = function () {\r\n\t        if (!this.jumping) {\r\n\t            this.jumping = true;\r\n\t        }\r\n\t    };\r\n\t    Player.prototype.cast = function (type) {\r\n\t        this.spellHandler.cast(type);\r\n\t    };\r\n\t    Player.prototype.renderShield = function (renderCall) {\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(this.position.x - 18, this.position.y - 5, 80, 100, renderCall.vertecies);\r\n\t        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.shieldTextureCoords);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        return renderCall;\r\n\t    };\r\n\t    Player.prototype.stun = function () {\r\n\t        this.stunned = true;\r\n\t        this.stunnedAnimation.repetitions = 10;\r\n\t        this.stunnedAnimation.reset();\r\n\t    };\r\n\t    Player.prototype.updateDamageAnimations = function () {\r\n\t        var removeItems = [];\r\n\t        for (var _i = 0, _a = this.damageAnimations; _i < _a.length; _i++) {\r\n\t            var stickyAnimation = _a[_i];\r\n\t            stickyAnimation.animation.areaToRender.x = this.position.x - stickyAnimation.offset.x;\r\n\t            stickyAnimation.animation.areaToRender.y = this.position.y - stickyAnimation.offset.y;\r\n\t            if (stickyAnimation.animation.repetitions <= 0) {\r\n\t                removeItems.push(stickyAnimation);\r\n\t            }\r\n\t        }\r\n\t        for (var _b = 0, removeItems_1 = removeItems; _b < removeItems_1.length; _b++) {\r\n\t            var remove = removeItems_1[_b];\r\n\t            var index = this.damageAnimations.indexOf(remove);\r\n\t            if (index != -1) {\r\n\t                this.damageAnimations.splice(index, 1);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Player;\r\n\t}(character_1.Character));\r\n\texports.Player = Player;\r\n\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar SpellHandler = (function () {\r\n\t    function SpellHandler(animationHandler, projectileHandler, particleHandler, player, fireLevel, frostLevel, shieldLevel) {\r\n\t        this.fireLevel = fireLevel;\r\n\t        this.frostLevel = frostLevel;\r\n\t        this.shieldLevel = shieldLevel;\r\n\t        this.shieldCollidables = [];\r\n\t        this.castingShield = false;\r\n\t        this.break = 0;\r\n\t        this.refShieldCollidables = [];\r\n\t        this.maxMagicValue = 50 + (20 * this.fireLevel);\r\n\t        this.minMagicValue = 25 + (5 * this.fireLevel);\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.player = player;\r\n\t        this.createShieldCollidables();\r\n\t        this.initCasts();\r\n\t    }\r\n\t    SpellHandler.prototype.update = function (delta) {\r\n\t        if (this.currentCast && this.break == 0) {\r\n\t            this.currentCast.update(delta);\r\n\t            if (this.currentCast.done) {\r\n\t                this.currentCast.cancel();\r\n\t                this.currentCast = null;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (!this.castingShield) {\r\n\t                this.player.regenMana();\r\n\t            }\r\n\t        }\r\n\t        if (this.channelMagicCast.currentValue >= this.maxMagicValue) {\r\n\t            this.particleHandler.createMagicEffect(this.player.position, this.player.inverse);\r\n\t        }\r\n\t        if (this.castingShield) {\r\n\t            this.shieldCollidables = [];\r\n\t            for (var _i = 0, _a = this.refShieldCollidables; _i < _a.length; _i++) {\r\n\t                var collidable = _a[_i];\r\n\t                this.shieldCollidables.push(new model_1.Rectangle(collidable.x + this.player.position.x, collidable.y + this.player.position.y, collidable.width, collidable.height));\r\n\t            }\r\n\t            this.particleHandler.createShieldEffect(this.player.getCalculatedPos(this.player.position, 0), this.player.inverse, this.shieldLevel);\r\n\t        }\r\n\t        this.updateBreak(delta);\r\n\t    };\r\n\t    SpellHandler.prototype.cast = function (spellType) {\r\n\t        switch (spellType) {\r\n\t            case model_1.SpellType.fireball:\r\n\t                this.castFireBall();\r\n\t                break;\r\n\t            case model_1.SpellType.electricbolt:\r\n\t                this.castElectricBall();\r\n\t                break;\r\n\t            case model_1.SpellType.fireBlast:\r\n\t                this.castFireBlast();\r\n\t                break;\r\n\t            case model_1.SpellType.frostBlast:\r\n\t                this.castFrostBlast();\r\n\t                break;\r\n\t            case model_1.SpellType.shield:\r\n\t                this.castShield();\r\n\t                break;\r\n\t            case model_1.SpellType.channelmagic:\r\n\t                this.castChannelMagic();\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.createShieldCollidables = function () {\r\n\t        this.refShieldCollidables = [];\r\n\t        var posx = 17;\r\n\t        var posy = 40;\r\n\t        for (var i = 0; i < 20; i++) {\r\n\t            var angle = void 0;\r\n\t            var x = void 0;\r\n\t            angle = Math.PI * (i * 0.1 + 0.6);\r\n\t            x = posx + (30 * Math.cos(angle));\r\n\t            var y = posy + (40 * Math.sin(angle));\r\n\t            this.refShieldCollidables.push(new model_1.Rectangle(x, y, 12, 12));\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.castShield = function () {\r\n\t        if (this.player.useMana(0.1)) {\r\n\t            if (this.break == 0) {\r\n\t                this.castingShield = true;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.break = 500;\r\n\t            this.player.shieldExplosion(this.player.inverse);\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.updateBreak = function (delta) {\r\n\t        this.break -= delta;\r\n\t        if (this.break < 0) {\r\n\t            this.break = 0;\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.castFireBall = function () {\r\n\t        if (!this.currentCast || (this.currentCast == this.fireBallCast && this.fireBallCast.currentAnimation.repetitions == 1)) {\r\n\t            if (this.player.useMana(20)) {\r\n\t                this.fireBallCast.reset();\r\n\t                this.fireBallCast.size = this.channelMagicCast.currentValue;\r\n\t                this.channelMagicCast.resetValue();\r\n\t                this.currentCast = this.fireBallCast;\r\n\t            }\r\n\t            else {\r\n\t                this.break = 500;\r\n\t                if (this.castingShield) {\r\n\t                    this.player.shieldExplosion(this.player.inverse);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.castElectricBall = function () {\r\n\t    };\r\n\t    SpellHandler.prototype.castChannelMagic = function () {\r\n\t        if ((!this.currentCast || this.currentCast == this.channelMagicCast) && this.player.isMoving()) {\r\n\t            this.channelMagicCast.channeling = true;\r\n\t            this.channelMagicCast.done = false;\r\n\t            this.currentCast = this.channelMagicCast;\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.castFireBlast = function () {\r\n\t        if (!this.currentCast || this.currentCast == this.fireBlastCast) {\r\n\t            if (this.player.useMana(0.5)) {\r\n\t                this.fireBlastCast.reset();\r\n\t                this.currentCast = this.fireBlastCast;\r\n\t            }\r\n\t            else {\r\n\t                this.break = 500;\r\n\t                if (this.castingShield) {\r\n\t                    this.player.shieldExplosion(this.player.inverse);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.castFrostBlast = function () {\r\n\t        if (!this.currentCast || this.currentCast == this.frostBlastCast) {\r\n\t            if (this.player.useMana(0.5)) {\r\n\t                this.frostBlastCast.reset();\r\n\t                this.currentCast = this.frostBlastCast;\r\n\t            }\r\n\t            else {\r\n\t                this.break = 500;\r\n\t                if (this.castingShield) {\r\n\t                    this.player.shieldExplosion(this.player.inverse);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.initCasts = function () {\r\n\t        var _this = this;\r\n\t        var fireblastAnimation = new model_1.Animation([178]);\r\n\t        fireblastAnimation.repetitions = 1;\r\n\t        var onFireCast = this.getOnCastFireBlast(this.fireLevel);\r\n\t        this.fireBlastCast = new model_1.InstantCast(fireblastAnimation, onFireCast);\r\n\t        var frostBlastAnimation = new model_1.Animation([178]);\r\n\t        frostBlastAnimation.repetitions = 1;\r\n\t        var onFrostCast = this.getOnCastFrostBlast(this.frostLevel);\r\n\t        this.frostBlastCast = new model_1.InstantCast(frostBlastAnimation, onFrostCast);\r\n\t        var channelAnimation = new model_1.Animation([175]);\r\n\t        var channelLowerAnimation = new model_1.Animation([162]);\r\n\t        var onChannelMagic = function () {\r\n\t            _this.particleHandler.createChannelMagic(_this.player.position, _this.player.inverse);\r\n\t        };\r\n\t        var onCancelChannelMagic = function () {\r\n\t        };\r\n\t        this.channelMagicCast = new model_1.ChannelCast(channelAnimation, channelLowerAnimation, onChannelMagic, onCancelChannelMagic, 25 + (5 * this.fireLevel), this.maxMagicValue, 0.03);\r\n\t        var castAnimation = new model_1.Animation([170, 176, 177, 176]);\r\n\t        castAnimation.repetitions = 3;\r\n\t        castAnimation.timeToChange = 170;\r\n\t        var onFireBallUpdate = function (area, inverse, offsetX) {\r\n\t            _this.particleHandler.createFireBall(new model_1.Vector(area.x, area.y), area.width, inverse, offsetX);\r\n\t        };\r\n\t        var onFireBallCast = function (animation, size) {\r\n\t            _this.projectileHandler.createFireBall(_this.player.getCalculatedPos(_this.player.position, size), _this.player.inverse, 0.6, size, 11, onFireBallUpdate);\r\n\t            return animation;\r\n\t        };\r\n\t        this.fireBallCast = new model_1.SpellCast(castAnimation, 2, onFireBallCast);\r\n\t    };\r\n\t    SpellHandler.prototype.getOnCastFireBlast = function (fireLevel) {\r\n\t        var _this = this;\r\n\t        if (fireLevel == 0) {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFireBlast(_this.player.position, _this.player.inverse, 0);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        else if (fireLevel == 1) {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFireBlast(_this.player.position, _this.player.inverse, 1);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        else if (fireLevel == 2) {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFireBlast(_this.player.position, _this.player.inverse, 2);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFireBlast(_this.player.position, _this.player.inverse, 3);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t    };\r\n\t    SpellHandler.prototype.getOnCastFrostBlast = function (frostLevel) {\r\n\t        var _this = this;\r\n\t        if (frostLevel == 0) {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFrostBlast(_this.player.position, _this.player.inverse, 0);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        else if (frostLevel == 1) {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFrostBlast(_this.player.position, _this.player.inverse, 1);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        else if (frostLevel == 2) {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFrostBlast(_this.player.position, _this.player.inverse, 2);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            return function (animation) {\r\n\t                _this.particleHandler.createFrostBlast(_this.player.position, _this.player.inverse, 3);\r\n\t                return animation;\r\n\t            };\r\n\t        }\r\n\t        ;\r\n\t    };\r\n\t    return SpellHandler;\r\n\t}());\r\n\texports.SpellHandler = SpellHandler;\r\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar state_1 = __webpack_require__(406);\r\n\tvar Shadow = (function (_super) {\r\n\t    __extends(Shadow, _super);\r\n\t    function Shadow(position, width, height, projectileHandler, animationHandler) {\r\n\t        _super.call(this, position, width, height);\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.hitAreaOffset = 50;\r\n\t        this.searchAreaOffset = 100;\r\n\t        this.hp = 300;\r\n\t        this.trackingSpeed = 0.2;\r\n\t        this.idleSpeed = 0;\r\n\t        this.minDistance = 30;\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.idleAnimation = new model_1.Animation([118]);\r\n\t        this.idleToTrackingAnimation = new model_1.Animation([119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132]);\r\n\t        this.idleToTrackingAnimation.repetitions = 13;\r\n\t        this.idleToTrackingAnimation.timeToChange = 50;\r\n\t        this.trackingToIdleTransitionAnimation = new model_1.Animation([132, 130, 127, 124, 119]);\r\n\t        this.trackingToIdleTransitionAnimation.repetitions = 4;\r\n\t        this.trackingAnimation = new model_1.Animation([133, 134, 135]);\r\n\t        this.hitAnimation = new model_1.Animation([136, 136, 137, 137, 138, 138]);\r\n\t        this.hitAnimation.timeToChange = 150;\r\n\t        this.currentAnimation = this.hitAnimation;\r\n\t        this.idleAnimation.timeToChange = 175;\r\n\t    }\r\n\t    Shadow.prototype.update = function (delta, tiles, player) {\r\n\t        _super.prototype.update.call(this, delta, tiles, player);\r\n\t        this.currentAnimation.next(delta);\r\n\t        this.npcAction(delta, player, tiles);\r\n\t    };\r\n\t    Shadow.prototype.getCollisionArea = function () {\r\n\t        var collisionArea;\r\n\t        if (this.currentState != state_1.State.Tracking && this.currentState != state_1.State.InHitRange) {\r\n\t            collisionArea = new model_1.Rectangle(this.position.x + this.width / 2, this.position.y - 5 + this.height, 0, 0);\r\n\t        }\r\n\t        else {\r\n\t            collisionArea = new model_1.Rectangle(this.position.x, this.position.y - 5, this.width, this.height);\r\n\t        }\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Shadow.prototype.hit = function (delta, player, tiles) {\r\n\t        _super.prototype.hit.call(this, delta, player, tiles);\r\n\t        if (this.hitAnimation.frameIndex == 2 && !this.hitting) {\r\n\t            this.hitting = true;\r\n\t            var pos = void 0;\r\n\t            if (this.inverse) {\r\n\t                pos = new model_1.Vector(this.position.x + 30, this.position.y + 20);\r\n\t            }\r\n\t            else {\r\n\t                pos = new model_1.Vector(this.position.x - 50, this.position.y + 20);\r\n\t            }\r\n\t            var projectile = this.projectileHandler.createCollisionProjectile(pos, this.width, this.inverse, 60, new model_1.Vector(1, 0.8));\r\n\t        }\r\n\t        if (this.hitAnimation.frameIndex == 0) {\r\n\t            this.hitting = false;\r\n\t        }\r\n\t    };\r\n\t    Shadow.prototype.idle = function (delta, player, tiles) {\r\n\t        _super.prototype.idle.call(this, delta, player, tiles);\r\n\t        this.stop();\r\n\t        this.burnValue = 0;\r\n\t    };\r\n\t    Shadow.prototype.idleToTrackingTransition = function (delta) {\r\n\t        this.currentAnimation = this.idleToTrackingAnimation;\r\n\t        this.stop();\r\n\t        if (this.idleToTrackingAnimation.repetitions == 0) {\r\n\t            this.trackingTime = this.trackingMaxTime;\r\n\t            this.currentState = state_1.State.Tracking;\r\n\t            this.currentAnimation = this.trackingAnimation;\r\n\t            this.maxSpeed = this.trackingSpeed;\r\n\t            this.actualSpeed = this.maxSpeed;\r\n\t            this.idleToTrackingAnimation.reset();\r\n\t            this.idleToTrackingAnimation.repetitions = 13;\r\n\t        }\r\n\t    };\r\n\t    Shadow.prototype.trackingToInRangeTransition = function (delta) {\r\n\t        this.currentState = state_1.State.InHitRange;\r\n\t    };\r\n\t    Shadow.prototype.trackingToIdleTransition = function (delta) {\r\n\t        this.currentAnimation = this.trackingToIdleTransitionAnimation;\r\n\t        this.stop();\r\n\t        if (this.trackingToIdleTransitionAnimation.repetitions == 0) {\r\n\t            this.currentState = state_1.State.Idle;\r\n\t            this.currentAnimation = this.idleAnimation;\r\n\t            this.maxSpeed = this.idleSpeed;\r\n\t            this.actualSpeed = this.maxSpeed;\r\n\t            this.trackingToIdleTransitionAnimation.reset();\r\n\t            this.trackingToIdleTransitionAnimation.repetitions = 4;\r\n\t        }\r\n\t    };\r\n\t    Shadow.prototype.inRange = function (player, offset, tiles) {\r\n\t        var deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        if (magnitude < offset) {\r\n\t            if (this.clearShoot(deltaPos, tiles)) {\r\n\t                return true;\r\n\t            }\r\n\t            else {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return false;\r\n\t        }\r\n\t    };\r\n\t    Shadow.prototype.clearShoot = function (deltaPos, tiles) {\r\n\t        var clear = true;\r\n\t        var pathBlocks = this.getPathBlocks(deltaPos);\r\n\t        for (var _i = 0, pathBlocks_1 = pathBlocks; _i < pathBlocks_1.length; _i++) {\r\n\t            var block = pathBlocks_1[_i];\r\n\t            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n\t                clear = false;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return clear;\r\n\t    };\r\n\t    Shadow.prototype.getPathBlocks = function (deltaPos) {\r\n\t        var blocksize = 20;\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        var direction = deltaPos.copy(deltaPos);\r\n\t        var bowPosition = new model_1.Vector(this.position.x, this.position.y + 10);\r\n\t        direction.normalize();\r\n\t        var blocks = [];\r\n\t        for (var i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\t            var newMagnitude = magnitude - (i * blocksize);\r\n\t            blocks.push(new model_1.Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n\t        }\r\n\t        return blocks;\r\n\t    };\r\n\t    return Shadow;\r\n\t}(enemy_1.Enemy));\r\n\texports.Shadow = Shadow;\r\n\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar state_1 = __webpack_require__(406);\r\n\tvar Apprentice = (function (_super) {\r\n\t    __extends(Apprentice, _super);\r\n\t    function Apprentice(position, width, height, projectileHandler, animationHandler, particleHandler) {\r\n\t        var _this = this;\r\n\t        _super.call(this, position, width, height);\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.hitAreaOffset = 500;\r\n\t        this.searchAreaOffset = 500;\r\n\t        this.hp = 50;\r\n\t        this.trackingSpeed = 0.05;\r\n\t        this.idleSpeed = 0.05;\r\n\t        this.minDistance = 30;\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.projectileVelocity = 0.5;\r\n\t        this.shoot = false;\r\n\t        this.onBlackFireUpdate = function (area, inverse, offsetX) {\r\n\t            _this.particleHandler.createNecroFireBall(new model_1.Vector(area.x, area.y), area.width, inverse, offsetX);\r\n\t        };\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.idleAnimation = new model_1.Animation([139, 140, 141, 142, 143]);\r\n\t        this.idleAnimation.timeToChange = 175;\r\n\t        this.trackingAnimation = new model_1.Animation([139, 140, 141, 142, 143]);\r\n\t        this.trackingAnimation.timeToChange = 175;\r\n\t        this.hitAnimation = new model_1.Animation([139, 140, 141, 142, 143]);\r\n\t        this.hitAnimation.timeToChange = 250;\r\n\t        this.currentAnimation = this.hitAnimation;\r\n\t    }\r\n\t    Apprentice.prototype.update = function (delta, tiles, player) {\r\n\t        _super.prototype.update.call(this, delta, tiles, player);\r\n\t        this.currentAnimation.next(delta);\r\n\t        this.npcAction(delta, player, tiles);\r\n\t    };\r\n\t    Apprentice.prototype.getCollisionArea = function () {\r\n\t        var collisionArea;\r\n\t        collisionArea = new model_1.Rectangle(this.position.x + 25, this.position.y + 15, this.width - 50, this.height - 20);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Apprentice.prototype.hit = function (delta, player, tiles) {\r\n\t        _super.prototype.hit.call(this, delta, player, tiles);\r\n\t        if (this.hitAnimation.frameIndex == 3) {\r\n\t            if (!this.shoot) {\r\n\t                var velocity = this.getDeltaPosition(player, 0, 0);\r\n\t                velocity.y = velocity.y + 20;\r\n\t                velocity.normalize();\r\n\t                velocity.multiply(this.projectileVelocity);\r\n\t                var pos = new model_1.Vector(this.position.x, this.position.y);\r\n\t                this.projectileHandler.createNecroBall(pos, 40, this.inverse, velocity, 100, this.onBlackFireUpdate);\r\n\t                this.shoot = true;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.shoot = false;\r\n\t        }\r\n\t    };\r\n\t    Apprentice.prototype.idle = function (delta, player, tiles) {\r\n\t        _super.prototype.idle.call(this, delta, player, tiles);\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t        this.patrol(delta);\r\n\t    };\r\n\t    Apprentice.prototype.idleToTrackingTransition = function (delta) {\r\n\t        this.currentState = state_1.State.Tracking;\r\n\t    };\r\n\t    Apprentice.prototype.trackingToInRangeTransition = function (delta) {\r\n\t        this.currentState = state_1.State.InHitRange;\r\n\t    };\r\n\t    Apprentice.prototype.trackingToIdleTransition = function (delta) {\r\n\t        this.currentState = state_1.State.Idle;\r\n\t    };\r\n\t    Apprentice.prototype.inRange = function (player, offset, tiles) {\r\n\t        var deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        if (magnitude < offset) {\r\n\t            if (this.clearShoot(deltaPos, tiles)) {\r\n\t                return true;\r\n\t            }\r\n\t            else {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return false;\r\n\t        }\r\n\t    };\r\n\t    Apprentice.prototype.clearShoot = function (deltaPos, tiles) {\r\n\t        var clear = true;\r\n\t        var pathBlocks = this.getPathBlocks(deltaPos);\r\n\t        for (var _i = 0, pathBlocks_1 = pathBlocks; _i < pathBlocks_1.length; _i++) {\r\n\t            var block = pathBlocks_1[_i];\r\n\t            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n\t                clear = false;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return clear;\r\n\t    };\r\n\t    Apprentice.prototype.getPathBlocks = function (deltaPos) {\r\n\t        var blocksize = 20;\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        var direction = deltaPos.copy(deltaPos);\r\n\t        var bowPosition = new model_1.Vector(this.position.x, this.position.y + 10);\r\n\t        direction.normalize();\r\n\t        var blocks = [];\r\n\t        for (var i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\t            var newMagnitude = magnitude - (i * blocksize);\r\n\t            blocks.push(new model_1.Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n\t        }\r\n\t        return blocks;\r\n\t    };\r\n\t    return Apprentice;\r\n\t}(enemy_1.Enemy));\r\n\texports.Apprentice = Apprentice;\r\n\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar state_1 = __webpack_require__(406);\r\n\tvar Screamer = (function (_super) {\r\n\t    __extends(Screamer, _super);\r\n\t    function Screamer(position, width, height, projectileHandler, animationHandler, particleHandler) {\r\n\t        var _this = this;\r\n\t        _super.call(this, position, width, height);\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.hitAreaOffset = 500;\r\n\t        this.searchAreaOffset = 500;\r\n\t        this.hp = 200;\r\n\t        this.hitDamage = 50;\r\n\t        this.trackingSpeed = 0.4;\r\n\t        this.idleSpeed = 0.1;\r\n\t        this.minDistance = 30;\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.projectileVelocity = 0.5;\r\n\t        this.onBlackFireUpdate = function (area, inverse, offsetX) {\r\n\t            _this.particleHandler.createNecroFireBall(new model_1.Vector(area.x, area.y), area.width, inverse, offsetX);\r\n\t        };\r\n\t        this.hitTimer = 0;\r\n\t        this.chargeTimer = 1000;\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.acceleration = 0.1;\r\n\t        this.idleAnimation = new model_1.Animation([560, 561, 562, 563, 564, 565, 566, 567]);\r\n\t        this.idleAnimation.timeToChange = 175;\r\n\t        this.trackingAnimation = new model_1.Animation([568, 569, 570, 571, 572, 573, 574, 575]);\r\n\t        this.trackingAnimation.timeToChange = 175;\r\n\t        this.hitAnimation = new model_1.Animation([568, 569, 570, 571, 572, 573, 574, 575]);\r\n\t        this.hitAnimation.timeToChange = 250;\r\n\t        this.currentAnimation = this.hitAnimation;\r\n\t    }\r\n\t    Screamer.prototype.update = function (delta, tiles, player) {\r\n\t        _super.prototype.update.call(this, delta, tiles, player);\r\n\t        this.currentAnimation.next(delta);\r\n\t        if (this.hitTimer > 0) {\r\n\t            this.hitTimer -= delta;\r\n\t        }\r\n\t        this.npcAction(delta, player, tiles);\r\n\t    };\r\n\t    Screamer.prototype.getCollisionArea = function () {\r\n\t        var collisionArea;\r\n\t        collisionArea = new model_1.Rectangle(this.position.x + 15, this.position.y, this.width - 30, this.height - 10);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    Screamer.prototype.hit = function (delta, player, tiles) {\r\n\t        _super.prototype.hit.call(this, delta, player, tiles);\r\n\t        if (this.hitTimer <= 0) {\r\n\t            if (this.collisionDetection.aabbCheck(this.getCollisionArea(), player.getCollisionArea())) {\r\n\t                this.hitTimer = 500;\r\n\t                this.chargeTimer = 1000;\r\n\t                this.currentState = state_1.State.Idle;\r\n\t                player.takeDamage(this.hitDamage);\r\n\t                if (player.position.x < this.position.x) {\r\n\t                    player.hardHit(false, 0.8);\r\n\t                }\r\n\t                else {\r\n\t                    player.hardHit(true, 0.8);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Screamer.prototype.idle = function (delta, player, tiles) {\r\n\t        _super.prototype.idle.call(this, delta, player, tiles);\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t        this.patrol(delta);\r\n\t    };\r\n\t    Screamer.prototype.idleToTrackingTransition = function (delta) {\r\n\t        this.currentAnimation = this.trackingAnimation;\r\n\t        if (this.chargeTimer > 0) {\r\n\t            this.chargeTimer -= delta;\r\n\t        }\r\n\t        else {\r\n\t            this.currentState = state_1.State.Tracking;\r\n\t        }\r\n\t    };\r\n\t    Screamer.prototype.trackingToInRangeTransition = function (delta) {\r\n\t        this.currentState = state_1.State.InHitRange;\r\n\t    };\r\n\t    Screamer.prototype.trackingToIdleTransition = function (delta) {\r\n\t        this.currentState = state_1.State.Idle;\r\n\t    };\r\n\t    Screamer.prototype.track = function (player, delta, tiles) {\r\n\t        _super.prototype.track.call(this, player, delta, tiles, 30);\r\n\t        this.setFreezeSpeed();\r\n\t    };\r\n\t    Screamer.prototype.inRange = function (player, offset, tiles) {\r\n\t        var deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        if (magnitude < offset) {\r\n\t            if (this.clearShoot(deltaPos, tiles)) {\r\n\t                return true;\r\n\t            }\r\n\t            else {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return false;\r\n\t        }\r\n\t    };\r\n\t    Screamer.prototype.moveToPlayer = function (delta, player, tiles, gapSize) {\r\n\t        var positionMiddle = this.position.x + (this.width / 2);\r\n\t        if (Math.abs(player.middlePosition.x - positionMiddle) > gapSize) {\r\n\t            if (player.middlePosition.x < positionMiddle) {\r\n\t                this.moveLeft(delta);\r\n\t            }\r\n\t            else if (player.middlePosition.x > positionMiddle) {\r\n\t                this.moveRight(delta);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.currentState = state_1.State.Idle;\r\n\t            this.chargeTimer = 1000;\r\n\t        }\r\n\t    };\r\n\t    Screamer.prototype.clearShoot = function (deltaPos, tiles) {\r\n\t        var clear = true;\r\n\t        var pathBlocks = this.getPathBlocks(deltaPos);\r\n\t        for (var _i = 0, pathBlocks_1 = pathBlocks; _i < pathBlocks_1.length; _i++) {\r\n\t            var block = pathBlocks_1[_i];\r\n\t            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n\t                clear = false;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return clear;\r\n\t    };\r\n\t    Screamer.prototype.getPathBlocks = function (deltaPos) {\r\n\t        var blocksize = 20;\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        var direction = deltaPos.copy(deltaPos);\r\n\t        var bowPosition = new model_1.Vector(this.position.x, this.position.y + 10);\r\n\t        direction.normalize();\r\n\t        var blocks = [];\r\n\t        for (var i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\t            var newMagnitude = magnitude - (i * blocksize);\r\n\t            blocks.push(new model_1.Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n\t        }\r\n\t        return blocks;\r\n\t    };\r\n\t    return Screamer;\r\n\t}(enemy_1.Enemy));\r\n\texports.Screamer = Screamer;\r\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar enemy_1 = __webpack_require__(402);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar textureMapper_1 = __webpack_require__(363);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar state_1 = __webpack_require__(406);\r\n\tvar MasterSorcerer = (function (_super) {\r\n\t    __extends(MasterSorcerer, _super);\r\n\t    function MasterSorcerer(position, width, height, projectileHandler, animationHandler, particleHandler) {\r\n\t        var _this = this;\r\n\t        _super.call(this, position, width, height);\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.hitAreaOffset = 400;\r\n\t        this.searchAreaOffset = 800;\r\n\t        this.hp = 500;\r\n\t        this.trackingSpeed = 0.1;\r\n\t        this.idleSpeed = 0.1;\r\n\t        this.minDistance = 30;\r\n\t        this.textureMapper = textureMapper_1.TextureMapper.getInstance();\r\n\t        this.projectileVelocity = 0.5;\r\n\t        this.shoot = false;\r\n\t        this.onBlackFireUpdate = function (area, inverse, offsetX) {\r\n\t            _this.particleHandler.createNecroFireBall(new model_1.Vector(area.x, area.y), area.width, inverse, offsetX);\r\n\t        };\r\n\t        this.defaultChannelTime = 1500;\r\n\t        this.shootDefaultCooldown = 100;\r\n\t        this.shootCooldown = this.shootDefaultCooldown;\r\n\t        this.channelTimer = this.defaultChannelTime;\r\n\t        this.shootsFired = 0;\r\n\t        this.maxShoots = 10;\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.idleAnimation = new model_1.Animation([580, 581, 582, 583, 584, 585]);\r\n\t        this.idleAnimation.timeToChange = 175;\r\n\t        this.trackingAnimation = new model_1.Animation([580, 581, 582, 583, 584, 585]);\r\n\t        this.trackingAnimation.timeToChange = 175;\r\n\t        this.channelHitTransitionAnimation = new model_1.Animation([585, 597, 598]);\r\n\t        this.channelHitTransitionAnimation.timeToChange = 150;\r\n\t        this.hitAnimation = new model_1.Animation([598]);\r\n\t        this.hitAnimation.timeToChange = 150;\r\n\t        this.channelAnimation = new model_1.Animation([585]);\r\n\t        this.currentAnimation = this.hitAnimation;\r\n\t    }\r\n\t    MasterSorcerer.prototype.update = function (delta, tiles, player) {\r\n\t        _super.prototype.update.call(this, delta, tiles, player);\r\n\t        this.currentAnimation.next(delta);\r\n\t        this.npcAction(delta, player, tiles);\r\n\t    };\r\n\t    MasterSorcerer.prototype.getCollisionArea = function () {\r\n\t        var collisionArea;\r\n\t        collisionArea = new model_1.Rectangle(this.position.x + 25, this.position.y + 35, this.width - 50, this.height - 40);\r\n\t        return collisionArea;\r\n\t    };\r\n\t    MasterSorcerer.prototype.track = function (player, delta, tiles, gapSize) {\r\n\t        _super.prototype.track.call(this, player, delta, tiles, gapSize);\r\n\t        this.setFreezeSpeed();\r\n\t    };\r\n\t    MasterSorcerer.prototype.hit = function (delta, player, tiles) {\r\n\t        if (!this.inRange(player, this.hitAreaOffset, tiles) && this.hitAnimation.frameIndex == 0) {\r\n\t            this.currentState = state_1.State.Tracking;\r\n\t        }\r\n\t        this.moveToPlayer(delta, player, tiles, 10);\r\n\t        this.actualSpeed = 0;\r\n\t        if (this.channel(delta)) {\r\n\t            this.currentAnimation = this.channelAnimation;\r\n\t            this.particleHandler.createNecroChannelMagic(this.position, this.inverse);\r\n\t        }\r\n\t        else if (this.channelHitTransitionAnimation.frameIndex != 2) {\r\n\t            this.currentAnimation = this.channelHitTransitionAnimation;\r\n\t        }\r\n\t        else {\r\n\t            this.currentAnimation = this.hitAnimation;\r\n\t            if (this.shootCooldown <= 0) {\r\n\t                if (this.shootsFired < this.maxShoots) {\r\n\t                    this.shootsFired++;\r\n\t                    var velocity = this.getDeltaPosition(player, 0, this.rand(0, 50));\r\n\t                    velocity.y = velocity.y + 20;\r\n\t                    velocity.normalize();\r\n\t                    velocity.multiply(this.projectileVelocity);\r\n\t                    var pos = void 0;\r\n\t                    if (this.inverse) {\r\n\t                        pos = new model_1.Vector(this.position.x - 18, this.position.y + 20);\r\n\t                    }\r\n\t                    else {\r\n\t                        pos = new model_1.Vector(this.position.x + 80, this.position.y + 20);\r\n\t                    }\r\n\t                    this.projectileHandler.createNecroBall(pos, 25, this.inverse, velocity, 10, this.onBlackFireUpdate);\r\n\t                }\r\n\t                else {\r\n\t                    this.shootsFired = 0;\r\n\t                    this.channelTimer = this.defaultChannelTime;\r\n\t                    this.channelHitTransitionAnimation.reset();\r\n\t                }\r\n\t                this.shootCooldown = this.shootDefaultCooldown;\r\n\t            }\r\n\t            else {\r\n\t                this.shootCooldown -= delta;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    MasterSorcerer.prototype.idle = function (delta, player, tiles) {\r\n\t        _super.prototype.idle.call(this, delta, player, tiles);\r\n\t        this.actualSpeed = this.maxSpeed;\r\n\t        this.patrol(delta);\r\n\t    };\r\n\t    MasterSorcerer.prototype.idleToTrackingTransition = function (delta) {\r\n\t        this.currentState = state_1.State.Tracking;\r\n\t    };\r\n\t    MasterSorcerer.prototype.trackingToInRangeTransition = function (delta) {\r\n\t        this.currentState = state_1.State.InHitRange;\r\n\t    };\r\n\t    MasterSorcerer.prototype.trackingToIdleTransition = function (delta) {\r\n\t        this.currentState = state_1.State.Idle;\r\n\t    };\r\n\t    MasterSorcerer.prototype.inRange = function (player, offset, tiles) {\r\n\t        var deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        if (magnitude < offset) {\r\n\t            if (this.clearShoot(deltaPos, tiles)) {\r\n\t                return true;\r\n\t            }\r\n\t            else {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return false;\r\n\t        }\r\n\t    };\r\n\t    MasterSorcerer.prototype.channel = function (delta) {\r\n\t        this.channelTimer -= delta;\r\n\t        if (this.channelTimer <= 0) {\r\n\t            return false;\r\n\t        }\r\n\t        else {\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t    MasterSorcerer.prototype.clearShoot = function (deltaPos, tiles) {\r\n\t        var clear = true;\r\n\t        var pathBlocks = this.getPathBlocks(deltaPos);\r\n\t        for (var _i = 0, pathBlocks_1 = pathBlocks; _i < pathBlocks_1.length; _i++) {\r\n\t            var block = pathBlocks_1[_i];\r\n\t            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n\t                clear = false;\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return clear;\r\n\t    };\r\n\t    MasterSorcerer.prototype.getPathBlocks = function (deltaPos) {\r\n\t        var blocksize = 20;\r\n\t        var magnitude = deltaPos.magnitude();\r\n\t        var direction = deltaPos.copy(deltaPos);\r\n\t        var bowPosition = new model_1.Vector(this.position.x, this.position.y + 10);\r\n\t        direction.normalize();\r\n\t        var blocks = [];\r\n\t        for (var i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\t            var newMagnitude = magnitude - (i * blocksize);\r\n\t            blocks.push(new model_1.Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n\t        }\r\n\t        return blocks;\r\n\t    };\r\n\t    return MasterSorcerer;\r\n\t}(enemy_1.Enemy));\r\n\texports.MasterSorcerer = MasterSorcerer;\r\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar _1 = __webpack_require__(357);\r\n\tvar index_1 = __webpack_require__(347);\r\n\tvar deathType_1 = __webpack_require__(404);\r\n\tvar ShapeShifter = (function () {\r\n\t    function ShapeShifter(position, width, height, projectileHandler, animationHandler, particleHandler) {\r\n\t        this.position = position;\r\n\t        this.width = width;\r\n\t        this.height = height;\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.particleHandler = particleHandler;\r\n\t        this.color = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n\t        this.hp = 500;\r\n\t        this.renderHalper = _1.RenderHelper.getInstance();\r\n\t        this.sorcererAnimation = new index_1.Animation([600, 601, 602, 603, 604, 605, 606, 607]);\r\n\t        this.currentAnimation = this.sorcererAnimation;\r\n\t    }\r\n\t    ShapeShifter.prototype.getCollisionArea = function () {\r\n\t        throw new Error(\"Method not implemented.\");\r\n\t    };\r\n\t    ShapeShifter.prototype.takeDamage = function (damage, type) {\r\n\t        this.hp = this.hp - damage;\r\n\t        if (this.hp <= 0) {\r\n\t            if (type == index_1.SpellType.frostBlast) {\r\n\t                this.deathType = deathType_1.DeathType.freezeDeath;\r\n\t            }\r\n\t            else if (type == index_1.SpellType.fireBlast) {\r\n\t                this.deathType = deathType_1.DeathType.fireDeath;\r\n\t            }\r\n\t            else {\r\n\t                this.deathType = deathType_1.DeathType.swordDeath;\r\n\t            }\r\n\t            this.dead = true;\r\n\t        }\r\n\t    };\r\n\t    ShapeShifter.prototype.freeze = function () {\r\n\t        throw new Error(\"Method not implemented.\");\r\n\t    };\r\n\t    ShapeShifter.prototype.burn = function () {\r\n\t        throw new Error(\"Method not implemented.\");\r\n\t    };\r\n\t    ShapeShifter.prototype.update = function (delta) {\r\n\t        this.currentAnimation.next(delta);\r\n\t    };\r\n\t    ShapeShifter.prototype.createRenderCall = function (rendercall) {\r\n\t    };\r\n\t    return ShapeShifter;\r\n\t}());\r\n\texports.ShapeShifter = ShapeShifter;\r\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar _1 = __webpack_require__(418);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar player_1 = __webpack_require__(409);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar textRenderer_1 = __webpack_require__(421);\r\n\tvar animationHandler_1 = __webpack_require__(422);\r\n\tvar projectileHandler_1 = __webpack_require__(423);\r\n\tvar dynamicTileHandler_1 = __webpack_require__(424);\r\n\tvar particleHandler_1 = __webpack_require__(425);\r\n\tvar simpleParticleRenderer_1 = __webpack_require__(428);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar enemyHandler_1 = __webpack_require__(429);\r\n\tvar camera_1 = __webpack_require__(430);\r\n\tvar dynamicRenderer_1 = __webpack_require__(431);\r\n\tvar ui_1 = __webpack_require__(432);\r\n\tvar sceneHandler_1 = __webpack_require__(434);\r\n\tvar loadHelper_1 = __webpack_require__(346);\r\n\tvar localStorageHelper_1 = __webpack_require__(438);\r\n\tvar sceneIndex_1 = __webpack_require__(435);\r\n\tvar Game = (function () {\r\n\t    function Game(asset, canvas, level) {\r\n\t        this.asset = asset;\r\n\t        this.canvasWidth = 1200;\r\n\t        this.canvasHeight = 800;\r\n\t        this.fps = 60;\r\n\t        this.collision = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.loadHelper = loadHelper_1.LoadHelper.getInstance();\r\n\t        this.gameArea = new model_1.Rectangle(-50, -50, this.canvasWidth + 100, this.canvasHeight + 100);\r\n\t        this.level = new model_1.Level();\r\n\t        this.debugHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.levelCompleted = false;\r\n\t        this.deathTimer = 0;\r\n\t        this.renderCalls = new Map();\r\n\t        this.context = new _1.Context(asset, this.canvasWidth, this.canvasHeight, canvas);\r\n\t        this.renderer = new render_1.Renderer(this.context);\r\n\t        this.sceneHandler = new sceneHandler_1.SceneHandler(this.renderer, [this.canvasWidth, this.canvasHeight], canvas, this);\r\n\t        this.colorRenderer = new render_1.ColorRenderer(this.context);\r\n\t        this.simpleParticleRenderer = new simpleParticleRenderer_1.SimpleParticleRenderer(this.context);\r\n\t        this.dynamicRenderer = new dynamicRenderer_1.DynamicRenderer(this.context);\r\n\t        this.levelData = level;\r\n\t        this.initKeyBindings();\r\n\t        this.reset(this.levelData);\r\n\t        this.initLoop();\r\n\t    }\r\n\t    Game.prototype.reset = function (levelData) {\r\n\t        this.loadLevel(levelData);\r\n\t    };\r\n\t    Game.prototype.initLoop = function () {\r\n\t        this.intevalTimer = setInterval(this.run(), 0);\r\n\t    };\r\n\t    Game.prototype.run = function () {\r\n\t        var _this = this;\r\n\t        this.lastUpdate = (new Date).getTime();\r\n\t        var loops = 0, skipTicks = 1000 / this.fps, maxFrameSkip = 3, nextGameTick = (new Date).getTime();\r\n\t        return function () {\r\n\t            loops = 0;\r\n\t            while ((new Date).getTime() > nextGameTick && loops < maxFrameSkip) {\r\n\t                var delta = nextGameTick - _this.lastUpdate;\r\n\t                _this.lastUpdate = nextGameTick;\r\n\t                //this.debugHandler.debugRects = [];\r\n\t                if (_this.sceneHandler.started) {\r\n\t                    if (!_this.player.dead && !_this.levelCompleted) {\r\n\t                        _this.checkGoal();\r\n\t                        _this.checkKeys(delta);\r\n\t                        _this.collision.checkCoutOfBounds(_this.player, _this.level.gameSize);\r\n\t                        _this.player.update(_this.level.tiles, _this.dynamicTileHandler.dynamicTiles, delta);\r\n\t                        _this.dynamicTileHandler.update(_this.player, delta);\r\n\t                        _this.enemyHandler.update(delta, _this.level.tiles, _this.player);\r\n\t                        _this.animationHandler.update(delta);\r\n\t                        _this.projectileHandler.update(delta, _this.level.tiles, _this.player, _this.dynamicTileHandler.dynamicTiles);\r\n\t                        _this.UI.update(_this.player.hp, _this.player.mana);\r\n\t                        _this.camera.update(_this.player.position);\r\n\t                        _this.particleHandler.update(delta, _this.enemyHandler.enemies);\r\n\t                    }\r\n\t                    else if (_this.deathTimer < 3000) {\r\n\t                        _this.deathTimer += delta;\r\n\t                        _this.player.position.x = -1000;\r\n\t                        _this.player.position.y = -1000;\r\n\t                        _this.enemyHandler.update(delta, _this.level.tiles, _this.player);\r\n\t                        _this.animationHandler.update(delta);\r\n\t                        _this.projectileHandler.update(delta, _this.level.tiles, _this.player, _this.dynamicTileHandler.dynamicTiles);\r\n\t                        _this.particleHandler.update(delta, _this.enemyHandler.enemies);\r\n\t                    }\r\n\t                    else {\r\n\t                        _this.sceneHandler.started = false;\r\n\t                        _this.sceneHandler.setCurrentLevel(_this.level.name);\r\n\t                        _this.sceneHandler.currentScene = sceneIndex_1.SceneIndex.RestartMenu;\r\n\t                    }\r\n\t                    _this.render();\r\n\t                }\r\n\t                else {\r\n\t                    _this.sceneHandler.update();\r\n\t                    _this.sceneHandler.render();\r\n\t                }\r\n\t                nextGameTick += skipTicks;\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    Game.prototype.render = function () {\r\n\t        this.context.clear([0, 0, 0, 0.95]);\r\n\t        var dynamicRenderCall = new render_1.DynamicRenderCall();\r\n\t        var renderCall = new render_1.RenderCall();\r\n\t        this.renderCalls.clear();\r\n\t        var colorRenderCall = new render_1.ColorRenderCall();\r\n\t        var colorRenderCalls = [];\r\n\t        var simpleRenderCalls = [];\r\n\t        // this.debugHandler.debugRects = this.player.getShieldCollidables();\r\n\t        //GAME\r\n\t        this.enemyHandler.createRenderCall(colorRenderCall);\r\n\t        this.tileMap.createGoalRenderCall(this.level.end, renderCall);\r\n\t        if (this.player.dead) {\r\n\t            this.textRenderer.createTextRenderCall(400, 64, 50, renderCall, this.camera.position);\r\n\t            for (var _i = 0, _a = this.player.damageAnimations; _i < _a.length; _i++) {\r\n\t                var stickyAnimation = _a[_i];\r\n\t                this.animationHandler.remove(stickyAnimation.animation);\r\n\t            }\r\n\t            this.player.damageAnimations = [];\r\n\t        }\r\n\t        else if (this.levelCompleted) {\r\n\t            this.textRenderer.createTextRenderCall(800, 96, 51, renderCall, this.camera.position);\r\n\t        }\r\n\t        else {\r\n\t            renderCall = this.player.createRenderCall(renderCall);\r\n\t        }\r\n\t        this.animationHandler.createDynamicRenderCall(dynamicRenderCall, this.camera.position);\r\n\t        this.animationHandler.createRenderCall(colorRenderCall);\r\n\t        this.animationHandler.createStaticRenderCall(renderCall);\r\n\t        this.UI.createRenderCall(renderCall, this.camera.position);\r\n\t        simpleRenderCalls = this.particleHandler.createRenderCalls(simpleRenderCalls);\r\n\t        this.debugHandler.createRenderCall(renderCall);\r\n\t        colorRenderCalls.push(colorRenderCall);\r\n\t        this.tileMap.createRenderCall(this.renderCalls);\r\n\t        this.renderCalls = this.dynamicTileHandler.createRenderCall(this.renderCalls);\r\n\t        this.renderCalls.set(-1, renderCall);\r\n\t        this.renderer.render(this.renderCalls, this.camera.position);\r\n\t        this.colorRenderer.render(colorRenderCalls, this.camera.position);\r\n\t        this.simpleParticleRenderer.render(simpleRenderCalls, this.camera.position);\r\n\t        this.dynamicRenderer.render([dynamicRenderCall]);\r\n\t    };\r\n\t    Game.prototype.checkGoal = function () {\r\n\t        this.levelCompleted = this.collision.aabbCheck(this.player.getCollisionArea(), this.collisionAreaEnd);\r\n\t        if (this.levelCompleted) {\r\n\t            this.sceneHandler.levelCompleted(this.level.name);\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.checkKeys = function (delta) {\r\n\t        if (!this.player.stunned) {\r\n\t            if (this.leftKeyPress) {\r\n\t                this.player.moveLeft(delta);\r\n\t            }\r\n\t            else if (this.rightKeyPress) {\r\n\t                this.player.moveRight(delta);\r\n\t            }\r\n\t            if (this.jumpKeyPress) {\r\n\t                this.player.jump();\r\n\t            }\r\n\t            if (this.shieldPress) {\r\n\t                this.player.cast(model_1.SpellType.shield);\r\n\t            }\r\n\t            if (this.frostKeyPress) {\r\n\t                this.player.cast(model_1.SpellType.frostBlast);\r\n\t            }\r\n\t            else if (this.fireKeyPress) {\r\n\t                this.player.cast(model_1.SpellType.fireBlast);\r\n\t            }\r\n\t            else if (this.fireballKeyPress) {\r\n\t                this.player.cast(model_1.SpellType.fireball);\r\n\t            }\r\n\t            else if (this.channelMagicKeyPress) {\r\n\t                this.player.cast(model_1.SpellType.channelmagic);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Game.prototype.initKeyBindings = function () {\r\n\t        var _this = this;\r\n\t        document.body.addEventListener(\"keydown\", function (event) {\r\n\t            var keyCode = event.keyCode;\r\n\t            switch (keyCode) {\r\n\t                case 65:\r\n\t                    _this.leftKeyPress = true;\r\n\t                    break;\r\n\t                case 68:\r\n\t                    _this.rightKeyPress = true;\r\n\t                    break;\r\n\t                case 87:\r\n\t                    _this.jumpKeyPress = true;\r\n\t                    break;\r\n\t                case 97:\r\n\t                    _this.fireballKeyPress = true;\r\n\t                    break;\r\n\t                case 49:\r\n\t                    _this.fireballKeyPress = true;\r\n\t                    break;\r\n\t                case 98:\r\n\t                    _this.channelMagicKeyPress = true;\r\n\t                    break;\r\n\t                case 50:\r\n\t                    _this.channelMagicKeyPress = true;\r\n\t                    break;\r\n\t                case 99:\r\n\t                    _this.frostKeyPress = true;\r\n\t                    break;\r\n\t                case 51:\r\n\t                    _this.frostKeyPress = true;\r\n\t                    break;\r\n\t                case 100:\r\n\t                    _this.fireKeyPress = true;\r\n\t                    break;\r\n\t                case 52:\r\n\t                    _this.fireKeyPress = true;\r\n\t                    break;\r\n\t                case 101:\r\n\t                    _this.shieldPress = true;\r\n\t                    break;\r\n\t                case 53:\r\n\t                    _this.shieldPress = true;\r\n\t                    break;\r\n\t                case 38:\r\n\t                    _this.jumpKeyPress = true;\r\n\t                    break;\r\n\t                case 39:\r\n\t                    _this.rightKeyPress = true;\r\n\t                    break;\r\n\t                case 37:\r\n\t                    _this.leftKeyPress = true;\r\n\t                    break;\r\n\t            }\r\n\t        });\r\n\t        document.body.addEventListener(\"keyup\", function (event) {\r\n\t            var keyCode = event.keyCode;\r\n\t            switch (keyCode) {\r\n\t                case 65:\r\n\t                    _this.leftKeyPress = false;\r\n\t                    break;\r\n\t                case 68:\r\n\t                    _this.rightKeyPress = false;\r\n\t                    break;\r\n\t                case 87:\r\n\t                    _this.jumpKeyPress = false;\r\n\t                    break;\r\n\t                case 97:\r\n\t                    _this.fireballKeyPress = false;\r\n\t                    break;\r\n\t                case 49:\r\n\t                    _this.fireballKeyPress = false;\r\n\t                    break;\r\n\t                case 98:\r\n\t                    _this.channelMagicKeyPress = false;\r\n\t                    break;\r\n\t                case 50:\r\n\t                    _this.channelMagicKeyPress = false;\r\n\t                    break;\r\n\t                case 99:\r\n\t                    _this.frostKeyPress = false;\r\n\t                    break;\r\n\t                case 51:\r\n\t                    _this.frostKeyPress = false;\r\n\t                    break;\r\n\t                case 100:\r\n\t                    _this.fireKeyPress = false;\r\n\t                    break;\r\n\t                case 52:\r\n\t                    _this.fireKeyPress = false;\r\n\t                    break;\r\n\t                case 101:\r\n\t                    _this.shieldPress = false;\r\n\t                    break;\r\n\t                case 53:\r\n\t                    _this.shieldPress = false;\r\n\t                    break;\r\n\t                case 38:\r\n\t                    _this.jumpKeyPress = false;\r\n\t                    break;\r\n\t                case 39:\r\n\t                    _this.rightKeyPress = false;\r\n\t                    break;\r\n\t                case 37:\r\n\t                    _this.leftKeyPress = false;\r\n\t                    break;\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Game.prototype.loadLevel = function (levelData) {\r\n\t        var progress = localStorageHelper_1.LocalStorageHelper.getInstance().getCurrentProgress();\r\n\t        this.particleHandler = new particleHandler_1.ParticleHandler();\r\n\t        this.animationHandler = new animationHandler_1.AnimationHandler(this.particleHandler);\r\n\t        this.projectileHandler = new projectileHandler_1.ProjectileHandler(this.animationHandler, this.getSpellLevel(progress.defence));\r\n\t        this.dynamicTileHandler = new dynamicTileHandler_1.DynamicTileHandler();\r\n\t        this.level = this.loadHelper.levelDataToLevel(levelData, this.projectileHandler, this.animationHandler, this.particleHandler);\r\n\t        this.collisionAreaEnd = new model_1.Rectangle(this.level.end.x + (this.level.end.width / 2), this.level.end.y + (this.level.end.height / 2), 1, 1);\r\n\t        this.particleHandler.tiles = this.level.tiles;\r\n\t        this.camera = new camera_1.Camera([this.level.camera[0], this.level.camera[1]], [this.canvasWidth, this.canvasHeight], this.level.gameSize);\r\n\t        this.levelCompleted = false;\r\n\t        var hp = 100 + (10 * progress.hp);\r\n\t        var mana = 200 + (20 * progress.mana);\r\n\t        this.player = new player_1.Player(new model_1.Vector(this.level.player[0], this.level.player[1]), this.context, this.projectileHandler, this.animationHandler, this.particleHandler, 48, 85, hp, mana, progress, this.getSpellLevel(progress.fire), this.getSpellLevel(progress.frost), this.getSpellLevel(progress.defence));\r\n\t        this.collision.createGrid(new model_1.Vector(this.level.gameSize[0], this.level.gameSize[1]), this.level.tiles);\r\n\t        this.UI = new ui_1.UI(hp, mana);\r\n\t        this.enemyHandler = new enemyHandler_1.EnemyHandler(this.context, this.projectileHandler, this.animationHandler, this.particleHandler);\r\n\t        this.enemyHandler.enemies = this.level.enemies;\r\n\t        this.deathTimer = 0;\r\n\t        this.dynamicTileHandler.dynamicTiles = this.level.dynamicTiles;\r\n\t        this.tileMap = new _1.TileMap(this.level.tiles, this.level.decorativeTiles);\r\n\t        this.textRenderer = new textRenderer_1.TextRenderer(this.context);\r\n\t    };\r\n\t    Game.prototype.getSpellLevel = function (spellPoints) {\r\n\t        if (spellPoints == 0) {\r\n\t            return 0;\r\n\t        }\r\n\t        else if (spellPoints < 3) {\r\n\t            return 1;\r\n\t        }\r\n\t        else if (spellPoints < 6) {\r\n\t            return 2;\r\n\t        }\r\n\t        else {\r\n\t            return 3;\r\n\t        }\r\n\t        ;\r\n\t    };\r\n\t    return Game;\r\n\t}());\r\n\texports.Game = Game;\r\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar context_1 = __webpack_require__(419);\r\n\texports.Context = context_1.Context;\r\n\tvar game_1 = __webpack_require__(417);\r\n\texports.Game = game_1.Game;\r\n\tvar tileMap_1 = __webpack_require__(420);\r\n\texports.TileMap = tileMap_1.TileMap;\r\n\tvar renderer_1 = __webpack_require__(358);\r\n\texports.Renderer = renderer_1.Renderer;\r\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar Context = (function () {\r\n\t    function Context(asset, width, height, canvas) {\r\n\t        this.tileTextures = new Map();\r\n\t        this.initContext(width, height, canvas);\r\n\t        this.initShaders(asset);\r\n\t    }\r\n\t    Context.prototype.clear = function (color) {\r\n\t        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n\t        this.gl.clearColor(color[0], color[1], color[2], color[3]);\r\n\t    };\r\n\t    Context.prototype.initContext = function (width, height, canvas) {\r\n\t        canvas.width = width;\r\n\t        canvas.height = height;\r\n\t        this.gl = canvas.getContext(\"experimental-webgl\");\r\n\t        console.log(\"Context initialized...\");\r\n\t    };\r\n\t    Context.prototype.initShaders = function (asset) {\r\n\t        var vertexShader = this.compileShader(asset.vertexShader, model_1.ShaderType.Vertex);\r\n\t        var fragmentShader = this.compileShader(asset.fragmentShader, model_1.ShaderType.Fragment);\r\n\t        var simpleParticleVertexShader = this.compileShader(asset.simpleParticleVertexShader, model_1.ShaderType.Vertex);\r\n\t        var simpleParticleFragmentShader = this.compileShader(asset.simpleParticleFragmentShader, model_1.ShaderType.Fragment);\r\n\t        var dynamicVertexShader = this.compileShader(asset.dynamicVertexShader, model_1.ShaderType.Vertex);\r\n\t        var dynamicFragmentShader = this.compileShader(asset.dynamicFragmentShader, model_1.ShaderType.Fragment);\r\n\t        var colorVertexShader = this.compileShader(asset.colorVertexShader, model_1.ShaderType.Vertex);\r\n\t        var colorFragmentShader = this.compileShader(asset.colorFragmentShader, model_1.ShaderType.Fragment);\r\n\t        this.colorShaderProgram = this.gl.createProgram();\r\n\t        this.gl.attachShader(this.colorShaderProgram, colorVertexShader);\r\n\t        this.gl.attachShader(this.colorShaderProgram, colorFragmentShader);\r\n\t        this.gl.linkProgram(this.colorShaderProgram);\r\n\t        if (!this.gl.getProgramParameter(this.colorShaderProgram, this.gl.LINK_STATUS)) {\r\n\t            alert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.colorShaderProgram));\r\n\t        }\r\n\t        this.dynamicVertecyProgram = this.gl.createProgram();\r\n\t        this.gl.attachShader(this.dynamicVertecyProgram, dynamicVertexShader);\r\n\t        this.gl.attachShader(this.dynamicVertecyProgram, dynamicFragmentShader);\r\n\t        this.gl.linkProgram(this.dynamicVertecyProgram);\r\n\t        if (!this.gl.getProgramParameter(this.dynamicVertecyProgram, this.gl.LINK_STATUS)) {\r\n\t            alert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.dynamicVertecyProgram));\r\n\t        }\r\n\t        this.simpleParticleProgram = this.gl.createProgram();\r\n\t        this.gl.attachShader(this.simpleParticleProgram, simpleParticleVertexShader);\r\n\t        this.gl.attachShader(this.simpleParticleProgram, simpleParticleFragmentShader);\r\n\t        this.gl.linkProgram(this.simpleParticleProgram);\r\n\t        if (!this.gl.getProgramParameter(this.simpleParticleProgram, this.gl.LINK_STATUS)) {\r\n\t            alert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.simpleParticleProgram));\r\n\t        }\r\n\t        this.shaderProgram = this.gl.createProgram();\r\n\t        this.gl.attachShader(this.shaderProgram, vertexShader);\r\n\t        this.gl.attachShader(this.shaderProgram, fragmentShader);\r\n\t        this.gl.linkProgram(this.shaderProgram);\r\n\t        if (!this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS)) {\r\n\t            alert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.shaderProgram));\r\n\t        }\r\n\t        this.initAssetTextures(this.gl, asset);\r\n\t    };\r\n\t    Context.prototype.initAssetTextures = function (gl, asset) {\r\n\t        this.initTextures(gl, asset.tileAssets);\r\n\t        this.initBaseTextures(gl, asset);\r\n\t    };\r\n\t    Context.prototype.initTextures = function (gl, textureMap) {\r\n\t        var _this = this;\r\n\t        textureMap.forEach(function (tileAsset, key) {\r\n\t            var texture = gl.createTexture();\r\n\t            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, tileAsset.image);\r\n\t            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n\t            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n\t            _this.tileTextures.set(key, texture);\r\n\t        });\r\n\t    };\r\n\t    Context.prototype.initBaseTextures = function (gl, asset) {\r\n\t        this.glTexture = gl.createTexture();\r\n\t        gl.bindTexture(gl.TEXTURE_2D, this.glTexture);\r\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.texture);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t        gl.generateMipmap(gl.TEXTURE_2D);\r\n\t        this.frostParticelTexture = gl.createTexture();\r\n\t        gl.bindTexture(gl.TEXTURE_2D, this.frostParticelTexture);\r\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.particleTexture);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t        this.genericParticleTexture = gl.createTexture();\r\n\t        gl.bindTexture(gl.TEXTURE_2D, this.genericParticleTexture);\r\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.genericParticleTexture);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t        gl.enable(gl.BLEND);\r\n\t    };\r\n\t    Context.prototype.compileShader = function (source, shaderType) {\r\n\t        var shader;\r\n\t        if (shaderType == model_1.ShaderType.Fragment) {\r\n\t            shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n\t        }\r\n\t        else if (shaderType == model_1.ShaderType.Vertex) {\r\n\t            shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n\t        }\r\n\t        this.gl.shaderSource(shader, source);\r\n\t        this.gl.compileShader(shader);\r\n\t        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n\t            console.log(\"An error occurred compiling the shaders: \" + this.gl.getShaderInfoLog(shader));\r\n\t            return null;\r\n\t        }\r\n\t        return shader;\r\n\t    };\r\n\t    return Context;\r\n\t}());\r\n\texports.Context = Context;\r\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar renderCall_1 = __webpack_require__(359);\r\n\tvar renderHelper_1 = __webpack_require__(362);\r\n\tvar constants_1 = __webpack_require__(391);\r\n\tvar TileMap = (function () {\r\n\t    function TileMap(tiles, decorativeTiles) {\r\n\t        this.tiles = tiles;\r\n\t        this.decorativeTiles = decorativeTiles;\r\n\t        this.renderCalls = new Map();\r\n\t        this.decorativeRenderCalls = new Map();\r\n\t        this.renderHelper = renderHelper_1.RenderHelper.getInstance();\r\n\t        this.constants = constants_1.Constants.getInstance();\r\n\t        this.tileMap = new Map();\r\n\t        this.decorativeTileMap = new Map();\r\n\t        this.createStaticRenderCalls(this.tiles, this.tileMap, this.renderCalls);\r\n\t        this.createStaticRenderCalls(this.decorativeTiles, this.decorativeTileMap, this.decorativeRenderCalls);\r\n\t    }\r\n\t    TileMap.prototype.createStaticRenderCalls = function (tiles, tileMap, renderCalls) {\r\n\t        var _this = this;\r\n\t        for (var _i = 0, tiles_1 = tiles; _i < tiles_1.length; _i++) {\r\n\t            var tile = tiles_1[_i];\r\n\t            var set = tileMap.get(tile.key);\r\n\t            if (set) {\r\n\t                set.push(tile);\r\n\t            }\r\n\t            else {\r\n\t                tileMap.set(tile.key, [tile]);\r\n\t            }\r\n\t        }\r\n\t        tileMap.forEach(function (tiles, key) {\r\n\t            var renderCall = new renderCall_1.RenderCall();\r\n\t            renderCall.key = key;\r\n\t            for (var _i = 0, tiles_2 = tiles; _i < tiles_2.length; _i++) {\r\n\t                var tile = tiles_2[_i];\r\n\t                renderCall.vertecies = _this.renderHelper.getVertecies(tile.x, tile.y, tile.width, tile.height, renderCall.vertecies);\r\n\t                renderCall.textureCoords = _this.renderHelper.getTiledTextureCoordinates(tile, renderCall.textureCoords, _this.constants.tileSize);\r\n\t                renderCall.indecies = _this.renderHelper.getIndecies(renderCall.indecies);\r\n\t            }\r\n\t            renderCalls.set(renderCall.key, renderCall);\r\n\t        });\r\n\t    };\r\n\t    TileMap.prototype.createGoalRenderCall = function (goal, renderCall) {\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(goal.x, goal.y, goal.width, goal.height, renderCall.vertecies);\r\n\t        renderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, 550);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        return renderCall;\r\n\t    };\r\n\t    TileMap.prototype.createRenderCall = function (renderCalls) {\r\n\t        renderCalls = this.createDecorativeRenderCall(renderCalls);\r\n\t        this.renderCalls.forEach(function (renderCall, key) {\r\n\t            var set = renderCalls.get(key);\r\n\t            if (!set) {\r\n\t                renderCalls.set(key, new renderCall_1.RenderCall());\r\n\t                set = renderCalls.get(key);\r\n\t            }\r\n\t            set.vertecies.push.apply(set.vertecies, renderCall.vertecies);\r\n\t            set.indecies.push.apply(set.indecies, renderCall.indecies);\r\n\t            set.textureCoords.push.apply(set.textureCoords, renderCall.textureCoords);\r\n\t        });\r\n\t    };\r\n\t    TileMap.prototype.createDecorativeRenderCall = function (renderCalls) {\r\n\t        this.decorativeRenderCalls.forEach(function (renderCall, key) {\r\n\t            var set = renderCalls.get(key);\r\n\t            if (!set) {\r\n\t                renderCalls.set(key, new renderCall_1.RenderCall());\r\n\t                set = renderCalls.get(key);\r\n\t            }\r\n\t            set.vertecies.push.apply(set.vertecies, renderCall.vertecies);\r\n\t            set.indecies.push.apply(set.indecies, renderCall.indecies);\r\n\t            set.textureCoords.push.apply(set.textureCoords, renderCall.textureCoords);\r\n\t        });\r\n\t        return renderCalls;\r\n\t    };\r\n\t    return TileMap;\r\n\t}());\r\n\texports.TileMap = TileMap;\r\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar renderHelper_1 = __webpack_require__(362);\r\n\tvar TextRenderer = (function () {\r\n\t    function TextRenderer(context) {\r\n\t        this.renderHelper = new renderHelper_1.RenderHelper();\r\n\t        this.context = context;\r\n\t    }\r\n\t    TextRenderer.prototype.createTextRenderCall = function (sizeX, sizeY, type, renderCall, camera) {\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(((this.context.gl.canvas.width / 2) - (sizeX / 2) + camera[0]), ((this.context.gl.canvas.height / 2) - (sizeY / 2) + camera[1]), sizeX, sizeY, renderCall.vertecies);\r\n\t        renderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, type);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        return renderCall;\r\n\t    };\r\n\t    return TextRenderer;\r\n\t}());\r\n\texports.TextRenderer = TextRenderer;\r\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar AnimationHandler = (function () {\r\n\t    function AnimationHandler(particleHandler) {\r\n\t        this.animations = [];\r\n\t        this.dynamicAnimations = [];\r\n\t        this.staticAnimations = [];\r\n\t        this.textureMapper = render_1.TextureMapper.getInstance();\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.particleHandler = particleHandler;\r\n\t    }\r\n\t    AnimationHandler.prototype.bloodAnimation_A = function (position, size) {\r\n\t        var animation = new model_1.Animation([100, 101, 102, 103, 104, 105]);\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        animation.repetitions = 6;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.bloodAnimation_B_Right = function (position, size) {\r\n\t        var animation = new model_1.Animation([106, 107, 108, 109, 110, 111]);\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        animation.repetitions = 6;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.bloodAnimation_B_Left = function (position, size) {\r\n\t        var animation = new model_1.Animation([106, 107, 108, 109, 110, 111]);\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        animation.inverse = true;\r\n\t        animation.repetitions = 6;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.voidAnimation = function () {\r\n\t        var animation = new model_1.Animation([]);\r\n\t        animation.areaToRender = new model_1.Rectangle(0, 0, 0, 0);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.bloodAnimation_C = function (position, size) {\r\n\t        var animation = new model_1.Animation([147, 148, 149, 150, 151, 152]);\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        animation.repetitions = 6;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.swordman_death = function (position, inverse) {\r\n\t        var _this = this;\r\n\t        var animation = new model_1.Animation([\r\n\t            214, 216, 217, 218\r\n\t        ]);\r\n\t        animation.timeToChange = 120;\r\n\t        animation.repetitions = 4;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, 56, 59);\r\n\t        animation.inverse = inverse;\r\n\t        animation.onCompletion = function () {\r\n\t            _this.swordman_corpse(position, inverse);\r\n\t        };\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.createArcherDeath = function (area, inverse) {\r\n\t        this.bloodAnimation_C(new model_1.Vector(area.x - 10, area.y - 20), 75);\r\n\t        this.bloodAnimation_B_Left(new model_1.Vector(area.x - 10, area.y - 20), 75);\r\n\t        this.bloodAnimation_B_Right(new model_1.Vector(area.x - 10, area.y - 20), 75);\r\n\t        this.archer_death(area, inverse);\r\n\t    };\r\n\t    AnimationHandler.prototype.archer_death = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var animation = new model_1.Animation([290, 291, 292, 293]);\r\n\t        animation.timeToChange = 120;\r\n\t        animation.repetitions = 4;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.inverse = inverse;\r\n\t        animation.onCompletion = function () {\r\n\t            _this.archer_corpse(area, inverse);\r\n\t        };\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.archer_corpse = function (area, inverse) {\r\n\t        var animation = new model_1.Animation([293]);\r\n\t        animation.timeToChange = 120;\r\n\t        animation.delay = 4;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.inverse = inverse;\r\n\t        this.staticAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.player_sword_death_corpse = function (position, inverse) {\r\n\t        var animation = new model_1.Animation([306]);\r\n\t        animation.timeToChange = 150;\r\n\t        animation.delay = 6;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, 90, 90);\r\n\t        animation.inverse = inverse;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.player_sword_death_animation = function (position, inverse) {\r\n\t        var animation = new model_1.Animation([301, 302, 303, 304, 305, 306]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 150;\r\n\t        animation.repetitions = 6;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, 90, 90);\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.apprentice_Death = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var animation = new model_1.Animation([144, 145, 146, 153, 154, 155]);\r\n\t        animation.repetitions = 5;\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 150;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.onCompletion = function () {\r\n\t            _this.apprentice_corpse(area, inverse);\r\n\t        };\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.apprentice_corpse = function (area, inverse) {\r\n\t        var animation = new model_1.Animation([155]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 150;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        this.staticAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.masterSorcerer_death = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var animation = new model_1.Animation([586, 587, 589, 590, 591, 592, 593, 594, 595, 596]);\r\n\t        animation.repetitions = 9;\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 125;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.onCompletion = function () {\r\n\t            _this.masterSorcerer_corpse(area, inverse);\r\n\t        };\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.masterSorcerer_corpse = function (area, inverse) {\r\n\t        var animation = new model_1.Animation([596]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 175;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        this.staticAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.screamer_Death = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var animation = new model_1.Animation([576, 577, 578, 579]);\r\n\t        animation.repetitions = 3;\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 175;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.onCompletion = function () {\r\n\t            _this.screamer_corpse(area, inverse);\r\n\t        };\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.screamer_corpse = function (area, inverse) {\r\n\t        var animation = new model_1.Animation([579]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 175;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        this.staticAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.shadow_Death = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var animation = new model_1.Animation([132, 130, 127, 124, 119]);\r\n\t        animation.repetitions = 4;\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 100;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.onCompletion = function () {\r\n\t            _this.shadow_corpse(area, inverse);\r\n\t        };\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.shadow_corpse = function (area, inverse) {\r\n\t        var animation = new model_1.Animation([119]);\r\n\t        animation.repetitions = 4;\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 100;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        this.staticAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.swordman_corpse = function (position, inverse) {\r\n\t        var animation = new model_1.Animation([219]);\r\n\t        animation.timeToChange = 120;\r\n\t        animation.delay = 4;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, 56, 59);\r\n\t        animation.inverse = inverse;\r\n\t        this.staticAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.swordman_head = function (position, inverse) {\r\n\t        var animation = new model_1.Animation([215, 220, 221, 222, 223, 224, 225, 226]);\r\n\t        animation.timeToChange = 75;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, 56, 59);\r\n\t        animation.inverse = inverse;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.fireball_destroy = function (position, size) {\r\n\t        var animation = new model_1.Animation([118, 119, 120, 121, 122, 123, 124, 125, 126]);\r\n\t        animation.timeToChange = 50;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        animation.repetitions = 9;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.necroball_explosion = function (position, size) {\r\n\t        this.particleHandler.createNecroballExplosion(position, size);\r\n\t    };\r\n\t    AnimationHandler.prototype.fireball_explosion = function (position, size) {\r\n\t        this.particleHandler.createFireballExplosion(position, size);\r\n\t    };\r\n\t    AnimationHandler.prototype.swordscut_a = function (position, size, inverse) {\r\n\t        var animation = new model_1.Animation([55, 56, 57, 58, 59]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        this.animations.push(animation);\r\n\t        animation.repetitions = 5;\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.createDebugAnimation = function (position, size, repetitions) {\r\n\t        var animation = new model_1.Animation([5]);\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, size, size);\r\n\t        animation.repetitions = repetitions;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.fallDeath = function (position) {\r\n\t        this.bloodAnimation_A(new model_1.Vector(position.x, position.y + 20), 50);\r\n\t        this.bloodAnimation_B_Right(new model_1.Vector(position.x + 5, position.y + 5), 100);\r\n\t        this.bloodAnimation_B_Left(new model_1.Vector(position.x - 55, position.y + 5), 100);\r\n\t    };\r\n\t    AnimationHandler.prototype.fireDeathSwordman = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var onUpdate = function (position) {\r\n\t            _this.particleHandler.createFireDeath(position);\r\n\t        };\r\n\t        var animation = new model_1.FrameAnimation(0, -4, 0, 0, onUpdate, [250, 251, 252, 253, 254, 255, 256, 257]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 100;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.repetitions = 8;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.fireDeathArcher = function (area, inverse) {\r\n\t        var _this = this;\r\n\t        var onUpdate = function (position) {\r\n\t            _this.particleHandler.createFireDeath(position);\r\n\t        };\r\n\t        var animation = new model_1.FrameAnimation(0, -4, 0, 0, onUpdate, [282, 283, 284, 285, 286, 287, 288, 289]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.timeToChange = 100;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.repetitions = 8;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.createArrow = function (area, inverse, velocity) {\r\n\t        var animation = new model_1.RotationAnimation(velocity, [268]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.areaToRender = area;\r\n\t        animation.timeToChange = 20000;\r\n\t        animation.repetitions = 1;\r\n\t        this.dynamicAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.createDeadArrow = function (area, inverse, velocity) {\r\n\t        var collAngle = new model_1.Vector(velocity.x, velocity.y);\r\n\t        var animation = new model_1.StaticRotationAnimation(collAngle, inverse, [268]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.timeToChange = 2000;\r\n\t        animation.repetitions = 1;\r\n\t        this.dynamicAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.createArrowHit = function (projectile, useCollisionArea) {\r\n\t        var collAngle = new model_1.Vector(projectile.velocity.x, projectile.velocity.y);\r\n\t        var animation = new model_1.RotationAnimation(collAngle, [269]);\r\n\t        animation.inverse = projectile.animation.inverse;\r\n\t        if (useCollisionArea) {\r\n\t            animation.areaToRender = new model_1.Rectangle(projectile.collisionArea.x, projectile.collisionArea.y, projectile.area.width, projectile.area.height);\r\n\t        }\r\n\t        else {\r\n\t            animation.areaToRender = new model_1.Rectangle(projectile.area.x, projectile.area.y, projectile.area.width, projectile.area.height);\r\n\t        }\r\n\t        animation.areaToRender.width = animation.areaToRender.width * 0.67;\r\n\t        animation.timeToChange = 2000;\r\n\t        animation.repetitions = 1;\r\n\t        this.dynamicAnimations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.frozenSwordMan = function (area, inverse, color, onCompletion) {\r\n\t        var animation = new model_1.Animation([237, 238, 239, 240, 241, 242]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.color = color;\r\n\t        animation.timeToChange = 250;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.onCompletion = onCompletion;\r\n\t        this.animations.push(animation);\r\n\t        animation.repetitions = 6;\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.frozenArcher = function (area, inverse, color, onCompletion) {\r\n\t        var animation = new model_1.Animation([270, 271, 272, 273, 274, 275]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.color = color;\r\n\t        animation.timeToChange = 250;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        animation.onCompletion = onCompletion;\r\n\t        this.animations.push(animation);\r\n\t        animation.repetitions = 6;\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.frozenPart = function (area, inverse, color, partIndex, baseTextureNumber) {\r\n\t        var animation = new model_1.Animation([baseTextureNumber + partIndex]);\r\n\t        animation.inverse = inverse;\r\n\t        animation.color = color;\r\n\t        animation.timeToChange = 2000;\r\n\t        animation.areaToRender = new model_1.Rectangle(area.x, area.y, area.width, area.height);\r\n\t        this.animations.push(animation);\r\n\t        animation.repetitions = 1;\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationHandler.prototype.update = function (delta) {\r\n\t        var completedAnimations = [];\r\n\t        var totalAnimations = this.animations.concat(this.dynamicAnimations);\r\n\t        for (var _i = 0, totalAnimations_1 = totalAnimations; _i < totalAnimations_1.length; _i++) {\r\n\t            var animation = totalAnimations_1[_i];\r\n\t            animation.next(delta);\r\n\t            if (animation.repetitions <= 0) {\r\n\t                completedAnimations.push(animation);\r\n\t                if (animation.onCompletion) {\r\n\t                    animation.onCompletion();\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        for (var _a = 0, completedAnimations_1 = completedAnimations; _a < completedAnimations_1.length; _a++) {\r\n\t            var completedAnimation = completedAnimations_1[_a];\r\n\t            this.remove(completedAnimation);\r\n\t        }\r\n\t    };\r\n\t    AnimationHandler.prototype.createDynamicRenderCall = function (renderCall, camera) {\r\n\t        for (var _i = 0, _a = this.dynamicAnimations; _i < _a.length; _i++) {\r\n\t            var animation = _a[_i];\r\n\t            if (animation instanceof model_1.RotationAnimation || animation instanceof model_1.StaticRotationAnimation) {\r\n\t                var x = animation.areaToRender.x - camera[0];\r\n\t                var y = animation.areaToRender.y - camera[1];\r\n\t                var width = animation.areaToRender.width;\r\n\t                var height = animation.areaToRender.height;\r\n\t                if (animation.inverse) {\r\n\t                    renderCall.vertecies = this.renderHelper.getInverseVertecies(x, y, width, height, renderCall.vertecies);\r\n\t                }\r\n\t                else {\r\n\t                    renderCall.vertecies = this.renderHelper.getVertecies(x, y, width, height, renderCall.vertecies);\r\n\t                }\r\n\t                renderCall.textureCoords.push.apply(renderCall.textureCoords, animation.getCurrentFrame());\r\n\t                renderCall.matrices = this.renderHelper.getMatrices(x, y, width, height, animation.angle, renderCall.matrices);\r\n\t                renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    AnimationHandler.prototype.createRenderCall = function (renderCall) {\r\n\t        for (var _i = 0, _a = this.animations; _i < _a.length; _i++) {\r\n\t            var animation = _a[_i];\r\n\t            if (animation.delay <= 0) {\r\n\t                var x = animation.areaToRender.x;\r\n\t                var y = animation.areaToRender.y;\r\n\t                var width = animation.areaToRender.width;\r\n\t                var height = animation.areaToRender.height;\r\n\t                if (animation.inverse) {\r\n\t                    renderCall.vertecies = this.renderHelper.getInverseVertecies(x, y, width, height, renderCall.vertecies);\r\n\t                }\r\n\t                else {\r\n\t                    renderCall.vertecies = this.renderHelper.getVertecies(x, y, width, height, renderCall.vertecies);\r\n\t                }\r\n\t                renderCall.textureCoords.push.apply(renderCall.textureCoords, animation.getCurrentFrame());\r\n\t                renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t                if (animation.color) {\r\n\t                    renderCall.color = this.renderHelper.getColor(renderCall.color, animation.color);\r\n\t                }\r\n\t                else {\r\n\t                    renderCall.color = this.renderHelper.getColor(renderCall.color, null);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return renderCall;\r\n\t    };\r\n\t    AnimationHandler.prototype.createStaticRenderCall = function (renderCall) {\r\n\t        for (var _i = 0, _a = this.staticAnimations; _i < _a.length; _i++) {\r\n\t            var animation = _a[_i];\r\n\t            if (animation.inverse) {\r\n\t                renderCall.vertecies = this.renderHelper.getInverseVertecies(animation.areaToRender.x, animation.areaToRender.y, animation.areaToRender.width, animation.areaToRender.height, renderCall.vertecies);\r\n\t            }\r\n\t            else {\r\n\t                renderCall.vertecies = this.renderHelper.getVertecies(animation.areaToRender.x, animation.areaToRender.y, animation.areaToRender.width, animation.areaToRender.height, renderCall.vertecies);\r\n\t            }\r\n\t            renderCall.textureCoords.push.apply(renderCall.textureCoords, animation.getCurrentFrame());\r\n\t            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        }\r\n\t        return renderCall;\r\n\t    };\r\n\t    AnimationHandler.prototype.remove = function (animation) {\r\n\t        var index = this.animations.indexOf(animation);\r\n\t        if (index != -1) {\r\n\t            this.animations.splice(index, 1);\r\n\t        }\r\n\t        else {\r\n\t            index = this.dynamicAnimations.indexOf(animation);\r\n\t            if (index != -1) {\r\n\t                this.dynamicAnimations.splice(index, 1);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    AnimationHandler.prototype.enemy = function (position, inverse) {\r\n\t        var animation = new model_1.Animation([209, 211, 210]);\r\n\t        animation.timeToChange = 120;\r\n\t        animation.areaToRender = new model_1.Rectangle(position.x, position.y, 56, 58);\r\n\t        animation.inverse = inverse;\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    return AnimationHandler;\r\n\t}());\r\n\texports.AnimationHandler = AnimationHandler;\r\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar debugHandler_1 = __webpack_require__(408);\r\n\tvar gravity_1 = __webpack_require__(375);\r\n\tvar drag_1 = __webpack_require__(376);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar ProjectileHandler = (function () {\r\n\t    function ProjectileHandler(animationHandler, shieldLevel) {\r\n\t        this.shieldLevel = shieldLevel;\r\n\t        this.projectiles = [];\r\n\t        this.enemyProjectiles = [];\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.debuggHandler = debugHandler_1.DebugHandler.getInstance();\r\n\t        this.animationHandler = animationHandler;\r\n\t    }\r\n\t    ProjectileHandler.prototype.clear = function () {\r\n\t        this.projectiles = [];\r\n\t        this.enemyProjectiles = [];\r\n\t    };\r\n\t    ProjectileHandler.prototype.createArrow = function (position, inverse, velocity) {\r\n\t        var arrow;\r\n\t        var rectangle = new model_1.Rectangle(position.x, position.y, 40, 10);\r\n\t        var collRect;\r\n\t        if (inverse) {\r\n\t            collRect = new model_1.Rectangle(position.x + 10, position.y + 5, 1, 1);\r\n\t        }\r\n\t        else {\r\n\t            collRect = new model_1.Rectangle(position.x + 20, position.y + 5, 1, 1);\r\n\t        }\r\n\t        var animation = this.animationHandler.createArrow(rectangle, inverse, velocity);\r\n\t        arrow = new model_1.PhysicalProjectile(velocity, rectangle, animation, 1, collRect, true);\r\n\t        arrow.gravity = new gravity_1.Gravity(0.0003);\r\n\t        arrow.drag = new drag_1.Drag(0);\r\n\t        arrow.projectileType = model_1.ProjectileType.Arrow;\r\n\t        arrow.damage = 20;\r\n\t        this.enemyProjectiles.push(arrow);\r\n\t        return arrow;\r\n\t    };\r\n\t    ProjectileHandler.prototype.createNecroBall = function (position, size, inverse, velocity, damage, onUpdate) {\r\n\t        var necroBall;\r\n\t        if (inverse) {\r\n\t            var area = new model_1.Rectangle(position.x + 5, position.y, size, size);\r\n\t            necroBall = new model_1.ParticleProjectile(velocity, area, this.animationHandler.voidAnimation(), 0.2, (size * 10), inverse, 0, onUpdate);\r\n\t        }\r\n\t        else {\r\n\t            var area = new model_1.Rectangle(position.x + 40, position.y, size, size);\r\n\t            necroBall = new model_1.ParticleProjectile(velocity, area, this.animationHandler.voidAnimation(), 0.2, (size * 10), inverse, 0, onUpdate);\r\n\t        }\r\n\t        necroBall.projectileType = model_1.ProjectileType.NecroBall;\r\n\t        necroBall.damage = damage;\r\n\t        necroBall.distance = 1000;\r\n\t        this.enemyProjectiles.push(necroBall);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createDeadArrow = function (position, inverse, velocity, push) {\r\n\t        var arrow;\r\n\t        var rectangle = new model_1.Rectangle(position.x, position.y, 40, 10);\r\n\t        var collRect;\r\n\t        if (inverse) {\r\n\t            collRect = new model_1.Rectangle(position.x + 10, position.y + 5, 1, 1);\r\n\t        }\r\n\t        else {\r\n\t            collRect = new model_1.Rectangle(position.x + 20, position.y + 5, 1, 1);\r\n\t        }\r\n\t        var animation = this.animationHandler.createDeadArrow(rectangle, inverse, velocity);\r\n\t        velocity.x = -velocity.x / 2;\r\n\t        if (push) {\r\n\t            velocity.x += push.x;\r\n\t            velocity.y += push.y;\r\n\t        }\r\n\t        arrow = new model_1.PhysicalProjectile(velocity, rectangle, animation, 1, collRect);\r\n\t        arrow.gravity = new gravity_1.Gravity(0.0006);\r\n\t        arrow.drag = new drag_1.Drag(0.0002);\r\n\t        arrow.projectileType = model_1.ProjectileType.None;\r\n\t        this.projectiles.push(arrow);\r\n\t        return arrow;\r\n\t    };\r\n\t    ProjectileHandler.prototype.createFireBall = function (position, inverse, velocityValue, strength, offset, onUpdate) {\r\n\t        var fireBall;\r\n\t        if (inverse) {\r\n\t            fireBall = new model_1.ParticleProjectile(new model_1.Vector(-velocityValue, 0), new model_1.Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n\t        }\r\n\t        else {\r\n\t            fireBall = new model_1.ParticleProjectile(new model_1.Vector(velocityValue, 0), new model_1.Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n\t        }\r\n\t        this.projectiles.push(fireBall);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createFireballRank1 = function (position, inverse, velocityValue, strength, offset, onUpdate) {\r\n\t        var fireBall;\r\n\t        strength = strength / 3;\r\n\t        if (inverse) {\r\n\t            fireBall = new model_1.ParticleProjectile(new model_1.Vector(-velocityValue, 0), new model_1.Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n\t        }\r\n\t        else {\r\n\t            fireBall = new model_1.ParticleProjectile(new model_1.Vector(velocityValue, 0), new model_1.Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n\t        }\r\n\t        this.projectiles.push(fireBall);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createCollisionProjectile = function (position, offset, inverse, damage, velocity) {\r\n\t        var rect;\r\n\t        if (inverse) {\r\n\t            rect = new model_1.Rectangle(position.x, position.y - 10, 10, 10);\r\n\t            velocity.x = -velocity.x;\r\n\t        }\r\n\t        else {\r\n\t            rect = new model_1.Rectangle(position.x + offset, position.y - 10, 10, 10);\r\n\t        }\r\n\t        var collisionProjectile = new model_1.CollisionProjectile(velocity, rect, 40, this.animationHandler.voidAnimation(), damage);\r\n\t        collisionProjectile.projectileType = model_1.ProjectileType.Sword;\r\n\t        this.enemyProjectiles.push(collisionProjectile);\r\n\t        return collisionProjectile;\r\n\t    };\r\n\t    ProjectileHandler.prototype.createSwordman_death = function (position, inverse, velocity) {\r\n\t        var projectile;\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(position.x, position.y, 28, 29), this.animationHandler.swordman_head(position, inverse), 0.3);\r\n\t        projectile.extendedOnGroundCollision = function () {\r\n\t            var currentFrame = projectile.animation.getCurrentFrame();\r\n\t            projectile.animation.textureCoords = [currentFrame];\r\n\t            projectile.animation.frameIndex = 0;\r\n\t        };\r\n\t        this.animationHandler.bloodAnimation_C(new model_1.Vector(position.x - 10, position.y - 20), 75);\r\n\t        this.animationHandler.bloodAnimation_B_Left(new model_1.Vector(position.x - 10, position.y - 20), 75);\r\n\t        this.animationHandler.bloodAnimation_B_Right(new model_1.Vector(position.x - 10, position.y - 20), 75);\r\n\t        this.animationHandler.swordman_death(position, inverse);\r\n\t        this.projectiles.push(projectile);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createPlayerSword_death = function (position, inverse) {\r\n\t        var projectile;\r\n\t        var projectileCorpse;\r\n\t        var velocity = new model_1.Vector(0, 0);\r\n\t        var x = position.x;\r\n\t        if (inverse) {\r\n\t            x -= 45;\r\n\t        }\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(x, position.y - 6, 45, 85), this.animationHandler.player_sword_death_animation(position, inverse), 1);\r\n\t        projectileCorpse = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(x, position.y - 6, 45, 85), this.animationHandler.player_sword_death_corpse(position, inverse), 1);\r\n\t        if (inverse) {\r\n\t            this.animationHandler.bloodAnimation_B_Left(new model_1.Vector(position.x - 10, position.y - 20), 75);\r\n\t        }\r\n\t        else {\r\n\t            this.animationHandler.bloodAnimation_B_Right(new model_1.Vector(position.x - 10, position.y - 20), 75);\r\n\t        }\r\n\t        this.projectiles.push(projectile);\r\n\t        this.projectiles.push(projectileCorpse);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createShadow_death = function (area, inverse) {\r\n\t        var projectile;\r\n\t        var projectileCorpse;\r\n\t        var velocity = new model_1.Vector(0, 0);\r\n\t        var x = area.x;\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.shadow_Death(area, inverse), 0.8);\r\n\t        this.projectiles.push(projectile);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createMasterSorcerer_death = function (area, inverse) {\r\n\t        var projectile;\r\n\t        var projectileCorpse;\r\n\t        var velocity = new model_1.Vector(0, 0);\r\n\t        var x = area.x;\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.masterSorcerer_death(area, inverse), 0.8);\r\n\t        this.projectiles.push(projectile);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createScreamer_death = function (area, inverse) {\r\n\t        var projectile;\r\n\t        var projectileCorpse;\r\n\t        var velocity = new model_1.Vector(0, 0);\r\n\t        var x = area.x;\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.screamer_Death(area, inverse), 0.8);\r\n\t        this.projectiles.push(projectile);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createApprentice_death = function (area, inverse) {\r\n\t        var projectile;\r\n\t        var projectileCorpse;\r\n\t        var velocity = new model_1.Vector(0, 0);\r\n\t        var x = area.x;\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.apprentice_Death(area, inverse), 0.8);\r\n\t        this.projectiles.push(projectile);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createFrozenSwordManDeath = function (area, inverse, color) {\r\n\t        var _this = this;\r\n\t        var onComplete = function () {\r\n\t            var velocotyies = [\r\n\t                new model_1.Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t            ];\r\n\t            var collisionAreas = [\r\n\t                new model_1.Rectangle(area.x + 7, area.y + 22, 11, 8),\r\n\t                new model_1.Rectangle(area.x + 12, area.y + 5, 12, 12),\r\n\t                new model_1.Rectangle(area.x + 15, area.y + 24, 14, 6),\r\n\t                new model_1.Rectangle(area.x + 13, area.y + 38, 6, 8),\r\n\t                new model_1.Rectangle(area.x + 6, area.y + 38, 8, 10),\r\n\t                new model_1.Rectangle(area.x + 4, area.y + 11, 13, 16)\r\n\t            ];\r\n\t            for (var i = 0; i < 6; i++) {\r\n\t                _this.createFrozenPart(velocotyies[i], area, inverse, color, i, 243, collisionAreas[i]);\r\n\t            }\r\n\t        };\r\n\t        this.animationHandler.frozenSwordMan(area, inverse, color, onComplete);\r\n\t    };\r\n\t    ProjectileHandler.prototype.createFrozenArcherDeath = function (area, inverse, color) {\r\n\t        var _this = this;\r\n\t        var onComplete = function () {\r\n\t            var velocotyies = [\r\n\t                new model_1.Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t                new model_1.Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n\t            ];\r\n\t            var collisionAreas = [\r\n\t                new model_1.Rectangle(area.x + 8, area.y + 2, 11, 6),\r\n\t                new model_1.Rectangle(area.x + 4, area.y + 4, 9, 14),\r\n\t                new model_1.Rectangle(area.x + 17, area.y + 3, 11, 11),\r\n\t                new model_1.Rectangle(area.x + 13, area.y + 7, 15, 15),\r\n\t                new model_1.Rectangle(area.x + 5, area.y + 15, 13, 17),\r\n\t                new model_1.Rectangle(area.x + 14, area.y + 19, 13, 13)\r\n\t            ];\r\n\t            for (var i = 0; i < 6; i++) {\r\n\t                _this.createFrozenPart(velocotyies[i], area, inverse, color, i, 276, collisionAreas[i]);\r\n\t            }\r\n\t        };\r\n\t        this.animationHandler.frozenArcher(area, inverse, color, onComplete);\r\n\t    };\r\n\t    ProjectileHandler.prototype.update = function (delta, collidables, player, dynamicTiles) {\r\n\t        var removeProjectile = [];\r\n\t        var removeEnemyProjectile = [];\r\n\t        removeProjectile = this.updateFriendslyProjectiles(delta, collidables, dynamicTiles);\r\n\t        removeEnemyProjectile = this.updateEnemyProjectiles(delta, player, collidables, dynamicTiles);\r\n\t        for (var _i = 0, removeProjectile_1 = removeProjectile; _i < removeProjectile_1.length; _i++) {\r\n\t            var projectile = removeProjectile_1[_i];\r\n\t            this.destroyProjectile(projectile, this.projectiles);\r\n\t        }\r\n\t        for (var _a = 0, removeEnemyProjectile_1 = removeEnemyProjectile; _a < removeEnemyProjectile_1.length; _a++) {\r\n\t            var projectile = removeEnemyProjectile_1[_a];\r\n\t            this.destroyProjectile(projectile, this.enemyProjectiles);\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.destroyProjectile = function (projectile, projectiles) {\r\n\t        this.destroyAnimation(projectile);\r\n\t        this.animationHandler.remove(projectile.animation);\r\n\t        var index = projectiles.indexOf(projectile);\r\n\t        if (index != -1) {\r\n\t            projectiles.splice(index, 1);\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.calculateDirection = function (area, enemy) {\r\n\t        var velocity = new model_1.Vector((enemy.position.x + enemy.width / 2) - (area.x + (area.width / 2)), enemy.position.y - (area.y + (area.height / 2)));\r\n\t        velocity.normalize();\r\n\t        velocity.multiply((area.width / 90));\r\n\t        return velocity;\r\n\t    };\r\n\t    ProjectileHandler.prototype.updateEnemyProjectiles = function (delta, player, collidables, dynamicTiles) {\r\n\t        var removeProjectiles = [];\r\n\t        var shieldCollidables = [];\r\n\t        var playerCollisionArea = player.getProjectileCollisionArea();\r\n\t        shieldCollidables.push.apply(shieldCollidables, player.getShieldCollidables());\r\n\t        for (var _i = 0, _a = this.enemyProjectiles; _i < _a.length; _i++) {\r\n\t            var projectile = _a[_i];\r\n\t            var frameVelocity = new model_1.Vector(projectile.velocity.x * delta, projectile.velocity.y * delta);\r\n\t            removeProjectiles = this.updateAndCollCheckEnemyProjectile(projectile, frameVelocity, delta, player, dynamicTiles, playerCollisionArea, shieldCollidables, removeProjectiles);\r\n\t            removeProjectiles = this.checkStaticObjectCollisions(projectile, frameVelocity, collidables, removeProjectiles);\r\n\t        }\r\n\t        return removeProjectiles;\r\n\t    };\r\n\t    ProjectileHandler.prototype.updateAndCollCheckEnemyProjectile = function (projectile, frameVelocity, delta, player, dynamicTiles, playerCollisionArea, shieldCollidables, removeProjectiles) {\r\n\t        var collisionData;\r\n\t        var shieldCollisionData;\r\n\t        var groundCollision;\r\n\t        var liftVelocity;\r\n\t        projectile.updateForces(delta);\r\n\t        var velocity = player.getVelocity();\r\n\t        var deltaVelocity = new model_1.Vector(frameVelocity.x - velocity.x * delta, frameVelocity.y - velocity.y * delta);\r\n\t        collisionData = this.collisionDetection.checkProjectileCollisionY([playerCollisionArea], projectile, deltaVelocity, false);\r\n\t        shieldCollisionData = this.collisionDetection.checkProjectileCollisionY(shieldCollidables, projectile, deltaVelocity, false);\r\n\t        projectile.update(0, collisionData.collisionTimeY * frameVelocity.y, delta);\r\n\t        groundCollision = shieldCollisionData.groundCollision;\r\n\t        if (shieldCollisionData.groundCollision) {\r\n\t            this.setShieldDamage(player, projectile);\r\n\t            removeProjectiles.push(projectile);\r\n\t        }\r\n\t        else if (collisionData.groundCollision) {\r\n\t            if (shieldCollidables.length > 0) {\r\n\t                this.setShieldDamage(player, projectile);\r\n\t            }\r\n\t            else {\r\n\t                this.setDamageAnimation(player, projectile);\r\n\t            }\r\n\t            removeProjectiles.push(projectile);\r\n\t        }\r\n\t        if (projectile.projectileType == model_1.ProjectileType.Arrow) {\r\n\t            collisionData = this.collisionDetection.checkProjectileCollisionX([playerCollisionArea], projectile, deltaVelocity, false, false);\r\n\t            shieldCollisionData = this.collisionDetection.checkProjectileCollisionX(shieldCollidables, projectile, deltaVelocity, false, false);\r\n\t        }\r\n\t        else {\r\n\t            collisionData = this.collisionDetection.checkProjectileCollisionX([playerCollisionArea], projectile, deltaVelocity, false, true);\r\n\t            shieldCollisionData = this.collisionDetection.checkProjectileCollisionX(shieldCollidables, projectile, deltaVelocity, false, true);\r\n\t        }\r\n\t        projectile.update(collisionData.collisionTimeX * frameVelocity.x, 0, delta);\r\n\t        if (!groundCollision) {\r\n\t            if (shieldCollisionData.wallCollision) {\r\n\t                this.setShieldDamage(player, projectile);\r\n\t                removeProjectiles.push(projectile);\r\n\t            }\r\n\t            else if (collisionData.wallCollision) {\r\n\t                if (shieldCollidables.length > 0) {\r\n\t                    this.setShieldDamage(player, projectile);\r\n\t                }\r\n\t                else {\r\n\t                    this.setDamageAnimation(player, projectile);\r\n\t                }\r\n\t                removeProjectiles.push(projectile);\r\n\t            }\r\n\t        }\r\n\t        if (projectile instanceof model_1.CollisionProjectile || projectile instanceof model_1.ParticleProjectile) {\r\n\t            if (projectile.distance <= 0) {\r\n\t                removeProjectiles.push(projectile);\r\n\t            }\r\n\t        }\r\n\t        if (this.collisionDetection.aabbCheckS(projectile.collisionArea, dynamicTiles.map(function (it) { return it.tile; }))) {\r\n\t            removeProjectiles.push(projectile);\r\n\t        }\r\n\t        return removeProjectiles;\r\n\t    };\r\n\t    ProjectileHandler.prototype.setDamageAnimation = function (player, projectile) {\r\n\t        this.animationHandler.bloodAnimation_A(new model_1.Vector(projectile.collisionArea.x, projectile.collisionArea.y), 20);\r\n\t        if (projectile.projectileType == model_1.ProjectileType.Arrow) {\r\n\t            this.createStickyArrowAnimation(player, projectile);\r\n\t            player.takeDamage(projectile.damage);\r\n\t        }\r\n\t        else if (projectile.projectileType == model_1.ProjectileType.Sword && projectile instanceof model_1.CollisionProjectile) {\r\n\t            player.takeDamage(projectile.damage);\r\n\t        }\r\n\t        else if (projectile.projectileType = model_1.ProjectileType.NecroBall) {\r\n\t            player.takeDamage(projectile.damage);\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.checkStaticObjectCollisions = function (projectile, frameVelocity, collidables, removeProjectiles) {\r\n\t        var collisionData;\r\n\t        collisionData = this.collisionDetection.checkProjectileCollisionY(collidables, projectile, frameVelocity, true);\r\n\t        if (collisionData.groundCollision) {\r\n\t            this.setStaticObjectAnimation(projectile);\r\n\t            removeProjectiles.push(projectile);\r\n\t        }\r\n\t        else {\r\n\t            collisionData = this.collisionDetection.checkProjectileCollisionX(collidables, projectile, frameVelocity, true, false);\r\n\t            if (collisionData.wallCollision) {\r\n\t                this.setStaticObjectAnimation(projectile);\r\n\t                removeProjectiles.push(projectile);\r\n\t            }\r\n\t        }\r\n\t        return removeProjectiles;\r\n\t    };\r\n\t    ProjectileHandler.prototype.createStickyArrowAnimation = function (player, projectile) {\r\n\t        if (projectile.projectileType == model_1.ProjectileType.Arrow) {\r\n\t            var animationOffset = void 0;\r\n\t            animationOffset = new model_1.Vector((player.position.x) - (projectile.area.x), player.position.y - projectile.area.y);\r\n\t            player.damageAnimations.push(new model_1.StickyAnimation(this.animationHandler.createArrowHit(projectile, true), animationOffset));\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.setStaticObjectAnimation = function (projectile) {\r\n\t        if (projectile.projectileType == model_1.ProjectileType.Arrow) {\r\n\t            this.animationHandler.createArrowHit(projectile, false);\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.updateAndCollCheck = function (projectile, delta, collidables, removeProjectiles, dynamicTiles) {\r\n\t        var collisionData;\r\n\t        projectile.updateForces(delta);\r\n\t        var frameVelocity = new model_1.Vector(projectile.velocity.x * delta, projectile.velocity.y * delta);\r\n\t        collisionData = this.collisionDetection.checkProjectileCollisionY(collidables, projectile, frameVelocity, true);\r\n\t        projectile.update(0, collisionData.collisionTimeY * frameVelocity.y, delta);\r\n\t        if (projectile instanceof model_1.PhysicalProjectile) {\r\n\t            if (collisionData.groundCollision) {\r\n\t                projectile.onGroundCollision();\r\n\t            }\r\n\t        }\r\n\t        if (collisionData.groundCollision) {\r\n\t            projectile.velocity.y = 0;\r\n\t        }\r\n\t        collisionData = this.collisionDetection.checkProjectileCollisionX(collidables, projectile, frameVelocity, true, false);\r\n\t        projectile.update(collisionData.collisionTimeX * frameVelocity.x, 0, delta);\r\n\t        if (projectile instanceof model_1.Spell || projectile instanceof model_1.ParticleProjectile) {\r\n\t            if (projectile.distance <= 0 || collisionData.wallCollision) {\r\n\t                removeProjectiles.push(projectile);\r\n\t            }\r\n\t        }\r\n\t        if (collisionData.wallCollision) {\r\n\t            projectile.velocity.x = 0;\r\n\t        }\r\n\t        if (this.collisionDetection.aabbCheckS(projectile.collisionArea, dynamicTiles.map(function (it) { return it.tile; }))) {\r\n\t            removeProjectiles.push(projectile);\r\n\t        }\r\n\t        return removeProjectiles;\r\n\t    };\r\n\t    ProjectileHandler.prototype.updateFriendslyProjectiles = function (delta, collidables, dynamicTiles) {\r\n\t        var collisionData;\r\n\t        var removeProjectiles = [];\r\n\t        for (var _i = 0, _a = this.projectiles; _i < _a.length; _i++) {\r\n\t            var projectile = _a[_i];\r\n\t            this.updateAndCollCheck(projectile, delta, collidables, removeProjectiles, dynamicTiles);\r\n\t        }\r\n\t        return removeProjectiles;\r\n\t    };\r\n\t    ProjectileHandler.prototype.setShieldDamage = function (player, projectile) {\r\n\t        if (projectile.projectileType == model_1.ProjectileType.Arrow) {\r\n\t            this.createDeadArrow(new model_1.Vector(projectile.area.x, projectile.area.y), projectile.animation.inverse, projectile.velocity);\r\n\t            this.drainShield(player, projectile, projectile.damage);\r\n\t        }\r\n\t        else if (projectile.projectileType == model_1.ProjectileType.Sword && projectile instanceof model_1.CollisionProjectile) {\r\n\t            this.drainShield(player, projectile, projectile.damage);\r\n\t        }\r\n\t        else if (projectile.projectileType = model_1.ProjectileType.NecroBall) {\r\n\t            this.drainShield(player, projectile, projectile.damage * 2);\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.drainShield = function (player, projectile, amount) {\r\n\t        if (player.mana > 0) {\r\n\t            var extra = void 0;\r\n\t            if (this.shieldLevel != 0) {\r\n\t                extra = (amount / this.shieldLevel);\r\n\t            }\r\n\t            else {\r\n\t                extra = amount * 2;\r\n\t            }\r\n\t            if (!player.useMana(amount + extra)) {\r\n\t                player.mana = 0;\r\n\t                if (projectile.area.x > player.position.x) {\r\n\t                    player.shieldExplosion(false);\r\n\t                }\r\n\t                else {\r\n\t                    player.shieldExplosion(true);\r\n\t                }\r\n\t            }\r\n\t            ;\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.destroyAnimation = function (projectile) {\r\n\t        if (projectile instanceof model_1.ParticleProjectile) {\r\n\t            if (projectile.projectileType == model_1.ProjectileType.NecroBall) {\r\n\t                this.animationHandler.necroball_explosion(new model_1.Vector(projectile.area.x, projectile.area.y), projectile.area.width);\r\n\t            }\r\n\t            else {\r\n\t                this.animationHandler.fireball_explosion(new model_1.Vector(projectile.area.x, projectile.area.y), projectile.area.width);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ProjectileHandler.prototype.createFrozenPart = function (velocity, rect, inverse, color, partIndex, baseNumber, collisionArea) {\r\n\t        var projectile;\r\n\t        projectile = new model_1.PhysicalProjectile(velocity, new model_1.Rectangle(rect.x, rect.y, rect.width, rect.width), this.animationHandler.frozenPart(rect, inverse, color, partIndex, baseNumber), 1, collisionArea);\r\n\t        this.projectiles.push(projectile);\r\n\t    };\r\n\t    return ProjectileHandler;\r\n\t}());\r\n\texports.ProjectileHandler = ProjectileHandler;\r\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar constants_1 = __webpack_require__(391);\r\n\tvar DynamicTileHandler = (function () {\r\n\t    function DynamicTileHandler() {\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.constants = constants_1.Constants.getInstance();\r\n\t    }\r\n\t    DynamicTileHandler.prototype.update = function (player, delta) {\r\n\t        for (var _i = 0, _a = this.dynamicTiles; _i < _a.length; _i++) {\r\n\t            var dynamicTile = _a[_i];\r\n\t            var travelDistance = void 0;\r\n\t            if (dynamicTile.verticalAxis) {\r\n\t                travelDistance = dynamicTile.velocity.y * delta;\r\n\t            }\r\n\t            else {\r\n\t                travelDistance = dynamicTile.velocity.x * delta;\r\n\t            }\r\n\t            dynamicTile.update(delta, travelDistance);\r\n\t            if (player.lift == dynamicTile) {\r\n\t                if (dynamicTile.velocity.y < 0) {\r\n\t                    player.position.y = dynamicTile.tile.y - player.height;\r\n\t                }\r\n\t                else {\r\n\t                    player.position.y = dynamicTile.tile.y - player.height;\r\n\t                }\r\n\t                player.liftVelocity = dynamicTile.velocity;\r\n\t                if (player.position.x > dynamicTile.tile.x + dynamicTile.tile.width || player.position.x + player.width < dynamicTile.tile.x) {\r\n\t                    player.lift = null;\r\n\t                    player.liftVelocity = new model_1.Vector(0, 0);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    DynamicTileHandler.prototype.createRenderCall = function (renderCalls) {\r\n\t        for (var _i = 0, _a = this.dynamicTiles; _i < _a.length; _i++) {\r\n\t            var dynamicTile = _a[_i];\r\n\t            var set = renderCalls.get(dynamicTile.tile.key);\r\n\t            if (!set) {\r\n\t                renderCalls.set(dynamicTile.tile.key, new render_1.RenderCall());\r\n\t                set = renderCalls.get(dynamicTile.tile.key);\r\n\t            }\r\n\t            set.vertecies = this.renderHelper.getVertecies(dynamicTile.tile.x, dynamicTile.tile.y, dynamicTile.tile.width, dynamicTile.tile.height, set.vertecies);\r\n\t            set.textureCoords = this.renderHelper.getTiledTextureCoordinates(dynamicTile.tile, set.textureCoords, this.constants.tileSize);\r\n\t            set.indecies = this.renderHelper.getIndecies(set.indecies);\r\n\t        }\r\n\t        return renderCalls;\r\n\t    };\r\n\t    return DynamicTileHandler;\r\n\t}());\r\n\texports.DynamicTileHandler = DynamicTileHandler;\r\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar particle_1 = __webpack_require__(426);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar renderHelper_1 = __webpack_require__(362);\r\n\tvar simpleParticleRenderCall_1 = __webpack_require__(427);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar gravity_1 = __webpack_require__(375);\r\n\tvar ParticleHandler = (function () {\r\n\t    function ParticleHandler() {\r\n\t        this.frostParticles = [];\r\n\t        this.frostEffectParticles = [];\r\n\t        this.fireParticles = [];\r\n\t        this.fireEffectParticles = [];\r\n\t        this.necroEffectParticles = [];\r\n\t        this.shieldEffectParticles = [];\r\n\t        this.renderHelper = renderHelper_1.RenderHelper.getInstance();\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.gravity = new gravity_1.Gravity(0.0001);\r\n\t        this.noGravity = new gravity_1.Gravity(0);\r\n\t        this.fireColor = [1, 0.5, 0.2, 0.8];\r\n\t        this.frostColor = [0.4, 0.9, 0.9, 0.9];\r\n\t        this.frostEffectColor = [0.7, 0.9, 0.9, 0.9];\r\n\t        this.shieldColor = [0.5, 0.4, 0.7, 0.7];\r\n\t        this.necroColor = [0, 0.5, 0, 0.8];\r\n\t        this.flameParticleSettings = [\r\n\t            2, 5,\r\n\t            500, 700,\r\n\t            0.4, 0.5,\r\n\t            -0.05, -0.03,\r\n\t            0.1\r\n\t        ];\r\n\t        this.largeFlameParticleSettings = [\r\n\t            4, 6,\r\n\t            500, 700,\r\n\t            0.4, 0.5,\r\n\t            -0.05, -0.03,\r\n\t            0.1\r\n\t        ];\r\n\t        this.flameEffectSettings = [\r\n\t            1, 3,\r\n\t            100, 400,\r\n\t            0.3, 0.4,\r\n\t            -0.2, 0.05,\r\n\t            0.0\r\n\t        ];\r\n\t        this.channelMagicEffectSettings = [\r\n\t            8, 4,\r\n\t            500, 500,\r\n\t            -10, 10,\r\n\t            0.1, 0.1,\r\n\t            -0.2,\r\n\t            0, Math.PI * 2\r\n\t        ];\r\n\t        this.fireExplosionSettings = [\r\n\t            4, 8,\r\n\t            500, 500,\r\n\t            -20, 20,\r\n\t            0.05, 0.2,\r\n\t            -0.2,\r\n\t            0, Math.PI * 2,\r\n\t        ];\r\n\t        this.magicEffectSettings = [\r\n\t            1, 3,\r\n\t            300, 300,\r\n\t            -0.01, 0.01,\r\n\t            -0.2, 0,\r\n\t            0.1\r\n\t        ];\r\n\t        this.frostParticleSettings = [\r\n\t            3, 5,\r\n\t            600, 800,\r\n\t            0.4, 0.5,\r\n\t            -0.02, 0.02,\r\n\t            0.2\r\n\t        ];\r\n\t        this.largefrostParticleSettings = [\r\n\t            5, 7,\r\n\t            600, 800,\r\n\t            0.5, 0.6,\r\n\t            -0.02, 0.02,\r\n\t            0.2\r\n\t        ];\r\n\t        this.frostEffectParticleSettings = [\r\n\t            2, 4,\r\n\t            200, 800,\r\n\t            0.4, 0.5,\r\n\t            -0.08, 0.05,\r\n\t            0.0,\r\n\t        ];\r\n\t        this.burnEffectSettings = [\r\n\t            10, 15,\r\n\t            100, 400,\r\n\t            0.05, -0.05,\r\n\t            -0.1, -0.1,\r\n\t            0.0\r\n\t        ];\r\n\t        this.shieldEffectSettings = [\r\n\t            2, 4,\r\n\t            200, 200,\r\n\t            10, 10,\r\n\t            0.1, 0.1,\r\n\t            0.2,\r\n\t            0, Math.PI * 2\r\n\t        ];\r\n\t        this.invertedShieldEffectSettings = [\r\n\t            2, 4,\r\n\t            100, 100,\r\n\t            10, 10,\r\n\t            0.1, 0.1,\r\n\t            0.2,\r\n\t            -Math.PI * 0.52, -Math.PI * 1.30\r\n\t        ];\r\n\t        this.shieldExplosionEffectSettings = [\r\n\t            4, 8,\r\n\t            1000, 1500,\r\n\t            -20, 20,\r\n\t            -0.2, 0.2,\r\n\t            -0.1,\r\n\t            -Math.PI * 0.52, Math.PI * 0.30\r\n\t        ];\r\n\t        this.invertedShieldExplosionEffectSettings = [\r\n\t            4, 8,\r\n\t            1000, 1500,\r\n\t            -20, 20,\r\n\t            -0.2, 0.2,\r\n\t            -0.1,\r\n\t            -Math.PI * 0.52, -Math.PI * 1.30\r\n\t        ];\r\n\t    }\r\n\t    ParticleHandler.prototype.createShieldExplosionEffect = function (position, inverse) {\r\n\t        position.y = position.y - 5;\r\n\t        var settings = [];\r\n\t        if (inverse) {\r\n\t            settings = this.invertedShieldExplosionEffectSettings;\r\n\t        }\r\n\t        else {\r\n\t            settings = this.shieldExplosionEffectSettings;\r\n\t        }\r\n\t        var effectParticles = this.createCircleParticles(position, 40, 40, false, settings, 100);\r\n\t        (_a = this.shieldEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createShieldEffect = function (position, inverse, shieldLevel) {\r\n\t        position.y = position.y + 5;\r\n\t        var effectParticles = this.createCenterCircleParticles(position, 10, 20, this.shieldEffectSettings, false, 0, 0, 100, 0, 1 + shieldLevel);\r\n\t        (_a = this.shieldEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createFireBall = function (position, size, inverse, offsetX) {\r\n\t        var effectParticles = this.fireBall(position, size, inverse, offsetX);\r\n\t        (_a = this.fireEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createNecroFireBall = function (position, size, inverse, offsetX) {\r\n\t        var effectParticles = this.fireBall(position, size, inverse, offsetX);\r\n\t        (_a = this.necroEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createNecroballExplosion = function (position, size) {\r\n\t        var effectParticles = this.fireballExplosion(position, size);\r\n\t        (_a = this.necroEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createFireballExplosion = function (position, size) {\r\n\t        var effectParticles = this.fireballExplosion(position, size);\r\n\t        (_a = this.fireEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.fireballExplosion = function (position, size) {\r\n\t        var radius = size / 2;\r\n\t        var particleSize = 2 + (size / 20);\r\n\t        position.x = position.x + radius;\r\n\t        position.y = position.y + radius;\r\n\t        var settings = [\r\n\t            particleSize, particleSize * 2,\r\n\t            500, 500,\r\n\t            -20, 20,\r\n\t            0.05, 0.2,\r\n\t            -0.2,\r\n\t            0, Math.PI * 2,\r\n\t        ];\r\n\t        var effectParticles = this.createCircleParticles(position, 0, 0, false, settings, 50);\r\n\t        return effectParticles;\r\n\t    };\r\n\t    ParticleHandler.prototype.createChannelMagic = function (position, inverse) {\r\n\t        var positionOffset = new model_1.Vector(position.x + 25, position.y + 45);\r\n\t        var effectParticles = this.createCenterCircleParticles(positionOffset, 30, 40, this.channelMagicEffectSettings, true, 3, 10, 100, 0, 2);\r\n\t        (_a = this.fireEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createNecroChannelMagic = function (position, inverse) {\r\n\t        var positionOffset;\r\n\t        if (inverse) {\r\n\t            positionOffset = new model_1.Vector(position.x + 27, position.y + 10);\r\n\t        }\r\n\t        else {\r\n\t            positionOffset = new model_1.Vector(position.x + 101, position.y + 10);\r\n\t        }\r\n\t        var effectParticles = this.createCenterCircleParticles(positionOffset, 30, 40, this.channelMagicEffectSettings, true, 3, 10, 100, 0, 2);\r\n\t        (_a = this.necroEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createMagicEffect = function (position, inverse) {\r\n\t        var offSetX = this.rand(-10, 10) + 22;\r\n\t        var offSetY = this.rand(-5, 10) + 45;\r\n\t        var positionOffset = new model_1.Vector(position.x + offSetX, position.y + offSetY);\r\n\t        var effectParticles = this.createParticles(positionOffset, inverse, this.magicEffectSettings, 1);\r\n\t        (_a = this.fireEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createFrostBlast = function (position, inverse, frostLevel) {\r\n\t        var positionOffset = new model_1.Vector(position.x, position.y);\r\n\t        positionOffset.y += 45;\r\n\t        if (inverse) {\r\n\t            positionOffset.x += 10;\r\n\t        }\r\n\t        else {\r\n\t            positionOffset.x += 40;\r\n\t        }\r\n\t        var settings;\r\n\t        if (frostLevel == 3) {\r\n\t            settings = this.largefrostParticleSettings;\r\n\t        }\r\n\t        else {\r\n\t            settings = this.frostParticleSettings;\r\n\t        }\r\n\t        var particles = this.createParticles(positionOffset, inverse, settings, 3 + (frostLevel * 3));\r\n\t        var effectParticles = this.createParticles(positionOffset, inverse, this.frostEffectParticleSettings, 2 + (frostLevel * 1));\r\n\t        (_a = this.frostEffectParticles).push.apply(_a, effectParticles);\r\n\t        (_b = this.frostParticles).push.apply(_b, particles);\r\n\t        var _a, _b;\r\n\t    };\r\n\t    ParticleHandler.prototype.createFireBlast = function (position, inverse, fireLevel) {\r\n\t        var positionOffset = new model_1.Vector(position.x, position.y);\r\n\t        positionOffset.y += 45;\r\n\t        if (inverse) {\r\n\t            positionOffset.x += 10;\r\n\t        }\r\n\t        else {\r\n\t            positionOffset.x += 40;\r\n\t        }\r\n\t        var settings;\r\n\t        if (fireLevel == 3) {\r\n\t            settings = this.largeFlameParticleSettings;\r\n\t        }\r\n\t        else {\r\n\t            settings = this.flameParticleSettings;\r\n\t        }\r\n\t        var particles = this.createParticles(positionOffset, inverse, settings, 3 + (fireLevel * 3));\r\n\t        var effectParticles = this.createParticles(positionOffset, inverse, this.flameEffectSettings, 2 + (fireLevel * 1));\r\n\t        (_a = this.fireParticles).push.apply(_a, particles);\r\n\t        (_b = this.fireEffectParticles).push.apply(_b, effectParticles);\r\n\t        var _a, _b;\r\n\t    };\r\n\t    ParticleHandler.prototype.createBurn = function (position) {\r\n\t        var positionCopy = new model_1.Vector(position.x, position.y);\r\n\t        positionCopy.x += this.rand(-10, 15) + 25;\r\n\t        positionCopy.y += this.rand(-10, 10) + 25;\r\n\t        var effectParticles = this.createParticles(positionCopy, false, this.burnEffectSettings, 1);\r\n\t        (_a = this.fireEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.createFireDeath = function (position) {\r\n\t        position.x += this.rand(-15, 15);\r\n\t        position.x += 25;\r\n\t        position.y += 25;\r\n\t        var effectParticles = this.createParticles(position, false, this.burnEffectSettings, 5);\r\n\t        (_a = this.fireEffectParticles).push.apply(_a, effectParticles);\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.update = function (delta, enemies) {\r\n\t        this.updateEffectParticles(this.necroEffectParticles, delta);\r\n\t        this.updateEffectParticles(this.fireEffectParticles, delta);\r\n\t        this.updateEffectParticles(this.frostEffectParticles, delta);\r\n\t        this.updateEffectParticles(this.shieldEffectParticles, delta);\r\n\t        this.updateParticles(this.frostParticles, this.noGravity, delta, enemies, model_1.SpellType.frostBlast);\r\n\t        this.updateParticles(this.fireParticles, this.gravity, delta, enemies, model_1.SpellType.fireBlast);\r\n\t    };\r\n\t    ParticleHandler.prototype.createRenderCalls = function (renderCalls) {\r\n\t        var fireRenderCall = new simpleParticleRenderCall_1.SimpleParticleRenderCall();\r\n\t        var allFireParticles = this.fireParticles.concat(this.fireEffectParticles);\r\n\t        var frostRenderCall = new simpleParticleRenderCall_1.SimpleParticleRenderCall();\r\n\t        var frostEffectRenderCall = new simpleParticleRenderCall_1.SimpleParticleRenderCall();\r\n\t        frostEffectRenderCall.textureType = model_1.TextureType.frostTexture;\r\n\t        var shieldEffectRenderCall = new simpleParticleRenderCall_1.SimpleParticleRenderCall();\r\n\t        shieldEffectRenderCall.textureType = model_1.TextureType.particleTexture;\r\n\t        var blackFireRenderCall = new simpleParticleRenderCall_1.SimpleParticleRenderCall();\r\n\t        blackFireRenderCall.textureType = model_1.TextureType.particleTexture;\r\n\t        renderCalls.push(this.addParticles(fireRenderCall, allFireParticles, this.fireColor));\r\n\t        renderCalls.push(this.addParticles(frostEffectRenderCall, this.frostEffectParticles, this.frostEffectColor));\r\n\t        renderCalls.push(this.addParticles(frostRenderCall, this.frostParticles, this.frostColor));\r\n\t        renderCalls.push(this.addParticles(shieldEffectRenderCall, this.shieldEffectParticles, this.shieldColor));\r\n\t        renderCalls.push(this.addParticles(blackFireRenderCall, this.necroEffectParticles, this.necroColor));\r\n\t        return renderCalls;\r\n\t    };\r\n\t    ParticleHandler.prototype.fireBall = function (position, size, inverse, offsetX) {\r\n\t        var positionOffset = new model_1.Vector(position.x, position.y);\r\n\t        var strength = size / 2;\r\n\t        var radius = strength / 2;\r\n\t        var offset = strength / 10;\r\n\t        var settingFactor = size / 100;\r\n\t        if (inverse) {\r\n\t            positionOffset.x += (strength - offsetX);\r\n\t        }\r\n\t        else {\r\n\t            positionOffset.x += (strength + offsetX);\r\n\t        }\r\n\t        positionOffset.y += strength;\r\n\t        var channelMagicEffectSettings = [\r\n\t            4 + (4 * settingFactor), 2 + (2 * settingFactor),\r\n\t            500, 500,\r\n\t            -10, 10,\r\n\t            0, 0,\r\n\t            -0.2\r\n\t        ];\r\n\t        var effectParticles = this.createCenterCircleParticles(positionOffset, radius, radius, channelMagicEffectSettings, false, offset, strength, 200, -offset, 2);\r\n\t        return effectParticles;\r\n\t    };\r\n\t    ParticleHandler.prototype.addParticles = function (renderCall, particles, color) {\r\n\t        for (var _i = 0, particles_1 = particles; _i < particles_1.length; _i++) {\r\n\t            var particle = particles_1[_i];\r\n\t            (_a = renderCall.vertecies).push.apply(_a, [particle.area.x, particle.area.y]);\r\n\t            renderCall.pointSize.push(particle.area.width);\r\n\t            renderCall.color = color;\r\n\t            renderCall.itemCount = particles.length;\r\n\t        }\r\n\t        return renderCall;\r\n\t        var _a;\r\n\t    };\r\n\t    ParticleHandler.prototype.updateEffectParticles = function (particleCollection, delta) {\r\n\t        var removeCollection = [];\r\n\t        for (var _i = 0, particleCollection_1 = particleCollection; _i < particleCollection_1.length; _i++) {\r\n\t            var particle = particleCollection_1[_i];\r\n\t            this.updateParticle(particle, delta);\r\n\t            var collisionSize = particle.area.width / 2;\r\n\t            var collisionRectangle = new model_1.Rectangle(particle.area.x, particle.area.y, collisionSize, collisionSize);\r\n\t            if (particle.lifeTime <= 0 || particle.area.width < 0 || particle.dead) {\r\n\t                removeCollection.push(particle);\r\n\t            }\r\n\t        }\r\n\t        this.removeParticles(removeCollection, particleCollection);\r\n\t    };\r\n\t    ParticleHandler.prototype.updateParticles = function (particleCollection, gravity, delta, enemies, spelltype) {\r\n\t        var removeCollection = [];\r\n\t        for (var _i = 0, particleCollection_2 = particleCollection; _i < particleCollection_2.length; _i++) {\r\n\t            var particle = particleCollection_2[_i];\r\n\t            gravity.apply(particle.velocity, delta);\r\n\t            this.updateParticle(particle, delta);\r\n\t            var collisionSize = particle.area.width / 2;\r\n\t            var collisionRectangle = new model_1.Rectangle(particle.area.x, particle.area.y, collisionSize, collisionSize);\r\n\t            if (!particle.dead) {\r\n\t                for (var _a = 0, enemies_1 = enemies; _a < enemies_1.length; _a++) {\r\n\t                    var enemy = enemies_1[_a];\r\n\t                    if (this.collisionDetection.aabbCheck(collisionRectangle, enemy.getCollisionArea())) {\r\n\t                        if (spelltype == model_1.SpellType.frostBlast) {\r\n\t                            enemy.freeze();\r\n\t                        }\r\n\t                        else {\r\n\t                            enemy.burn();\r\n\t                        }\r\n\t                        particle.dead = true;\r\n\t                        particle.lifeTime = particle.lifeTime > 10 ? this.rand(10, 20) : particle.lifeTime;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if (particle.lifeTime <= 0 || particle.area.width < 0) {\r\n\t                removeCollection.push(particle);\r\n\t            }\r\n\t        }\r\n\t        this.removeParticles(removeCollection, particleCollection);\r\n\t    };\r\n\t    ParticleHandler.prototype.removeParticles = function (removeCollection, particleCollection) {\r\n\t        for (var _i = 0, removeCollection_1 = removeCollection; _i < removeCollection_1.length; _i++) {\r\n\t            var particle = removeCollection_1[_i];\r\n\t            var index = particleCollection.indexOf(particle);\r\n\t            if (index != -1) {\r\n\t                particleCollection.splice(index, 1);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ParticleHandler.prototype.updateParticle = function (particle, delta) {\r\n\t        particle.area.x += particle.velocity.x * delta;\r\n\t        particle.area.y += particle.velocity.y * delta;\r\n\t        particle.lifeTime -= delta;\r\n\t        particle.area.width += particle.growth;\r\n\t        particle.area.height += particle.growth;\r\n\t    };\r\n\t    ParticleHandler.prototype.createParticles = function (position, inverse, settings, particleNumber) {\r\n\t        var newParticles = [];\r\n\t        for (var i = 0; i < particleNumber; i++) {\r\n\t            var particleSize = this.rand(settings[0], settings[1]);\r\n\t            var velocity = void 0;\r\n\t            var area = void 0;\r\n\t            var deltaX = void 0;\r\n\t            if (inverse) {\r\n\t                velocity = new model_1.Vector(-this.rand(settings[4], settings[5]), this.rand(settings[6], settings[7]));\r\n\t                area = new model_1.Rectangle(position.x, position.y, particleSize, particleSize);\r\n\t                deltaX = this.collisionDetection.getClosestX(new model_1.Rectangle(area.x - settings[3], area.y - 8, settings[3], 1), this.tiles, inverse) - area.x;\r\n\t            }\r\n\t            else {\r\n\t                velocity = new model_1.Vector(this.rand(settings[4], settings[5]), this.rand(settings[6], settings[7]));\r\n\t                area = new model_1.Rectangle(position.x, position.y, particleSize, particleSize);\r\n\t                deltaX = this.collisionDetection.getClosestX(new model_1.Rectangle(area.x, area.y - 8, settings[3], 1), this.tiles, inverse) - area.x;\r\n\t            }\r\n\t            var lifeTime = void 0;\r\n\t            var collTime = Math.abs((deltaX / velocity.x));\r\n\t            if (collTime < settings[3]) {\r\n\t                if (collTime < settings[2]) {\r\n\t                    lifeTime = this.rand(collTime, collTime + 10);\r\n\t                }\r\n\t                else {\r\n\t                    lifeTime = this.rand(settings[2], collTime + 10);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                lifeTime = this.rand(settings[2], settings[3]);\r\n\t            }\r\n\t            var growth = settings[8];\r\n\t            var particle = new particle_1.Particle(area, lifeTime, velocity, growth);\r\n\t            newParticles.push(particle);\r\n\t        }\r\n\t        return newParticles;\r\n\t    };\r\n\t    ParticleHandler.prototype.createCenterCircleParticles = function (position, radiusX, radiusY, settings, inward, centerOffsetValue, centerSize, centerLifeTime, centerGrowth, particleNumber) {\r\n\t        var newParticles = [];\r\n\t        var centerOffSetX = this.rand(-centerOffsetValue, centerOffsetValue);\r\n\t        var centerOffSetY = this.rand(-centerOffsetValue, centerOffsetValue);\r\n\t        var centerParticle = new particle_1.Particle(new model_1.Rectangle(position.x + centerOffSetX, position.y + centerOffSetY, centerSize, centerSize), centerLifeTime, new model_1.Vector(0, 0), centerGrowth);\r\n\t        newParticles.push(centerParticle);\r\n\t        newParticles.push.apply(newParticles, this.createCircleParticles(position, radiusX, radiusY, inward, settings, particleNumber));\r\n\t        return newParticles;\r\n\t    };\r\n\t    ParticleHandler.prototype.createCircleParticles = function (position, radiusX, radiusY, inward, settings, particleNumber) {\r\n\t        var particles = [];\r\n\t        for (var i = 0; i < particleNumber; i++) {\r\n\t            var particleSize = this.rand(settings[0], settings[1]);\r\n\t            var lifeTime = this.rand(settings[2], settings[3]);\r\n\t            var offSet = this.rand(settings[4], settings[5]);\r\n\t            var x = void 0;\r\n\t            var y = void 0;\r\n\t            var velocity = void 0;\r\n\t            var angle = this.rand(settings[9], settings[10]);\r\n\t            x = position.x + ((radiusX + offSet) * Math.cos(angle));\r\n\t            y = position.y + ((radiusY + offSet) * Math.sin(angle));\r\n\t            if (inward) {\r\n\t                velocity = new model_1.Vector(-(x - position.x), -(y - position.y));\r\n\t            }\r\n\t            else {\r\n\t                velocity = new model_1.Vector(x - position.x, y - position.y);\r\n\t            }\r\n\t            velocity.normalize();\r\n\t            velocity.multiply(this.rand(settings[6], settings[7]));\r\n\t            var particle = new particle_1.Particle(new model_1.Rectangle(x, y, particleSize, particleSize), lifeTime, velocity, settings[8]);\r\n\t            particles.push(particle);\r\n\t        }\r\n\t        ;\r\n\t        return particles;\r\n\t    };\r\n\t    ParticleHandler.prototype.rand = function (min, max) {\r\n\t        return min + (Math.random() * (max - min));\r\n\t    };\r\n\t    return ParticleHandler;\r\n\t}());\r\n\texports.ParticleHandler = ParticleHandler;\r\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Particle = (function () {\r\n\t    function Particle(area, lifeTime, velocity, growth) {\r\n\t        this.area = area;\r\n\t        this.lifeTime = lifeTime;\r\n\t        this.velocity = velocity;\r\n\t        this.growth = growth;\r\n\t    }\r\n\t    return Particle;\r\n\t}());\r\n\texports.Particle = Particle;\r\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar SimpleParticleRenderCall = (function () {\r\n\t    function SimpleParticleRenderCall() {\r\n\t        this.vertecies = [];\r\n\t        this.pointSize = [];\r\n\t        this.color = [];\r\n\t        this.itemCount = 0;\r\n\t        this.textureType = model_1.TextureType.particleTexture;\r\n\t    }\r\n\t    return SimpleParticleRenderCall;\r\n\t}());\r\n\texports.SimpleParticleRenderCall = SimpleParticleRenderCall;\r\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar SimpleParticleRenderer = (function () {\r\n\t    function SimpleParticleRenderer(context) {\r\n\t        this.context = context;\r\n\t        this.gl = this.context.gl;\r\n\t        this.shaderProgram = this.context.simpleParticleProgram;\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 1, \"a_pointSize\");\r\n\t        this.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t        this.sizeAttributeLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_pointSize\");\r\n\t        this.resolutionLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_resolution\");\r\n\t        this.cameraLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_camera\");\r\n\t        this.colorUniformLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_color\");\r\n\t        this.vertexBuffer = this.gl.createBuffer();\r\n\t        this.pointSizeBuffer = this.gl.createBuffer();\r\n\t    }\r\n\t    SimpleParticleRenderer.prototype.render = function (renderCalls, camera) {\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        for (var _i = 0, renderCalls_1 = renderCalls; _i < renderCalls_1.length; _i++) {\r\n\t            var renderCall = renderCalls_1[_i];\r\n\t            if (renderCall.itemCount > 1) {\r\n\t                this.gl.enableVertexAttribArray(this.positionLocation);\r\n\t                this.gl.enableVertexAttribArray(this.sizeAttributeLocation);\r\n\t                this.gl.uniform2f(this.resolutionLocation, this.context.gl.canvas.width, this.context.gl.canvas.height);\r\n\t                this.gl.uniform2f(this.cameraLocation, camera[0], camera[1]);\r\n\t                this.gl.uniform4f(this.colorUniformLocation, renderCall.color[0], renderCall.color[1], renderCall.color[2], renderCall.color[3]);\r\n\t                if (renderCall.textureType == model_1.TextureType.particleTexture) {\r\n\t                    this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.genericParticleTexture);\r\n\t                }\r\n\t                else if (renderCall.textureType == model_1.TextureType.frostTexture) {\r\n\t                    this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.frostParticelTexture);\r\n\t                }\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\t                this.gl.enableVertexAttribArray(this.positionLocation);\r\n\t                this.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointSizeBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.pointSize), this.gl.STATIC_DRAW);\r\n\t                this.gl.enableVertexAttribArray(this.sizeAttributeLocation);\r\n\t                this.gl.vertexAttribPointer(this.sizeAttributeLocation, 1, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.drawArrays(this.gl.POINTS, 0, renderCall.itemCount);\r\n\t                this.gl.disableVertexAttribArray(this.positionLocation);\r\n\t                this.gl.disableVertexAttribArray(this.sizeAttributeLocation);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return SimpleParticleRenderer;\r\n\t}());\r\n\texports.SimpleParticleRenderer = SimpleParticleRenderer;\r\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar swordman_1 = __webpack_require__(405);\r\n\tvar _1 = __webpack_require__(401);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar deathType_1 = __webpack_require__(404);\r\n\tvar EnemyHandler = (function () {\r\n\t    function EnemyHandler(context, projectileHandler, animationHandler, particleHandler) {\r\n\t        this.enemies = [];\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.context = context;\r\n\t        this.projectileHandler = projectileHandler;\r\n\t        this.animationHandler = animationHandler;\r\n\t        this.particleHandler = particleHandler;\r\n\t    }\r\n\t    EnemyHandler.prototype.update = function (delta, tiles, player) {\r\n\t        for (var _i = 0, _a = this.enemies; _i < _a.length; _i++) {\r\n\t            var enemy = _a[_i];\r\n\t            enemy.update(delta, tiles, player);\r\n\t            this.enemyCollisionCheck(delta);\r\n\t            this.checkBurn(enemy);\r\n\t            this.checkEnemyDeath(enemy);\r\n\t        }\r\n\t    };\r\n\t    EnemyHandler.prototype.createRenderCall = function (renderCall) {\r\n\t        for (var _i = 0, _a = this.enemies; _i < _a.length; _i++) {\r\n\t            var enemy = _a[_i];\r\n\t            if (enemy.inverse) {\r\n\t                renderCall.vertecies = this.renderHelper.getInverseVertecies(enemy.position.x, enemy.position.y, enemy.width, enemy.height, renderCall.vertecies);\r\n\t            }\r\n\t            else {\r\n\t                renderCall.vertecies = this.renderHelper.getVertecies(enemy.position.x, enemy.position.y, enemy.width, enemy.height, renderCall.vertecies);\r\n\t            }\r\n\t            renderCall.textureCoords.push.apply(renderCall.textureCoords, enemy.currentAnimation.getCurrentFrame());\r\n\t            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t            renderCall.color = this.renderHelper.getColor(renderCall.color, enemy.color);\r\n\t        }\r\n\t        return renderCall;\r\n\t    };\r\n\t    EnemyHandler.prototype.remove = function (enemy) {\r\n\t        var index = this.enemies.indexOf(enemy);\r\n\t        if (index >= 0) {\r\n\t            this.enemies.splice(index, 1);\r\n\t        }\r\n\t    };\r\n\t    EnemyHandler.prototype.checkBurn = function (enemy) {\r\n\t        if (enemy.burnValue > 0) {\r\n\t            var collarea = enemy.getCollisionArea();\r\n\t            var pos = new model_1.Vector(collarea.x, collarea.y);\r\n\t            this.particleHandler.createBurn(pos);\r\n\t        }\r\n\t    };\r\n\t    EnemyHandler.prototype.checkEnemyDeath = function (enemy) {\r\n\t        if (enemy.dead) {\r\n\t            if (enemy.deathType == deathType_1.DeathType.freezeDeath) {\r\n\t                if (enemy instanceof swordman_1.Swordman) {\r\n\t                    this.projectileHandler.createFrozenSwordManDeath(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse, enemy.color);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Archer) {\r\n\t                    this.projectileHandler.createFrozenArcherDeath(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse, enemy.color);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Shadow) {\r\n\t                    this.projectileHandler.createShadow_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Apprentice) {\r\n\t                    this.projectileHandler.createApprentice_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Screamer) {\r\n\t                    this.projectileHandler.createScreamer_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.MasterSorcerer) {\r\n\t                    this.projectileHandler.createMasterSorcerer_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                this.remove(enemy);\r\n\t            }\r\n\t            else if (enemy.deathType == deathType_1.DeathType.fireDeath) {\r\n\t                if (enemy instanceof swordman_1.Swordman) {\r\n\t                    this.animationHandler.fireDeathSwordman(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Archer) {\r\n\t                    this.animationHandler.fireDeathArcher(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Shadow) {\r\n\t                    this.projectileHandler.createShadow_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Apprentice) {\r\n\t                    this.projectileHandler.createApprentice_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Screamer) {\r\n\t                    this.projectileHandler.createScreamer_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.MasterSorcerer) {\r\n\t                    this.projectileHandler.createMasterSorcerer_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                this.remove(enemy);\r\n\t            }\r\n\t            else if (enemy.deathType == deathType_1.DeathType.swordDeath) {\r\n\t                if (enemy instanceof _1.Archer) {\r\n\t                    this.animationHandler.createArcherDeath(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Shadow) {\r\n\t                    this.projectileHandler.createShadow_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Apprentice) {\r\n\t                    this.projectileHandler.createApprentice_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.Screamer) {\r\n\t                    this.projectileHandler.createScreamer_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                else if (enemy instanceof _1.MasterSorcerer) {\r\n\t                    this.projectileHandler.createMasterSorcerer_death(new model_1.Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n\t                }\r\n\t                this.remove(enemy);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    EnemyHandler.prototype.enemyCollisionCheck = function (delta) {\r\n\t        for (var _i = 0, _a = this.projectileHandler.projectiles; _i < _a.length; _i++) {\r\n\t            var projectile = _a[_i];\r\n\t            if (projectile instanceof model_1.ParticleProjectile) {\r\n\t                var removeEnemy = [];\r\n\t                for (var _b = 0, _c = this.enemies; _b < _c.length; _b++) {\r\n\t                    var enemy = _c[_b];\r\n\t                    var velocityDelta = new model_1.Vector((projectile.velocity.x * delta) - (enemy.toMove.x), (projectile.velocity.y * delta) - (enemy.toMove.y));\r\n\t                    var collisionData = this.collisionDetection.checkProjectileCollisionX([enemy.getCollisionArea()], projectile, velocityDelta, false, true);\r\n\t                    if (collisionData.wallCollision) {\r\n\t                        enemy.takeDamage(projectile.area.width, model_1.SpellType.fireball);\r\n\t                        if (enemy.inverse) {\r\n\t                            this.animationHandler.bloodAnimation_B_Right(new model_1.Vector(projectile.area.x, projectile.area.y - 20), 75);\r\n\t                        }\r\n\t                        else {\r\n\t                            this.animationHandler.bloodAnimation_B_Left(new model_1.Vector(projectile.area.x - projectile.area.width, projectile.area.y - 20), 75);\r\n\t                        }\r\n\t                        this.projectileHandler.destroyProjectile(projectile, this.projectileHandler.projectiles);\r\n\t                        if (enemy.dead) {\r\n\t                            if (enemy instanceof swordman_1.Swordman) {\r\n\t                                this.projectileHandler.createSwordman_death(enemy.position, enemy.inverse, this.projectileHandler.calculateDirection(projectile.area, enemy));\r\n\t                                removeEnemy.push(enemy);\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                for (var _d = 0, removeEnemy_1 = removeEnemy; _d < removeEnemy_1.length; _d++) {\r\n\t                    var enemy = removeEnemy_1[_d];\r\n\t                    this.remove(enemy);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return EnemyHandler;\r\n\t}());\r\n\texports.EnemyHandler = EnemyHandler;\r\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Camera = (function () {\r\n\t    function Camera(position, sceneSize, gameSize) {\r\n\t        this.position = position;\r\n\t        this.sceneSize = sceneSize;\r\n\t        this.gameSize = gameSize;\r\n\t        this.cameraOffset = [800, 500];\r\n\t        this.position = position;\r\n\t        this.sceneSize = sceneSize;\r\n\t        this.maxX = 100 + (this.sceneSize[0] - this.cameraOffset[0]);\r\n\t        this.maxXCameraPosition = this.gameSize[0] - (this.maxX + this.cameraOffset[0] - 100);\r\n\t        this.maxY = (this.sceneSize[1] - this.cameraOffset[1]);\r\n\t        this.maxYCameraPosition = this.gameSize[1] - (this.maxY + this.cameraOffset[1]);\r\n\t    }\r\n\t    Camera.prototype.update = function (focusPosition) {\r\n\t        if (focusPosition.x - this.position[0] > this.cameraOffset[0] - 100) {\r\n\t            this.position[0] = focusPosition.x - this.cameraOffset[0] + 100;\r\n\t            if ((focusPosition.x + this.maxX) > this.gameSize[0]) {\r\n\t                this.position[0] = this.maxXCameraPosition;\r\n\t            }\r\n\t        }\r\n\t        else if (focusPosition.x - this.position[0] < this.sceneSize[0] - this.cameraOffset[0]) {\r\n\t            this.position[0] = focusPosition.x - (this.sceneSize[0] - this.cameraOffset[0]);\r\n\t            if (this.position[0] < 0) {\r\n\t                this.position[0] = 0;\r\n\t            }\r\n\t        }\r\n\t        if (focusPosition.y - this.position[1] > this.cameraOffset[1]) {\r\n\t            this.position[1] = focusPosition.y - this.cameraOffset[1];\r\n\t            if ((focusPosition.y + this.maxY) > this.gameSize[1]) {\r\n\t                this.position[1] = this.maxYCameraPosition;\r\n\t            }\r\n\t        }\r\n\t        else if (focusPosition.y - this.position[1] < this.sceneSize[1] - this.cameraOffset[1]) {\r\n\t            this.position[1] = focusPosition.y - (this.sceneSize[1] - this.cameraOffset[1]);\r\n\t            if (this.position[1] < 0) {\r\n\t                this.position[1] = 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return Camera;\r\n\t}());\r\n\texports.Camera = Camera;\r\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar DynamicRenderer = (function () {\r\n\t    function DynamicRenderer(context) {\r\n\t        this.context = context;\r\n\t        this.gl = this.context.gl;\r\n\t        this.shaderProgram = this.context.dynamicVertecyProgram;\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 1, \"a_texture_coord\");\r\n\t        this.gl.bindAttribLocation(this.shaderProgram, 2, \"a_matrix\");\r\n\t        this.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t        this.textureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_texture_coord\");\r\n\t        this.matrixAttributeLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_matrix\");\r\n\t        this.vertexBuffer = this.gl.createBuffer();\r\n\t        this.textureCoordBuffer = this.gl.createBuffer();\r\n\t        this.indeciesBuffer = this.gl.createBuffer();\r\n\t        this.matricesBuffer = this.gl.createBuffer();\r\n\t    }\r\n\t    DynamicRenderer.prototype.render = function (renderCalls) {\r\n\t        this.gl.useProgram(this.shaderProgram);\r\n\t        for (var _i = 0, renderCalls_1 = renderCalls; _i < renderCalls_1.length; _i++) {\r\n\t            var renderCall = renderCalls_1[_i];\r\n\t            if (renderCall.vertecies.length > 0) {\r\n\t                this.gl.enableVertexAttribArray(this.positionLocation);\r\n\t                this.gl.enableVertexAttribArray(this.textureCoordAttribute);\r\n\t                this.gl.enableVertexAttribArray(this.matrixAttributeLocation);\r\n\t                this.gl.enableVertexAttribArray(this.matrixAttributeLocation + 1);\r\n\t                this.gl.enableVertexAttribArray(this.matrixAttributeLocation + 2);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.textureCoords), this.gl.STATIC_DRAW);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.matricesBuffer);\r\n\t                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.matrices), this.gl.STATIC_DRAW);\r\n\t                this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t                this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(renderCall.indecies), this.gl.STATIC_DRAW);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t                this.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t                this.gl.vertexAttribPointer(this.textureCoordAttribute, 2, this.gl.FLOAT, false, 0, 0);\r\n\t                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.matricesBuffer);\r\n\t                for (var i = 0; i < 3; i++) {\r\n\t                    this.gl.vertexAttribPointer(this.matrixAttributeLocation + i, 3, this.gl.FLOAT, false, 36, i * 12);\r\n\t                }\r\n\t                this.gl.activeTexture(this.gl.TEXTURE0);\r\n\t                this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.glTexture);\r\n\t                this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t                this.gl.drawElements(this.gl.TRIANGLES, renderCall.indecies.length, this.gl.UNSIGNED_SHORT, 0);\r\n\t                this.gl.disableVertexAttribArray(this.positionLocation);\r\n\t                this.gl.disableVertexAttribArray(this.textureCoordAttribute);\r\n\t                this.gl.disableVertexAttribArray(this.matrixAttributeLocation);\r\n\t                this.gl.disableVertexAttribArray(this.matrixAttributeLocation + 1);\r\n\t                this.gl.disableVertexAttribArray(this.matrixAttributeLocation + 2);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return DynamicRenderer;\r\n\t}());\r\n\texports.DynamicRenderer = DynamicRenderer;\r\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar bar_1 = __webpack_require__(433);\r\n\tvar UI = (function () {\r\n\t    function UI(maxHp, maxMana) {\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.bars = [];\r\n\t        this.hpBar = new bar_1.ProgressBar();\r\n\t        this.manaBar = new bar_1.ProgressBar();\r\n\t        this.hudTextureCoords = this.renderHelper.getTextureCoordinates([], 198);\r\n\t        this.hpBar.bar = new bar_1.Bar(new model_1.Rectangle(100, 8, 298, 16), 298, new model_1.Rectangle(1632, 96, 200, 12), 200);\r\n\t        this.hpBar.maxValue = maxHp;\r\n\t        this.manaBar.bar = new bar_1.Bar(new model_1.Rectangle(100, 34, 298, 16), 298, new model_1.Rectangle(1632, 128, 200, 12), 200);\r\n\t        this.manaBar.maxValue = maxMana;\r\n\t        this.bars.push(this.hpBar.bar);\r\n\t        this.bars.push(this.manaBar.bar);\r\n\t    }\r\n\t    UI.prototype.update = function (hp, mana) {\r\n\t        var hpFactor = hp / this.hpBar.maxValue;\r\n\t        this.hpBar.bar.area.width = (hpFactor * this.hpBar.bar.maxWidth);\r\n\t        this.hpBar.bar.textureArea.width = (hpFactor * this.hpBar.bar.maxTextureWidth);\r\n\t        var manaFactor = mana / this.manaBar.maxValue;\r\n\t        this.manaBar.bar.area.width = (manaFactor * this.manaBar.bar.maxWidth);\r\n\t        this.manaBar.bar.textureArea.width = (manaFactor * this.manaBar.bar.maxTextureWidth);\r\n\t    };\r\n\t    UI.prototype.createRenderCall = function (renderCall, camera) {\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(0 + camera[0], 0 + camera[1], 405, 96, renderCall.vertecies);\r\n\t        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.hudTextureCoords);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        for (var _i = 0, _a = this.bars; _i < _a.length; _i++) {\r\n\t            var bar = _a[_i];\r\n\t            renderCall.vertecies = this.renderHelper.getVertecies(bar.area.x + camera[0], bar.area.y + camera[1], bar.area.width, bar.area.height, renderCall.vertecies);\r\n\t            renderCall.textureCoords.push.apply(renderCall.textureCoords, this.renderHelper.getMainTextureCoords(bar.textureArea));\r\n\t            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        }\r\n\t        return renderCall;\r\n\t    };\r\n\t    return UI;\r\n\t}());\r\n\texports.UI = UI;\r\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Bar = (function () {\r\n\t    function Bar(area, maxWidth, textureArea, maxTextureWidth) {\r\n\t        this.area = area;\r\n\t        this.maxWidth = maxWidth;\r\n\t        this.textureArea = textureArea;\r\n\t        this.maxTextureWidth = maxTextureWidth;\r\n\t    }\r\n\t    return Bar;\r\n\t}());\r\n\texports.Bar = Bar;\r\n\tvar ProgressBar = (function () {\r\n\t    function ProgressBar() {\r\n\t    }\r\n\t    return ProgressBar;\r\n\t}());\r\n\texports.ProgressBar = ProgressBar;\r\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar sceneIndex_1 = __webpack_require__(435);\r\n\tvar menu_1 = __webpack_require__(436);\r\n\tvar clickable_1 = __webpack_require__(439);\r\n\tvar powerSelector_1 = __webpack_require__(440);\r\n\tvar active_1 = __webpack_require__(441);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar loadHelper_1 = __webpack_require__(346);\r\n\tvar localStorageHelper_1 = __webpack_require__(438);\r\n\tvar assetsLoader_1 = __webpack_require__(2);\r\n\tvar powerSelectionMenu_1 = __webpack_require__(442);\r\n\tvar newGameMenu_1 = __webpack_require__(444);\r\n\tvar restartMenu_1 = __webpack_require__(445);\r\n\tvar SceneHandler = (function () {\r\n\t    function SceneHandler(renderer, canvasSize, canvas, game) {\r\n\t        this.renderer = renderer;\r\n\t        this.canvasSize = canvasSize;\r\n\t        this.canvas = canvas;\r\n\t        this.game = game;\r\n\t        this.started = false;\r\n\t        this.currentScene = sceneIndex_1.SceneIndex.StartMenu;\r\n\t        this.lastCurrentScene = sceneIndex_1.SceneIndex.StartMenu;\r\n\t        this.scenes = new Map();\r\n\t        this.mousePosition = [-100, 0];\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.click = false;\r\n\t        this.clicked = false;\r\n\t        this.importClicked = false;\r\n\t        this.playerlist = document.getElementById(\"playerlist\");\r\n\t        this.textInput = document.getElementById(\"textinput\");\r\n\t        this.textArea = document.getElementById(\"textarea\");\r\n\t        this.fileUploadButton = document.getElementById(\"fileupload\");\r\n\t        this.fileUploadButtonHighlight = document.getElementById(\"fileuploadHighlight\");\r\n\t        this.uploadInput = document.getElementById(\"importLink\");\r\n\t        this.modal = document.getElementById(\"modal\");\r\n\t        this.loadHelper = loadHelper_1.LoadHelper.getInstance();\r\n\t        this.localStorageHelper = localStorageHelper_1.LocalStorageHelper.getInstance();\r\n\t        this.assetLoader = new assetsLoader_1.AssetsLoader();\r\n\t        var startMenu = new menu_1.Menu([\r\n\t            this.createNewGameButton(),\r\n\t            this.createContinueButton(),\r\n\t            this.createLoadButton()\r\n\t        ], [], this, this.textArea, renderer, canvasSize, 100, [512, 512], true);\r\n\t        startMenu.load();\r\n\t        this.scenes.set(sceneIndex_1.SceneIndex.StartMenu, startMenu);\r\n\t        var loadMenu = new menu_1.Menu([\r\n\t            this.createToStartMenuBack(new model_1.Rectangle((this.canvasSize[0] / 2) - 150, 235, 300, 50))\r\n\t        ], [], this, this.textArea, renderer, canvasSize, 100, [512, 512], true);\r\n\t        this.scenes.set(sceneIndex_1.SceneIndex.LoadMenu, loadMenu);\r\n\t        this.loadLevelSelectionScreen();\r\n\t        this.loadLevelFinishedScreen();\r\n\t        this.loadNewGameMenu();\r\n\t        this.loadRestartMenu();\r\n\t        this.createEventListerners();\r\n\t    }\r\n\t    SceneHandler.prototype.update = function () {\r\n\t        var currentScene = this.scenes.get(this.currentScene);\r\n\t        if (this.currentScene != this.lastCurrentScene) {\r\n\t            this.textArea.style.visibility = \"hidden\";\r\n\t            currentScene.load();\r\n\t        }\r\n\t        this.lastCurrentScene = this.currentScene;\r\n\t        if (this.click && !this.clicked) {\r\n\t            this.clicked = true;\r\n\t            currentScene.click(this.mousePosition);\r\n\t        }\r\n\t        currentScene.mouseOver(this.mousePosition);\r\n\t    };\r\n\t    SceneHandler.prototype.render = function () {\r\n\t        this.scenes.get(this.currentScene).render();\r\n\t        this.renderer.render(this.createMouseRenderCall(), [0, 0]);\r\n\t    };\r\n\t    SceneHandler.prototype.setCurrentLevel = function (level) {\r\n\t        var scene = this.scenes.get(sceneIndex_1.SceneIndex.RestartMenu);\r\n\t        if (!isNaN(+level)) {\r\n\t            scene.currentLevel = +level;\r\n\t        }\r\n\t    };\r\n\t    SceneHandler.prototype.createMouseRenderCall = function () {\r\n\t        var renderCalls = new Map();\r\n\t        var renderCall = new render_1.RenderCall();\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(this.mousePosition[0], this.mousePosition[1], 32, 32, renderCall.vertecies);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        renderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, 180);\r\n\t        renderCalls.set(-1, renderCall);\r\n\t        return renderCalls;\r\n\t    };\r\n\t    SceneHandler.prototype.loadLevelFinishedScreen = function () {\r\n\t        var levelFinishedScene = new powerSelectionMenu_1.PowerSelectionMenu(this, this.textArea, this.renderer, this.canvasSize, 100, [512, 512], false, [\r\n\t            this.createNextLevelButton(false),\r\n\t            this.createToStartMenuBack(new model_1.Rectangle(this.canvasSize[0] / 2 - 450, 650, 250, 42))\r\n\t        ], [], [\r\n\t            this.newPowerSelector(150, 100, 150, [105, 102, 106, 103, 107, 104]),\r\n\t            this.newPowerSelector(350, 100, 150, [111, 108, 112, 109, 113, 110]),\r\n\t            this.newPowerSelector(550, 100, 150, [117, 114, 118, 115, 119, 116])\r\n\t        ]);\r\n\t        this.scenes.set(sceneIndex_1.SceneIndex.LevelFinished, levelFinishedScene);\r\n\t    };\r\n\t    SceneHandler.prototype.loadRestartMenu = function () {\r\n\t        var restartMenu = new restartMenu_1.RestartMenu([\r\n\t            this.createToStartMenuBack(new model_1.Rectangle(this.canvasSize[0] / 2 - 450, 650, 250, 42))\r\n\t        ], [], this, this.textArea, this.renderer, this.canvasSize, 100, [512, 512], false, this.game);\r\n\t        this.scenes.set(sceneIndex_1.SceneIndex.RestartMenu, restartMenu);\r\n\t    };\r\n\t    SceneHandler.prototype.loadNewGameMenu = function () {\r\n\t        var newGameMenu = new newGameMenu_1.NewGameMenu([\r\n\t            this.createToStartMenuBack(new model_1.Rectangle(this.canvasSize[0] / 2 - 450, 650, 250, 42)),\r\n\t            this.createToPowerSelectorMenuButton(true),\r\n\t        ], [], this, this.textArea, this.renderer, this.canvasSize, 100, [512, 512], false, this.textInput, this.playerlist);\r\n\t        this.scenes.set(sceneIndex_1.SceneIndex.NewGameMenu, newGameMenu);\r\n\t    };\r\n\t    SceneHandler.prototype.newPowerSelector = function (x, y, offset, assets) {\r\n\t        var active1 = new active_1.Active(0, 1, false, new model_1.Rectangle(x, y, 100, 100), assets[0], assets[1], [100, 100]);\r\n\t        var active2 = new active_1.Active(0, 2, false, new model_1.Rectangle(x, y + offset, 100, 100), assets[2], assets[3], [100, 100]);\r\n\t        var active3 = new active_1.Active(0, 3, false, new model_1.Rectangle(x, y + offset * 2, 100, 100), assets[4], assets[5], [100, 100]);\r\n\t        return new powerSelector_1.PowerSelector([active1, active2, active3]);\r\n\t    };\r\n\t    SceneHandler.prototype.loadLevelSelectionScreen = function () {\r\n\t        var levelSelectionMenu = new menu_1.Menu(this.createLevelMenuButtons().concat([\r\n\t            this.createToStartMenuBackFromLevelMenu()\r\n\t        ]), [], this, this.textArea, this.renderer, this.canvasSize, 100, [512, 512], false);\r\n\t        this.scenes.set(sceneIndex_1.SceneIndex.LevelSelection, levelSelectionMenu);\r\n\t        return levelSelectionMenu;\r\n\t    };\r\n\t    SceneHandler.prototype.createEventListerners = function () {\r\n\t        var _this = this;\r\n\t        window.addEventListener(\"mousemove\", function (event) {\r\n\t            var relativeElement = _this.canvas.getBoundingClientRect();\r\n\t            var x = event.clientX - relativeElement.left;\r\n\t            var y = event.clientY - relativeElement.top;\r\n\t            _this.mousePosition = [x, y];\r\n\t        });\r\n\t        window.addEventListener(\"mousedown\", function (event) {\r\n\t            _this.click = true;\r\n\t        });\r\n\t        window.addEventListener(\"mouseup\", function (event) {\r\n\t            _this.clicked = false;\r\n\t            _this.click = false;\r\n\t        });\r\n\t        this.uploadInput.addEventListener(\"change\", function () {\r\n\t            var fileReader = new FileReader();\r\n\t            fileReader.onload = function (evt) {\r\n\t                _this.uploadInput.value = \"\";\r\n\t                var target = evt.target;\r\n\t                try {\r\n\t                    var leveldata = JSON.parse(target.result);\r\n\t                    if (_this.loadHelper.validateLevelData(leveldata)) {\r\n\t                        _this.game.loadLevel(leveldata);\r\n\t                        var restartMenu = _this.scenes.get(sceneIndex_1.SceneIndex.RestartMenu);\r\n\t                        restartMenu.tempLevel = leveldata;\r\n\t                        _this.started = true;\r\n\t                        _this.fileUploadButton.style.visibility = \"hidden\";\r\n\t                        _this.fileUploadButtonHighlight.style.visibility = \"hidden\";\r\n\t                    }\r\n\t                    else {\r\n\t                        _this.modal.style.display = \"block\";\r\n\t                        _this.modal.innerHTML += \"Invalid level data!\";\r\n\t                    }\r\n\t                }\r\n\t                catch (e) {\r\n\t                    _this.modal.style.display = \"block\";\r\n\t                    _this.modal.innerHTML += \"Error loading level!\";\r\n\t                }\r\n\t            };\r\n\t            fileReader.readAsText(_this.uploadInput.files[0], \"UTF-8\");\r\n\t        });\r\n\t    };\r\n\t    SceneHandler.prototype.levelCompleted = function (level) {\r\n\t        this.started = false;\r\n\t        this.localStorageHelper.setCurrentProgress((+level + 1));\r\n\t        this.currentScene = sceneIndex_1.SceneIndex.LevelFinished;\r\n\t        this.scenes.get(this.currentScene).load();\r\n\t    };\r\n\t    SceneHandler.prototype.createLoadButton = function () {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.currentScene = sceneIndex_1.SceneIndex.LoadMenu;\r\n\t            _this.fileUploadButton.style.visibility = \"visible\";\r\n\t        };\r\n\t        return new clickable_1.Clickable(new model_1.Rectangle((this.canvasSize[0] / 2) - 150, 295, 300, 50), 179, 181, 183, onClick);\r\n\t    };\r\n\t    SceneHandler.prototype.createNextLevelButton = function (disabled) {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.textInput.style.visibility = \"hidden\";\r\n\t            _this.textArea.style.visibility = \"hidden\";\r\n\t            _this.playerlist.style.visibility = \"hidden\";\r\n\t            var progress = _this.localStorageHelper.getCurrentProgress();\r\n\t            _this.assetLoader.getLevel(progress.completedLevels.toString()).subscribe(function (it) {\r\n\t                _this.game.loadLevel(it);\r\n\t                _this.started = true;\r\n\t            });\r\n\t        };\r\n\t        var clickable;\r\n\t        if (disabled) {\r\n\t            clickable = new clickable_1.Clickable(new model_1.Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick, 554);\r\n\t        }\r\n\t        else {\r\n\t            clickable = new clickable_1.Clickable(new model_1.Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick);\r\n\t        }\r\n\t        return clickable;\r\n\t    };\r\n\t    SceneHandler.prototype.createToPowerSelectorMenuButton = function (disabled) {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.textInput.style.visibility = \"hidden\";\r\n\t            _this.textArea.style.visibility = \"hidden\";\r\n\t            _this.playerlist.style.visibility = \"hidden\";\r\n\t            _this.currentScene = sceneIndex_1.SceneIndex.LevelFinished;\r\n\t        };\r\n\t        var clickable;\r\n\t        if (disabled) {\r\n\t            clickable = new clickable_1.Clickable(new model_1.Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick, 554);\r\n\t        }\r\n\t        else {\r\n\t            clickable = new clickable_1.Clickable(new model_1.Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick);\r\n\t        }\r\n\t        return clickable;\r\n\t    };\r\n\t    SceneHandler.prototype.createNewGameButton = function () {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.currentScene = sceneIndex_1.SceneIndex.NewGameMenu;\r\n\t        };\r\n\t        return new clickable_1.Clickable(new model_1.Rectangle((this.canvasSize[0] / 2) - 150, 175, 300, 50), 179, 181, 182, onClick);\r\n\t    };\r\n\t    SceneHandler.prototype.createContinueButton = function () {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.currentScene = sceneIndex_1.SceneIndex.LevelSelection;\r\n\t        };\r\n\t        return new clickable_1.Clickable(new model_1.Rectangle((this.canvasSize[0] / 2) - 150, 235, 300, 50), 179, 181, 184, onClick, 554);\r\n\t    };\r\n\t    SceneHandler.prototype.createToStartMenuBack = function (area) {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.currentScene = sceneIndex_1.SceneIndex.StartMenu;\r\n\t            _this.fileUploadButton.style.visibility = \"hidden\";\r\n\t            _this.fileUploadButtonHighlight.style.visibility = \"hidden\";\r\n\t            _this.textArea.style.visibility = \"hidden\";\r\n\t            _this.textInput.style.visibility = \"hidden\";\r\n\t            _this.playerlist.style.visibility = \"hidden\";\r\n\t        };\r\n\t        return new clickable_1.Clickable(area, 179, 181, 186, onClick);\r\n\t    };\r\n\t    SceneHandler.prototype.createToStartMenuBackFromLevelMenu = function () {\r\n\t        var _this = this;\r\n\t        var onClick = function () {\r\n\t            _this.currentScene = sceneIndex_1.SceneIndex.StartMenu;\r\n\t        };\r\n\t        return new clickable_1.Clickable(new model_1.Rectangle((this.canvasSize[0] / 2) - 150, 700, 300, 50), 179, 181, 186, onClick);\r\n\t    };\r\n\t    SceneHandler.prototype.createLevelMenuButtons = function () {\r\n\t        var progress = this.localStorageHelper.getCurrentProgress();\r\n\t        var clickables = [];\r\n\t        var collumns = 5;\r\n\t        for (var i = 0; i < 10; i++) {\r\n\t            var y = Math.floor(i / collumns);\r\n\t            var x = i % collumns;\r\n\t            var disabled = !(progress.completedLevels >= i);\r\n\t            clickables.push(this.createLevelButton(x, y, i, disabled));\r\n\t        }\r\n\t        return clickables;\r\n\t    };\r\n\t    SceneHandler.prototype.createLevelButton = function (x, y, level, disabled) {\r\n\t        var _this = this;\r\n\t        var onClick;\r\n\t        if (disabled) {\r\n\t            onClick = function () {\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            onClick = function () {\r\n\t                _this.assetLoader.getLevel(level.toString()).subscribe(function (it) {\r\n\t                    _this.game.loadLevel(it);\r\n\t                    _this.started = true;\r\n\t                });\r\n\t            };\r\n\t        }\r\n\t        var buttonTexture;\r\n\t        if (disabled) {\r\n\t            buttonTexture = 187;\r\n\t        }\r\n\t        else {\r\n\t            buttonTexture = 550;\r\n\t        }\r\n\t        return new clickable_1.Clickable(new model_1.Rectangle(100 + (x * 200), 100 + (y * 200), 200, 100), buttonTexture, buttonTexture, 188 + level, onClick);\r\n\t    };\r\n\t    return SceneHandler;\r\n\t}());\r\n\texports.SceneHandler = SceneHandler;\r\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (SceneIndex) {\r\n\t    SceneIndex[SceneIndex[\"StartMenu\"] = 1] = \"StartMenu\";\r\n\t    SceneIndex[SceneIndex[\"LoadMenu\"] = 2] = \"LoadMenu\";\r\n\t    SceneIndex[SceneIndex[\"LevelFinished\"] = 3] = \"LevelFinished\";\r\n\t    SceneIndex[SceneIndex[\"NewGameMenu\"] = 4] = \"NewGameMenu\";\r\n\t    SceneIndex[SceneIndex[\"LevelSelection\"] = 5] = \"LevelSelection\";\r\n\t    SceneIndex[SceneIndex[\"RestartMenu\"] = 6] = \"RestartMenu\";\r\n\t})(exports.SceneIndex || (exports.SceneIndex = {}));\r\n\tvar SceneIndex = exports.SceneIndex;\r\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar scene_1 = __webpack_require__(437);\r\n\tvar sceneIndex_1 = __webpack_require__(435);\r\n\tvar localStorageHelper_1 = __webpack_require__(438);\r\n\tvar Menu = (function (_super) {\r\n\t    __extends(Menu, _super);\r\n\t    function Menu(clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu) {\r\n\t        _super.call(this, sceneHandler, renderer, canvasSize, background, tileSize, menu);\r\n\t        this.clickables = clickables;\r\n\t        this.text = text;\r\n\t        this.sceneHandler = sceneHandler;\r\n\t        this.textArea = textArea;\r\n\t        this.renderer = renderer;\r\n\t        this.canvasSize = canvasSize;\r\n\t        this.background = background;\r\n\t        this.tileSize = tileSize;\r\n\t        this.menu = menu;\r\n\t        this.createRenderCalls();\r\n\t    }\r\n\t    Menu.prototype.update = function () {\r\n\t    };\r\n\t    Menu.prototype.load = function () {\r\n\t        if (this.sceneHandler.currentScene == sceneIndex_1.SceneIndex.StartMenu) {\r\n\t            if (localStorageHelper_1.LocalStorageHelper.getInstance().getProgression().length > 0) {\r\n\t                this.clickables[1].disabled = false;\r\n\t            }\r\n\t            else {\r\n\t                this.clickables[1].disabled = true;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Menu.prototype.render = function () {\r\n\t        var rendercall = new render_1.RenderCall();\r\n\t        for (var _i = 0, _a = this.clickables; _i < _a.length; _i++) {\r\n\t            var clickable = _a[_i];\r\n\t            rendercall = clickable.createRenderCall(rendercall);\r\n\t        }\r\n\t        for (var _b = 0, _c = this.text; _b < _c.length; _b++) {\r\n\t            var t = _c[_b];\r\n\t            rendercall.vertecies = this.renderHelper.getVertecies(t.x, t.y, t.width, t.height, rendercall.vertecies);\r\n\t            rendercall.indecies = this.renderHelper.getIndecies(rendercall.indecies);\r\n\t            rendercall.textureCoords = this.renderHelper.getTextureCoordinates(rendercall.textureCoords, t.key);\r\n\t        }\r\n\t        this.renderCalls.set(-1, rendercall);\r\n\t        this.renderer.render(this.renderCalls, [0, 0]);\r\n\t        _super.prototype.render.call(this);\r\n\t    };\r\n\t    Menu.prototype.click = function (mousePosition) {\r\n\t        for (var _i = 0, _a = this.clickables; _i < _a.length; _i++) {\r\n\t            var clickable = _a[_i];\r\n\t            clickable.click(mousePosition);\r\n\t        }\r\n\t    };\r\n\t    Menu.prototype.mouseOver = function (mousePosition) {\r\n\t        for (var _i = 0, _a = this.clickables; _i < _a.length; _i++) {\r\n\t            var clickable = _a[_i];\r\n\t            clickable.mouseOver(mousePosition);\r\n\t        }\r\n\t    };\r\n\t    Menu.prototype.createRenderCalls = function () {\r\n\t        _super.prototype.createRenderCalls.call(this);\r\n\t    };\r\n\t    return Menu;\r\n\t}(scene_1.Scene));\r\n\texports.Menu = Menu;\r\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar renderHelper_1 = __webpack_require__(362);\r\n\tvar Scene = (function () {\r\n\t    function Scene(sceneHandler, renderer, canvasSize, background, tileSize, menu) {\r\n\t        this.sceneHandler = sceneHandler;\r\n\t        this.renderer = renderer;\r\n\t        this.canvasSize = canvasSize;\r\n\t        this.background = background;\r\n\t        this.tileSize = tileSize;\r\n\t        this.menu = menu;\r\n\t        this.renderCalls = new Map();\r\n\t        this.renderHelper = renderHelper_1.RenderHelper.getInstance();\r\n\t    }\r\n\t    Scene.prototype.update = function () {\r\n\t    };\r\n\t    Scene.prototype.render = function () {\r\n\t        this.renderCalls = new Map();\r\n\t        this.createRenderCalls();\r\n\t    };\r\n\t    Scene.prototype.load = function () {\r\n\t    };\r\n\t    Scene.prototype.click = function (mousePosition) {\r\n\t    };\r\n\t    Scene.prototype.mouseOver = function (mousePosition) {\r\n\t    };\r\n\t    Scene.prototype.createRenderCalls = function () {\r\n\t        this.renderCalls = this.createBackGround(this.renderCalls);\r\n\t        if (this.menu) {\r\n\t            this.renderCalls = this.createMenu(this.renderCalls);\r\n\t        }\r\n\t    };\r\n\t    Scene.prototype.createMenu = function (renderCalls) {\r\n\t        var menu = new render_1.RenderCall();\r\n\t        menu.vertecies = this.renderHelper.getVertecies((this.canvasSize[0] / 2) - 256, 50, 512, 700, menu.vertecies);\r\n\t        menu.indecies = this.renderHelper.getIndecies(menu.indecies);\r\n\t        menu.textureCoords = this.renderHelper.getTiledTextureCoordinates(new model_1.Rectangle(0, 0, 288, 295), menu.textureCoords, [512, 512]);\r\n\t        menu.key = 101;\r\n\t        renderCalls.set(menu.key, menu);\r\n\t        return renderCalls;\r\n\t    };\r\n\t    Scene.prototype.createBackGround = function (renderCalls) {\r\n\t        var background = new render_1.RenderCall();\r\n\t        background.vertecies = this.renderHelper.getVertecies(0, 0, this.canvasSize[0], this.canvasSize[1], background.vertecies);\r\n\t        background.indecies = this.renderHelper.getIndecies(background.indecies);\r\n\t        background.textureCoords = this.renderHelper.getTiledTextureCoordinates(new model_1.Rectangle(0, 0, this.canvasSize[0], this.canvasSize[0]), background.textureCoords, this.tileSize);\r\n\t        background.key = this.background;\r\n\t        renderCalls.set(background.key, background);\r\n\t        return renderCalls;\r\n\t    };\r\n\t    return Scene;\r\n\t}());\r\n\texports.Scene = Scene;\r\n\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar LocalStorageHelper = (function () {\r\n\t    function LocalStorageHelper() {\r\n\t        this.progressionKey = \"progression\";\r\n\t    }\r\n\t    LocalStorageHelper.prototype.constrcuctor = function () {\r\n\t        if (LocalStorageHelper.instance) {\r\n\t            throw new Error('Static class cant be instanced!');\r\n\t        }\r\n\t        LocalStorageHelper.instance = this;\r\n\t    };\r\n\t    LocalStorageHelper.getInstance = function () {\r\n\t        return LocalStorageHelper.instance;\r\n\t    };\r\n\t    LocalStorageHelper.prototype.newPlayer = function (name) {\r\n\t        var progression = this.getProgression();\r\n\t        for (var _i = 0, progression_1 = progression; _i < progression_1.length; _i++) {\r\n\t            var p = progression_1[_i];\r\n\t            p.active = false;\r\n\t            this.saveProgress(p);\r\n\t        }\r\n\t        var progress = new model_1.Progress();\r\n\t        progress.playerName = name;\r\n\t        progress.active = true;\r\n\t        progress.completedLevels = 0;\r\n\t        progress.level = 1;\r\n\t        progress.fire = 0;\r\n\t        progress.frost = 0;\r\n\t        progress.defence = 0;\r\n\t        progress.hp = 0;\r\n\t        progress.mana = 0;\r\n\t        this.saveProgress(progress);\r\n\t    };\r\n\t    LocalStorageHelper.prototype.setPowers = function (fire, frost, defence) {\r\n\t        var progress = this.getCurrentProgress();\r\n\t        progress.fire = fire;\r\n\t        progress.frost = frost;\r\n\t        progress.defence = defence;\r\n\t        this.saveProgress(progress);\r\n\t    };\r\n\t    LocalStorageHelper.prototype.setCurrentProgress = function (level) {\r\n\t        var progress = this.getCurrentProgress();\r\n\t        progress.level++;\r\n\t        if (progress.completedLevels < level) {\r\n\t            progress.completedLevels = level;\r\n\t        }\r\n\t        this.saveProgress(progress);\r\n\t    };\r\n\t    LocalStorageHelper.prototype.getProgression = function () {\r\n\t        var progression = this.getItem(this.progressionKey);\r\n\t        if (progression == null) {\r\n\t            progression = [];\r\n\t        }\r\n\t        return progression;\r\n\t    };\r\n\t    LocalStorageHelper.prototype.getCurrentProgress = function () {\r\n\t        var progression = this.getItem(this.progressionKey);\r\n\t        if (!progression) {\r\n\t            progression = [this.defaultProgress()];\r\n\t        }\r\n\t        return progression.find(function (it) { return it.active == true; });\r\n\t    };\r\n\t    LocalStorageHelper.prototype.saveProgress = function (progress) {\r\n\t        var progression = this.getItem(this.progressionKey);\r\n\t        if (!progression) {\r\n\t            progression = [];\r\n\t        }\r\n\t        var prg = progression.find(function (it) { return it.playerName == progress.playerName; });\r\n\t        if (prg) {\r\n\t            var index = progression.indexOf(prg);\r\n\t            if (index != -1) {\r\n\t                progression.splice(index, 1);\r\n\t            }\r\n\t            progression.push(progress);\r\n\t        }\r\n\t        else {\r\n\t            progression.push(progress);\r\n\t        }\r\n\t        this.setItem(this.progressionKey, progression);\r\n\t    };\r\n\t    LocalStorageHelper.prototype.setActive = function (name) {\r\n\t        var progression = this.getProgression();\r\n\t        for (var _i = 0, progression_2 = progression; _i < progression_2.length; _i++) {\r\n\t            var progress = progression_2[_i];\r\n\t            if (progress.playerName == name) {\r\n\t                progress.active = true;\r\n\t            }\r\n\t            else {\r\n\t                progress.active = false;\r\n\t            }\r\n\t            this.saveProgress(progress);\r\n\t        }\r\n\t    };\r\n\t    LocalStorageHelper.prototype.defaultProgress = function () {\r\n\t        var progress = new model_1.Progress();\r\n\t        progress.playerName = \"nouser\";\r\n\t        progress.active = true;\r\n\t        progress.completedLevels = 0;\r\n\t        progress.level = 1;\r\n\t        progress.fire = 0;\r\n\t        progress.frost = 0;\r\n\t        progress.defence = 0;\r\n\t        progress.hp = 0;\r\n\t        progress.mana = 0;\r\n\t        return progress;\r\n\t    };\r\n\t    LocalStorageHelper.prototype.getItem = function (key) {\r\n\t        return JSON.parse(localStorage.getItem(key));\r\n\t    };\r\n\t    LocalStorageHelper.prototype.setItem = function (key, value) {\r\n\t        localStorage.setItem(key, JSON.stringify(value));\r\n\t    };\r\n\t    LocalStorageHelper.instance = new LocalStorageHelper();\r\n\t    return LocalStorageHelper;\r\n\t}());\r\n\texports.LocalStorageHelper = LocalStorageHelper;\r\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar Clickable = (function () {\r\n\t    function Clickable(area, buttonTexture, hoverTexture, textTexture, onClick, disabledTexture) {\r\n\t        this.area = area;\r\n\t        this.buttonTexture = buttonTexture;\r\n\t        this.hoverTexture = hoverTexture;\r\n\t        this.textTexture = textTexture;\r\n\t        this.onClick = onClick;\r\n\t        this.disabledTexture = disabledTexture;\r\n\t        this.disabled = false;\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t        this.hover = false;\r\n\t        this.baseTextureCoords = this.renderHelper.getTextureCoordinates([], buttonTexture);\r\n\t        this.hoverTextureCoords = this.renderHelper.getTextureCoordinates([], hoverTexture);\r\n\t        this.textTextureCoords = this.renderHelper.getTextureCoordinates([], textTexture);\r\n\t        if (disabledTexture != null) {\r\n\t            this.disabledTextureCoords = this.renderHelper.getTextureCoordinates([], disabledTexture);\r\n\t        }\r\n\t    }\r\n\t    Clickable.prototype.click = function (mouseposition) {\r\n\t        if (this.isWithinArea(mouseposition)) {\r\n\t            if (!this.disabled) {\r\n\t                this.onClick();\r\n\t            }\r\n\t        }\r\n\t        ;\r\n\t    };\r\n\t    Clickable.prototype.mouseOver = function (mouseposition) {\r\n\t        if (this.isWithinArea(mouseposition)) {\r\n\t            this.hover = true;\r\n\t        }\r\n\t        else {\r\n\t            this.hover = false;\r\n\t        }\r\n\t    };\r\n\t    Clickable.prototype.createRenderCall = function (renderCall) {\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.getTexture());\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.textTextureCoords);\r\n\t        return renderCall;\r\n\t    };\r\n\t    Clickable.prototype.isWithinArea = function (mouseposition) {\r\n\t        return this.collisionDetection.aabbCheck(new model_1.Rectangle(mouseposition[0], mouseposition[1], 1, 1), this.area);\r\n\t    };\r\n\t    Clickable.prototype.getTexture = function () {\r\n\t        if (this.disabled && this.disabledTexture != null) {\r\n\t            return this.disabledTextureCoords;\r\n\t        }\r\n\t        if (this.hover) {\r\n\t            return this.hoverTextureCoords;\r\n\t        }\r\n\t        else {\r\n\t            return this.baseTextureCoords;\r\n\t        }\r\n\t    };\r\n\t    return Clickable;\r\n\t}());\r\n\texports.Clickable = Clickable;\r\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar PowerSelector = (function () {\r\n\t    function PowerSelector(actives) {\r\n\t        this.actives = actives;\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t    }\r\n\t    PowerSelector.prototype.render = function (renderCalls) {\r\n\t        for (var _i = 0, _a = this.actives; _i < _a.length; _i++) {\r\n\t            var active = _a[_i];\r\n\t            var tempRenderCalls = active.createRenderCall(renderCalls);\r\n\t        }\r\n\t        return renderCalls;\r\n\t    };\r\n\t    PowerSelector.prototype.click = function (mouseposition) {\r\n\t        for (var _i = 0, _a = this.actives; _i < _a.length; _i++) {\r\n\t            var active = _a[_i];\r\n\t            if (!this.actives[0].active) {\r\n\t                this.actives[0].click(mouseposition);\r\n\t                break;\r\n\t            }\r\n\t            else if (!this.actives[1].active) {\r\n\t                this.actives[1].click(mouseposition);\r\n\t                break;\r\n\t            }\r\n\t            else if (!this.actives[2].active) {\r\n\t                this.actives[2].click(mouseposition);\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    PowerSelector.prototype.getPoints = function () {\r\n\t        return this.actives[0].value + this.actives[1].value + this.actives[2].value;\r\n\t    };\r\n\t    PowerSelector.prototype.fill = function (points) {\r\n\t        var active1 = this.actives[0];\r\n\t        var active2 = this.actives[1];\r\n\t        var active3 = this.actives[2];\r\n\t        active1.reset();\r\n\t        active2.reset();\r\n\t        active3.reset();\r\n\t        for (var i = 0; i < points; i++) {\r\n\t            if (!active1.active) {\r\n\t                active1.addPoint();\r\n\t            }\r\n\t            else if (!active2.active) {\r\n\t                active2.addPoint();\r\n\t            }\r\n\t            else if (!active3.active) {\r\n\t                active3.addPoint();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return PowerSelector;\r\n\t}());\r\n\texports.PowerSelector = PowerSelector;\r\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar Active = (function () {\r\n\t    function Active(value, maxValue, active, area, asset, activeAsset, size) {\r\n\t        this.value = value;\r\n\t        this.maxValue = maxValue;\r\n\t        this.active = active;\r\n\t        this.area = area;\r\n\t        this.asset = asset;\r\n\t        this.activeAsset = activeAsset;\r\n\t        this.size = size;\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t    }\r\n\t    Active.prototype.createRenderCall = function (renderCalls) {\r\n\t        renderCalls = this.addRenderCall(renderCalls, this.asset, false);\r\n\t        renderCalls = this.addRenderCall(renderCalls, this.activeAsset, true);\r\n\t        return renderCalls;\r\n\t    };\r\n\t    Active.prototype.click = function (mouseposition) {\r\n\t        if (this.isWithinArea(mouseposition)) {\r\n\t            this.addPoint();\r\n\t        }\r\n\t        ;\r\n\t    };\r\n\t    Active.prototype.addPoint = function () {\r\n\t        this.value++;\r\n\t        if (this.value == this.maxValue) {\r\n\t            this.active = true;\r\n\t        }\r\n\t    };\r\n\t    Active.prototype.reset = function () {\r\n\t        this.value = 0;\r\n\t        this.active = false;\r\n\t    };\r\n\t    Active.prototype.addRenderCall = function (renderCalls, asset, partial) {\r\n\t        var renderCall;\r\n\t        if (renderCalls.has(asset)) {\r\n\t            renderCall = renderCalls.get(asset);\r\n\t        }\r\n\t        else {\r\n\t            renderCall = new render_1.RenderCall();\r\n\t        }\r\n\t        if (partial) {\r\n\t            var area = new model_1.Rectangle(this.area.x, this.area.y, this.area.width, this.area.height * (this.value / this.maxValue));\r\n\t            renderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(area, renderCall.textureCoords, this.size);\r\n\t            renderCall.vertecies = this.renderHelper.getVertecies(area.x, area.y, area.width, area.height, renderCall.vertecies);\r\n\t        }\r\n\t        else {\r\n\t            renderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(this.area, renderCall.textureCoords, this.size);\r\n\t            renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n\t        }\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        renderCalls.set(asset, renderCall);\r\n\t        return renderCalls;\r\n\t    };\r\n\t    Active.prototype.isWithinArea = function (mouseposition) {\r\n\t        return this.collisionDetection.aabbCheck(new model_1.Rectangle(mouseposition[0], mouseposition[1], 1, 1), this.area);\r\n\t    };\r\n\t    return Active;\r\n\t}());\r\n\texports.Active = Active;\r\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar menu_1 = __webpack_require__(436);\r\n\tvar localStorageHelper_1 = __webpack_require__(438);\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar simpleClickable_1 = __webpack_require__(443);\r\n\tvar PowerSelectionMenu = (function (_super) {\r\n\t    __extends(PowerSelectionMenu, _super);\r\n\t    function PowerSelectionMenu(sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu, clickables, text, powerSelectors) {\r\n\t        _super.call(this, clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu);\r\n\t        this.sceneHandler = sceneHandler;\r\n\t        this.textArea = textArea;\r\n\t        this.renderer = renderer;\r\n\t        this.canvasSize = canvasSize;\r\n\t        this.background = background;\r\n\t        this.tileSize = tileSize;\r\n\t        this.menu = menu;\r\n\t        this.clickables = clickables;\r\n\t        this.text = text;\r\n\t        this.powerSelectors = powerSelectors;\r\n\t        this.localStorageHelper = localStorageHelper_1.LocalStorageHelper.getInstance();\r\n\t        this.load();\r\n\t        this.textArea.style.visibility = \"hidden\";\r\n\t    }\r\n\t    PowerSelectionMenu.prototype.render = function () {\r\n\t        for (var _i = 0, _a = this.powerSelectors; _i < _a.length; _i++) {\r\n\t            var powerSelector = _a[_i];\r\n\t            this.renderCalls = powerSelector.render(this.renderCalls);\r\n\t        }\r\n\t        for (var _b = 0, _c = this.simpleClickables; _b < _c.length; _b++) {\r\n\t            var simpleClickable = _c[_b];\r\n\t            this.renderCalls = simpleClickable.createRenderCall(this.renderCalls);\r\n\t        }\r\n\t        _super.prototype.render.call(this);\r\n\t    };\r\n\t    PowerSelectionMenu.prototype.click = function (mousePosition) {\r\n\t        _super.prototype.click.call(this, mousePosition);\r\n\t        for (var _i = 0, _a = this.powerSelectors; _i < _a.length; _i++) {\r\n\t            var powerSelector = _a[_i];\r\n\t            if (this.getAvailablePoints() > 0) {\r\n\t                powerSelector.click(mousePosition);\r\n\t            }\r\n\t        }\r\n\t        for (var _b = 0, _c = this.simpleClickables; _b < _c.length; _b++) {\r\n\t            var simpleClickable = _c[_b];\r\n\t            if (this.getAvailablePoints() > 0) {\r\n\t                simpleClickable.click(mousePosition);\r\n\t            }\r\n\t        }\r\n\t        this.progress.fire = this.powerSelectors[0].getPoints();\r\n\t        this.progress.frost = this.powerSelectors[1].getPoints();\r\n\t        this.progress.defence = this.powerSelectors[2].getPoints();\r\n\t        this.textArea.innerHTML = \"Skillpoints:\" + this.getAvailablePoints();\r\n\t        this.localStorageHelper.saveProgress(this.progress);\r\n\t    };\r\n\t    PowerSelectionMenu.prototype.load = function () {\r\n\t        var _this = this;\r\n\t        this.progress = this.localStorageHelper.getCurrentProgress();\r\n\t        var onHpClick = function () {\r\n\t            _this.progress.hp++;\r\n\t        };\r\n\t        var hpClickable = new simpleClickable_1.SimpleClickable(new model_1.Rectangle(750, 100, 100, 100), 120, [100, 100], onHpClick);\r\n\t        var onManaClick = function () {\r\n\t            _this.progress.mana++;\r\n\t        };\r\n\t        var manaClickable = new simpleClickable_1.SimpleClickable(new model_1.Rectangle(950, 100, 100, 100), 121, [256, 256], onManaClick);\r\n\t        this.simpleClickables = [hpClickable, manaClickable];\r\n\t        this.powerSelectors[0].fill(this.progress.fire);\r\n\t        this.powerSelectors[1].fill(this.progress.frost);\r\n\t        this.powerSelectors[2].fill(this.progress.defence);\r\n\t        this.textArea.style.visibility = \"visible\";\r\n\t        this.textArea.innerHTML = \"Skillpoints:\" + this.getAvailablePoints();\r\n\t    };\r\n\t    PowerSelectionMenu.prototype.getAvailablePoints = function () {\r\n\t        return (this.progress.level - (this.progress.fire + this.progress.frost + this.progress.defence + this.progress.hp + this.progress.mana));\r\n\t    };\r\n\t    return PowerSelectionMenu;\r\n\t}(menu_1.Menu));\r\n\texports.PowerSelectionMenu = PowerSelectionMenu;\r\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar render_1 = __webpack_require__(357);\r\n\tvar collisionDetection_1 = __webpack_require__(367);\r\n\tvar SimpleClickable = (function () {\r\n\t    function SimpleClickable(area, textureKey, size, onClick) {\r\n\t        this.area = area;\r\n\t        this.textureKey = textureKey;\r\n\t        this.size = size;\r\n\t        this.onClick = onClick;\r\n\t        this.renderHelper = render_1.RenderHelper.getInstance();\r\n\t        this.collisionDetection = collisionDetection_1.CollisionDetection.getInstance();\r\n\t    }\r\n\t    SimpleClickable.prototype.click = function (mouseposition) {\r\n\t        if (this.isWithinArea(mouseposition)) {\r\n\t            this.onClick();\r\n\t        }\r\n\t        ;\r\n\t    };\r\n\t    SimpleClickable.prototype.createRenderCall = function (renderCalls) {\r\n\t        var renderCall;\r\n\t        if (renderCalls.has(this.textureKey)) {\r\n\t            renderCall = renderCalls.get(this.textureKey);\r\n\t        }\r\n\t        else {\r\n\t            renderCall = new render_1.RenderCall();\r\n\t        }\r\n\t        renderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(this.area, renderCall.textureCoords, this.size);\r\n\t        renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n\t        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t        renderCalls.set(this.textureKey, renderCall);\r\n\t        return renderCalls;\r\n\t    };\r\n\t    SimpleClickable.prototype.isWithinArea = function (mouseposition) {\r\n\t        return this.collisionDetection.aabbCheck(new model_1.Rectangle(mouseposition[0], mouseposition[1], 1, 1), this.area);\r\n\t    };\r\n\t    return SimpleClickable;\r\n\t}());\r\n\texports.SimpleClickable = SimpleClickable;\r\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar menu_1 = __webpack_require__(436);\r\n\tvar clickable_1 = __webpack_require__(439);\r\n\tvar localStorageHelper_1 = __webpack_require__(438);\r\n\tvar NewGameMenu = (function (_super) {\r\n\t    __extends(NewGameMenu, _super);\r\n\t    function NewGameMenu(clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu, textInput, playerlist) {\r\n\t        var _this = this;\r\n\t        _super.call(this, clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu);\r\n\t        this.clickables = clickables;\r\n\t        this.text = text;\r\n\t        this.sceneHandler = sceneHandler;\r\n\t        this.textArea = textArea;\r\n\t        this.renderer = renderer;\r\n\t        this.canvasSize = canvasSize;\r\n\t        this.background = background;\r\n\t        this.tileSize = tileSize;\r\n\t        this.menu = menu;\r\n\t        this.textInput = textInput;\r\n\t        this.playerlist = playerlist;\r\n\t        this.text.push(new model_1.Tile(75, 70, 200, 33, 557));\r\n\t        var onClick = function () {\r\n\t            var name = _this.textInput.value;\r\n\t            if (name.length > 0) {\r\n\t                localStorageHelper_1.LocalStorageHelper.getInstance().newPlayer(name);\r\n\t                _this.checkProgressionExists();\r\n\t                _this.reDrawPlayerList();\r\n\t            }\r\n\t        };\r\n\t        clickables.push(new clickable_1.Clickable(new model_1.Rectangle(150, 150, 200, 33), 179, 181, 555, onClick));\r\n\t    }\r\n\t    NewGameMenu.prototype.load = function () {\r\n\t        this.textInput.style.visibility = \"visible\";\r\n\t        this.playerlist.style.visibility = \"visible\";\r\n\t        this.reDrawPlayerList();\r\n\t        this.checkProgressionExists();\r\n\t    };\r\n\t    NewGameMenu.prototype.reDrawPlayerList = function () {\r\n\t        var _this = this;\r\n\t        while (this.playerlist.firstChild) {\r\n\t            this.playerlist.removeChild(this.playerlist.firstChild);\r\n\t        }\r\n\t        this.playerlist.children;\r\n\t        var progression = localStorageHelper_1.LocalStorageHelper.getInstance().getProgression();\r\n\t        var _loop_1 = function(progress) {\r\n\t            var item = document.createElement(\"div\");\r\n\t            item.style.setProperty(\"color\", \"#ac9478\", \"important\");\r\n\t            item.style.textShadow = \"-2px 0 #5d392c, 0 2px #5d392c, 2px 0 #5d392c, 0 -2px #5d392c\";\r\n\t            item.style.padding = \"5px\";\r\n\t            item.innerHTML = progress.playerName;\r\n\t            if (progress.active) {\r\n\t                item.innerHTML = \"➣ \" + item.innerHTML;\r\n\t            }\r\n\t            item.onclick = function () {\r\n\t                localStorageHelper_1.LocalStorageHelper.getInstance().setActive(progress.playerName);\r\n\t                _this.reDrawPlayerList();\r\n\t            };\r\n\t            this_1.playerlist.appendChild(item);\r\n\t        };\r\n\t        var this_1 = this;\r\n\t        for (var _i = 0, progression_1 = progression; _i < progression_1.length; _i++) {\r\n\t            var progress = progression_1[_i];\r\n\t            _loop_1(progress);\r\n\t        }\r\n\t    };\r\n\t    NewGameMenu.prototype.checkProgressionExists = function () {\r\n\t        if (localStorageHelper_1.LocalStorageHelper.getInstance().getProgression().length > 0) {\r\n\t            this.clickables[1].disabled = false;\r\n\t        }\r\n\t        else {\r\n\t            this.clickables[1].disabled = true;\r\n\t        }\r\n\t    };\r\n\t    return NewGameMenu;\r\n\t}(menu_1.Menu));\r\n\texports.NewGameMenu = NewGameMenu;\r\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar model_1 = __webpack_require__(347);\r\n\tvar menu_1 = __webpack_require__(436);\r\n\tvar clickable_1 = __webpack_require__(439);\r\n\tvar assetsLoader_1 = __webpack_require__(2);\r\n\tvar RestartMenu = (function (_super) {\r\n\t    __extends(RestartMenu, _super);\r\n\t    function RestartMenu(clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu, game) {\r\n\t        _super.call(this, clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu);\r\n\t        this.clickables = clickables;\r\n\t        this.text = text;\r\n\t        this.sceneHandler = sceneHandler;\r\n\t        this.textArea = textArea;\r\n\t        this.renderer = renderer;\r\n\t        this.canvasSize = canvasSize;\r\n\t        this.background = background;\r\n\t        this.tileSize = tileSize;\r\n\t        this.menu = menu;\r\n\t        this.game = game;\r\n\t        this.currentLevel = 0;\r\n\t        this.assetLoader = new assetsLoader_1.AssetsLoader();\r\n\t        this.load();\r\n\t    }\r\n\t    RestartMenu.prototype.load = function () {\r\n\t        this.clickables[1] = new clickable_1.Clickable(new model_1.Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 558, this.getClickCall());\r\n\t    };\r\n\t    RestartMenu.prototype.getClickCall = function () {\r\n\t        var _this = this;\r\n\t        return function () {\r\n\t            if (_this.tempLevel != null) {\r\n\t                _this.game.loadLevel(_this.tempLevel);\r\n\t                _this.sceneHandler.started = true;\r\n\t            }\r\n\t            else {\r\n\t                _this.assetLoader.getLevel(_this.currentLevel.toString()).subscribe(function (it) {\r\n\t                    _this.game.loadLevel(it);\r\n\t                    _this.sceneHandler.started = true;\r\n\t                });\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    return RestartMenu;\r\n\t}(menu_1.Menu));\r\n\texports.RestartMenu = RestartMenu;\r\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// app.15ad03206fd586b79ae8.js","import { Loader } from './app/game/loader';\r\n\r\n(() => {\r\n  new Loader().initialize();\r\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { AssetsLoader } from './service/assetsLoader';\r\nimport { Observable } from 'rxjs';\r\nimport { Asset, Level, Vector } from './model';\r\nimport { Game } from './game';\r\nimport { LoadHelper } from './service/loadHelper';\r\nimport { Swordman } from './character/swordman';\r\nimport { Enemy } from './character/enemy';\r\nimport { LevelData, TileAsset } from './map/model';\r\n\r\nexport class Loader {\r\n    private loadHelper = LoadHelper.getInstance();\r\n    private asset: Asset = new Asset();\r\n    private assetsLoader = new AssetsLoader();\r\n    private level: LevelData;\r\n    private game: Game;\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    private importLink: HTMLElement;\r\n\r\n    constructor() {\r\n\r\n        Observable.forkJoin(\r\n            this.assetsLoader.getShader(\"vertexShader.c\"),\r\n            this.assetsLoader.getShader(\"fragmentShader.c\"),\r\n            this.assetsLoader.getShader(\"simpleParticleVertexShader.c\"),\r\n            this.assetsLoader.getShader(\"simpleParticleFragmentShader.c\"),\r\n            this.assetsLoader.getShader(\"dynamicVertexShader.c\"),\r\n            this.assetsLoader.getShader(\"dynamicFragmentShader.c\"),\r\n            this.assetsLoader.getShader(\"colorVertexShader.c\"),\r\n            this.assetsLoader.getShader(\"colorFragmentShader.c\"),\r\n            this.assetsLoader.getTexture(\"tiles.png\"),\r\n            this.assetsLoader.getTexture(\"particleSprites.png\"),\r\n            this.assetsLoader.getTexture(\"genericParticle.png\"),\r\n            this.assetsLoader.getTileTextures(\"tile\"),\r\n            this.assetsLoader.getUiTextures(\"ui\"),\r\n            this.assetsLoader.getLevel(\"0\")\r\n        ).subscribe(data => {\r\n            this.asset.vertexShader = data[0] as string;\r\n            this.asset.fragmentShader = data[1] as string;\r\n            this.asset.simpleParticleVertexShader = data[2] as string;\r\n            this.asset.simpleParticleFragmentShader = data[3] as string;\r\n            this.asset.dynamicVertexShader = data[4] as string;\r\n            this.asset.dynamicFragmentShader = data[5] as string;\r\n            this.asset.colorVertexShader = data[6] as string;\r\n            this.asset.colorFragmentShader = data[7] as string;\r\n\r\n            this.asset.texture = data[8] as HTMLImageElement;\r\n            this.asset.particleTexture = data[9] as HTMLImageElement;\r\n            this.asset.genericParticleTexture = data[10] as HTMLImageElement;\r\n            this.asset.tileAssets = data[11];\r\n            this.asset.tileAssets = this.addToTileAssets(this.asset.tileAssets, data[12]);\r\n            this.level = data[13] as LevelData;\r\n\r\n            this.canvas = document.getElementById(\"gameCanvas\") as HTMLCanvasElement;\r\n\r\n            this.game = new Game(this.asset, this.canvas, this.level);\r\n        });\r\n    }\r\n\r\n    private addToTileAssets(tileAssets: Map<number, TileAsset>, newTileAssets: Map<number, TileAsset>) {\r\n        newTileAssets.forEach((value: TileAsset, key: number) => {\r\n            tileAssets.set(key, value);\r\n        });\r\n\r\n        return tileAssets;\r\n    }\r\n\r\n    public initialize() {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/loader.ts","import { Observable, Observer } from 'rxjs';\r\nimport { LoadHelper } from './loadHelper';\r\nimport { Constants } from './constants';\r\nimport { TextureResource, TileAsset } from '../map/model/';\r\n\r\nexport class AssetsLoader {\r\n  private shaderUrl = 'src/assets/shader/';\r\n  private textureUrl = \"src/assets/texture/\";\r\n  private levelUrl = \"src/assets/maps/\";\r\n  private constants = Constants.getInstance();\r\n\r\n\r\n  constructor() { }\r\n\r\n  public getShader(fileName: string) {\r\n    return this.httpGet(this.shaderUrl + fileName)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getTexture(fileName: string) {\r\n    return Observable.create((observer: Observer<any>) => {\r\n      var texture = new Image();\r\n      texture.src = this.textureUrl + fileName;\r\n      texture.onload = function () {\r\n        observer.next(texture);\r\n        observer.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getLevel(level: string) {\r\n    return this.httpGet(this.levelUrl + level + \".json\")\r\n      .map(this.extractLevel)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private httpGet(url: string): Observable<string> {\r\n    return Observable.create((observer: Observer<string>) => {\r\n      let xmlHttp = new XMLHttpRequest();\r\n      xmlHttp.onreadystatechange = () => {\r\n        if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {\r\n          observer.next(xmlHttp.responseText);\r\n          observer.complete();\r\n        };\r\n      };\r\n\r\n      xmlHttp.onerror = () => {\r\n        observer.error(xmlHttp.responseText);\r\n      };\r\n\r\n      xmlHttp.open(\"GET\", url, true);\r\n      xmlHttp.send(null);\r\n    });\r\n  }\r\n\r\n  public getTileTextures(name: string): Observable<Map<number, TileAsset>> {\r\n    return this.getTextures(name, this.constants.tileResources);\r\n  }\r\n\r\n  public getUiTextures(name: string) {\r\n    return this.getTextures(name, this.constants.uiResources);\r\n  }\r\n\r\n  private getTextures(name: string, textureResources: TextureResource[]) {\r\n    return Observable.create((obs: Observer<Map<number, TileAsset>>) => {\r\n      let textures = new Map<number, TileAsset>();\r\n      let count = 0;\r\n      for (let textureResource of textureResources) {\r\n        let texture = new Image();\r\n        texture.src = this.textureUrl + textureResource.name;\r\n        texture.onload = () => {\r\n          count++;\r\n          let key = +textureResource.name.split(name)[0];\r\n          textures.set(key, new TileAsset(key, texture, textureResource.size));\r\n\r\n          if (count >= textureResources.length) {\r\n            obs.next(textures);\r\n            obs.complete();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private extractLevel(responseText: string) {\r\n    let loadHelper = LoadHelper.getInstance();\r\n    let body = JSON.parse(responseText);\r\n\r\n    try {\r\n      let valid = loadHelper.validateLevelData(body)\r\n    } catch (e) {\r\n      console.log(\"Invalid level: \" + e);\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    let errMsg: string;\r\n    errMsg = error.message ? error.message : error.toString();\r\n    console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/service/assetsLoader.ts","import { LevelData } from '../map/model';\r\nimport { Level, Tile, DynamicTile, Rectangle, Vector } from '../model';\r\nimport { Enemy, Swordman, Archer, Shadow, Apprentice, Screamer, MasterSorcerer, IEnemy } from '../character';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\nimport { ShapeShifter } from \"../character/shapeshifter\";\r\n\r\nexport class LoadHelper {\r\n\r\n\tprivate static instance: LoadHelper = new LoadHelper();\r\n\r\n\tconstrcuctor() {\r\n\t\tif (LoadHelper.instance) {\r\n\t\t\tthrow new Error(\"Static class cant be instanced!\");\r\n\t\t}\r\n\r\n\t\tLoadHelper.instance = this;\r\n\t}\r\n\r\n\tpublic static getInstance() {\r\n\t\treturn LoadHelper.instance;\r\n\t}\r\n\r\n\tpublic levelDataToLevel(levelData: LevelData, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler, particleHandler: ParticleHandler) {\r\n\r\n\t\tlet level = new Level();\r\n\r\n\t\tlevel.name = levelData.name;\r\n\t\tlevel.end = new Rectangle(levelData.end[0], levelData.end[1], 256, 128);\r\n\t\tlevel.player = [levelData.player[0], levelData.player[1]];\r\n\t\tlevel.gameSize = [levelData.gameSize[0], levelData.gameSize[1]];\r\n\t\tlevel.camera = [levelData.camera[0], levelData.camera[1]];\r\n\r\n\r\n\t\tlevel.tiles = levelData.tiles.map(it => { return new Tile(it.area.x, it.area.y, it.area.width, it.area.height, it.key) });\r\n\t\tlevel.decorativeTiles = levelData.decorativeTiles.map(it => { return new Tile(it.area.x, it.area.y, it.area.width, it.area.height, it.key) });\r\n\t\r\n\t\tif(levelData.background) {\r\n\t\t\tlet background = levelData.background;\r\n\t\t\tlevel.decorativeTiles.unshift(new Tile(background.area.x, background.area.y, background.area.width, background.area.height, background.key));\r\n\t\t}\r\n\r\n\t\tlevel.dynamicTiles =  levelData.dynamicTiles.map(it => {\r\n\r\n\t\t\tlet velocity: Vector;\r\n\t\t\tif (it.vertical) {\r\n\t\t\t\tif (it.inverse) {\r\n\t\t\t\t\tvelocity = new Vector(0, -it.velocity);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvelocity = new Vector(0, it.velocity);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (it.inverse) {\r\n\t\t\t\t\tvelocity = new Vector(-it.velocity, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvelocity = new Vector(it.velocity, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new DynamicTile(new Tile(it.tile.x, it.tile.y, it.tile.width, it.tile.height, it.key), velocity, it.vertical, it.distance)\r\n\t\t});\r\n\r\n\t\tlevel.dynamicTiles.sort((a: DynamicTile, b: DynamicTile) => {\r\n\t\t\treturn a.tile.key - b.tile.key;\r\n\t\t});\r\n\r\n\t\tlevel.enemies = levelData.enemies.map(it => {\r\n\t\t\tlet enemy: IEnemy;\r\n\t\t\t\r\n\t\t\tif(it.key == 50) {\r\n\t\t\t\tenemy = new Swordman(new Vector(it.area.x, it.area.y), it.area.width, it.area.height, projectileHandler, animationHandler);\r\n\t\t\t} else if(it.key == 51) {\r\n\t\t\t\tenemy = new Archer(new Vector(it.area.x, it.area.y), it.area.width, it.area.height, projectileHandler, animationHandler);\r\n\t\t\t} else if(it.key == 52) {\r\n\t\t\t\tenemy = new Shadow(new Vector(it.area.x, it.area.y), 85, 85, projectileHandler, animationHandler);\r\n\t\t\t} else if (it.key == 53) {\r\n\t\t\t\tenemy = new MasterSorcerer(new Vector(it.area.x, it.area.y), 128, 96, projectileHandler, animationHandler, particleHandler);\r\n\t\t\t} else if(it.key == 54) { \r\n\t\t\t\tenemy = new Apprentice(new Vector(it.area.x, it.area.y), it.area.width, it.area.height, projectileHandler, animationHandler, particleHandler);\r\n\t\t\t} else if(it.key == 55){\r\n\t\t\t\tenemy = new Screamer(new Vector(it.area.x, it.area.y), 64, 96, projectileHandler, animationHandler, particleHandler);\r\n\t\t\t} else if(it.key == 56){\r\n\t\t\t\tenemy = new ShapeShifter(new Vector(it.area.x, it.area.y), 96, 96, projectileHandler, animationHandler, particleHandler);\r\n\t\t\t} \r\n\r\n\t\t\treturn enemy;\r\n\t\t});\r\n\r\n\t\treturn level;\r\n\r\n\t}\r\n\r\n\tpublic validateLevelData(levelData: LevelData) {\r\n\r\n\t\tlet valid = (this.checkDoubleNumberTouple(levelData, \"camera\")\r\n\t\t\t&& this.checkPropertyExists(levelData, \"dynamicTiles\")\r\n\t\t\t&& this.checkPropertyExists(levelData, \"enemies\")\r\n\t\t\t&& this.checkPropertyExists(levelData, \"tiles\")\r\n\t\t\t&& this.checkPropertyExists(levelData, \"decorativeTiles\")\r\n\t\t\t&& this.checkPropertyExists(levelData, \"background\")\r\n\t\t\t&& this.checkDoubleNumberTouple(levelData, \"player\")\r\n\t\t\t&& this.checkDoubleNumberTouple(levelData, \"gameSize\")\r\n\t\t\t&& this.checkDoubleNumberTouple(levelData, \"end\"));\r\n\t\treturn valid;\r\n\t}\r\n\r\n\tprivate checkDoubleNumberTouple(levelData: LevelData, property: string) {\r\n\t\tlet value = (this.checkPropertyExists(levelData, property) && levelData[property].length == 2 && this.isNumber(levelData[property][0]) && this.isNumber(levelData[property][1]));\r\n\t\treturn value;\r\n\t}\r\n\r\n\tprivate isNumber(number: string) {\r\n\t\treturn (!isNaN(+number));\r\n\t}\r\n\r\n\tprivate checkPropertyExists(levelData: LevelData, property: string) {\r\n\t\tlet value = (levelData[property] !== undefined)\r\n\t\treturn value;\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/service/loadHelper.ts","import { ShaderType } from './shaderType';\r\nimport { Tile } from './tile'\r\nimport { Vector } from './vector';\r\nimport { Rectangle } from './rectangle';\r\nimport { Sprite } from './sprite';\r\nimport { Level } from './level';\r\nimport { Asset } from './assets';\r\nimport { Projectile } from './animation/projectile';\r\nimport { Animation } from './animation/animation';\r\nimport { FrameAnimation } from './animation/frameAnimation';\r\nimport { SpellType } from './enum/spellType';\r\nimport { Spell } from './animation/spell';\r\nimport { PhysicalProjectile } from './animation/physicalProjectile';\r\nimport { Meele } from './animation/meele';\r\nimport { DebugElement } from './debug';\r\nimport { TextureType } from './enum/textureType';\r\nimport { StickyAnimation } from './animation/stickyAnimation';\r\nimport { RotationAnimation } from './animation/rotationAnimation';\r\nimport { StaticRotationAnimation } from './animation/staticRotationAnimation';\r\nimport { CollisionProjectile } from './animation/collisionProjectile';\r\nimport { ProjectileType } from './animation/projectileType';\r\nimport { Cast } from './casts/cast';\r\nimport { InstantCast } from './casts/instantCast';\r\nimport { ChannelCast } from './casts/channelCast';\r\nimport { SpellCast } from './casts/spellCast';\r\nimport { ParticleProjectile } from './animation/particleProjectile';\r\nimport { DynamicTile } from './dynamicTile';\r\nimport { DynamicTileData } from './dynamicTileData';\r\nimport { RenderableData } from './renderable-data';\r\nimport { Progress } from './progress';\r\n\r\nexport {\r\n    ShaderType,\r\n    Tile,\r\n    Vector,\r\n    Rectangle,\r\n    Sprite,\r\n    Level,\r\n    Asset,\r\n    Projectile,\r\n    Animation,\r\n    SpellType,\r\n    Spell,\r\n    PhysicalProjectile,\r\n    Meele,\r\n    DebugElement,\r\n    TextureType,\r\n    FrameAnimation,\r\n    StickyAnimation,\r\n    RotationAnimation,\r\n    CollisionProjectile,\r\n    ProjectileType,\r\n    Cast,\r\n    InstantCast,\r\n    ChannelCast,\r\n    SpellCast,\r\n    ParticleProjectile,\r\n    StaticRotationAnimation,\r\n    DynamicTile,\r\n    DynamicTileData,\r\n    RenderableData,\r\n    Progress\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/index.ts","export enum ShaderType\r\n{\r\n\tVertex = 1,\r\n    Fragment = 2\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/shaderType.ts","export class Tile\r\n{\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic width: number;\r\n\tpublic height: number;\r\n\tpublic key: number;\r\n\r\n\tconstructor(x: number, y: number, width: number, height: number, key: number){\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.key = key;\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/tile.ts","export class Vector {\r\n\r\n\tpublic x:number;\r\n\tpublic y: number;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tpublic add(vector: Vector) {\r\n\t\tif(vector) {\r\n\t\t\tthis.x += vector.x;\r\n\t\t\tthis.y += vector.y;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic copy(vector: Vector) {\r\n\t\treturn new Vector(vector.x, vector.y);\r\n\t}\r\n\r\n\tpublic normalize() {\r\n\t\tlet mag = this.magnitude();\r\n\t\tthis.x = this.x/mag;\r\n\t\tthis.y = this.y/mag;\r\n\t}\r\n\r\n\tpublic magnitude() {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tpublic multiply(factor: number) {\r\n\t\tthis.x = this.x * factor;\r\n\t\tthis.y = this.y * factor;\r\n\t}\r\n\r\n\tpublic invert() {\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\r\n\t\treturn this;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/vector.ts","export class Rectangle {\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic width: number;\r\n\tpublic height: number;\r\n\r\n\tconstructor(x:number, y:number, width: number, height: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/rectangle.ts","import { Rectangle, Vector } from './'\r\n\r\nexport class Sprite {\r\n\tpublic position: Rectangle;\r\n\tpublic size: Vector;\r\n\r\n\tconstructor(position: Rectangle) {\r\n\t\tthis.position = position;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/sprite.ts","import { Tile, Vector, Rectangle, DynamicTile } from './'\r\nimport { Enemy } from '../character/enemy';\r\nimport { IEnemy } from \"../character/index\";\r\n\r\nexport class Level {\r\n\tpublic name: string;\r\n    public tiles: Tile[] = [];\r\n\tpublic decorativeTiles: Tile[] = [];\r\n\tpublic dynamicTiles: DynamicTile[] = [];\r\n\tpublic enemies: IEnemy[] = [];\r\n\tpublic player: [number, number];\r\n\tpublic gameSize: [number, number];\r\n\tpublic camera: [number, number];\r\n\tpublic end: Rectangle;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/level.ts","import { TileAsset } from '../map/model';\r\n\r\nexport class Asset {\r\n\tpublic vertexShader: string;\r\n\tpublic fragmentShader: string;\r\n\tpublic simpleParticleVertexShader: string;\r\n\tpublic simpleParticleFragmentShader: string;\r\n\tpublic dynamicVertexShader: string;\r\n\tpublic dynamicFragmentShader: string;\r\n\tpublic colorVertexShader: string;\r\n\tpublic colorFragmentShader: string;\r\n\tpublic texture: HTMLImageElement;\r\n\tpublic particleTexture: HTMLImageElement;\r\n\tpublic genericParticleTexture: HTMLImageElement;\r\n\tpublic tileAssets: Map<number, TileAsset>;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/assets.ts","import { Vector, Rectangle, Animation, SpellType, ProjectileType } from '../';\r\n\r\nexport abstract class Projectile {\r\n    public velocity: Vector;\r\n    public area: Rectangle;\r\n    public collisionArea: Rectangle;\r\n    public animation: Animation;\r\n    public projectileType: ProjectileType = ProjectileType.None;\r\n    public damage: number = 0;\r\n\r\n    constructor(velocity: Vector, area: Rectangle, animation: Animation, collisionRatio: number, collisionArea?: Rectangle) {\r\n        this.velocity = velocity;\r\n        this.area = area;\r\n        this.animation = animation;\r\n        if(collisionArea) {\r\n            this.collisionArea = collisionArea;\r\n        } else {\r\n            this.collisionArea = new Rectangle(this.area.x + (this.area.width/2) - ((this.area.width * collisionRatio)/2), this.area.y + (this.area.height/2) - ((this.area.height * collisionRatio)/2), this.area.width * collisionRatio, this.area.height * collisionRatio);\r\n        }\r\n    }\r\n\r\n    public update(travelDistanceX: number, travelDistanceY: number, delta: number) {\r\n\r\n        this.area.x += travelDistanceX;\r\n        this.area.y += travelDistanceY;\r\n\r\n        this.collisionArea.x += travelDistanceX;\r\n        this.collisionArea.y += travelDistanceY;\r\n\r\n        this.animation.areaToRender.x = this.area.x;\r\n        this.animation.areaToRender.y = this.area.y;\r\n    }\r\n\r\n    public updateForces(delta: number) {\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/projectile.ts","import { Rectangle } from '../';\r\nimport { RenderHelper } from '../../render';\r\n\r\nexport class Animation {\r\n\r\n\tpublic timeToChange: number = 100;\r\n\tpublic areaToRender: Rectangle;\r\n\tpublic repetitions: number;\r\n\tpublic inverse = false;\r\n\tpublic delay = 0;\r\n\tpublic frameIndex: number = 0;\r\n\tpublic color: number[];\r\n\tpublic onCompletion: () => void;\r\n\tpublic lastChange: number = 0;\r\n\tpublic textureCoords: number[][] = [];\r\n\r\n\tconstructor(textureNumbers: number[]) {\r\n\t\tfor (let textureNumber of textureNumbers) {\r\n\t\t\tthis.textureCoords.push(RenderHelper.getInstance().getTextureCoordinates([], textureNumber));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic next(delta: number) {\r\n\r\n\t\tthis.lastChange += delta;\r\n\r\n\t\tif (this.lastChange >= this.timeToChange) {\r\n\t\t\tthis.lastChange = 0;\r\n\t\t\tif (this.delay > 0) {\r\n\t\t\t\tthis.delay--;\r\n\t\t\t}\r\n\t\t\tthis.frameIndex++;\r\n\t\t\tif (this.repetitions) {\r\n\t\t\t\tthis.repetitions--;\r\n\t\t\t}\r\n\t\t\tif (this.frameIndex >= this.textureCoords.length) {\r\n\t\t\t\tthis.frameIndex = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getCurrentFrame() {\r\n\t\treturn this.textureCoords[this.frameIndex];\r\n\t}\r\n\r\n\tpublic reset() {\r\n\t\tthis.frameIndex = 0;\r\n\t\tthis.lastChange = 0;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/animation.ts","import { Renderer } from './renderer';\r\nimport { RenderCall } from './renderCall';\r\nimport { ColorRenderCall } from './colorRenderCall';\r\nimport { ColorRenderer } from './colorRenderer';\r\nimport { RenderHelper } from './renderHelper';\r\nimport { DynamicRenderCall } from './dynamicRenderCall';\r\nimport { TextureMapper } from './textureMapper';\r\nimport { ParticleRenderer } from './particleRenderer';\r\nimport { Matrix3 } from './matrix3';\r\n\r\nexport { Renderer, RenderCall, RenderHelper, TextureMapper, ParticleRenderer, Matrix3, DynamicRenderCall, ColorRenderCall, ColorRenderer };\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/index.ts","import { Context } from '../context';\r\nimport { RenderCall } from './renderCall';\r\nimport { TextureType, Vector } from '../model';\r\nimport { Matrix3 } from './matrix3';\r\n\r\nexport class Renderer {\r\n\r\n\tprivate context: Context;\r\n\tprivate gl: WebGLRenderingContext;\r\n\tprivate shaderProgram: WebGLShader;\r\n\r\n\tprivate vertexBuffer: WebGLBuffer;\r\n\tprivate textureCoordBuffer: WebGLBuffer;\r\n\tprivate indeciesBuffer: WebGLBuffer;\r\n\r\n\tprivate positionLocation: number;\r\n\tprivate textureCoordAttribute: number;\r\n\tprivate resolutionLocation: WebGLUniformLocation;\r\n\tprivate cameraLocation: WebGLUniformLocation;\r\n\r\n\tprivate projectionMatrix: number[];\r\n\r\n\tprivate resolution: Vector;\r\n\r\n\tconstructor(context: Context) {\r\n\t\tthis.context = context;\r\n\t\tthis.gl = this.context.gl;\r\n\t\tthis.shaderProgram = this.context.shaderProgram;\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 1, \"a_texture_coord\");\r\n\r\n\t\tthis.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t\tthis.textureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_texture_coord\");\r\n\r\n\t\tthis.resolutionLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_resolution\");\r\n\t\tthis.cameraLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_camera\");\r\n\r\n\t\tthis.resolution = new Vector(this.context.gl.canvas.width, this.context.gl.canvas.height);\r\n\r\n\t\tthis.vertexBuffer = this.gl.createBuffer();\r\n\t\tthis.textureCoordBuffer = this.gl.createBuffer();\r\n\t\tthis.indeciesBuffer = this.gl.createBuffer();\r\n\t}\r\n\r\n\tpublic render(renderCalls: Map<number, RenderCall>, camera: [number, number]) {\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\trenderCalls.forEach((renderCall: RenderCall, key: number) => {\r\n\t\t\tthis.gl.enableVertexAttribArray(this.positionLocation);\r\n\t\t\tthis.gl.enableVertexAttribArray(this.textureCoordAttribute);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.textureCoords), this.gl.STATIC_DRAW);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(renderCall.indecies), this.gl.STATIC_DRAW);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t\t\tthis.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t\t\tthis.gl.vertexAttribPointer(this.textureCoordAttribute, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\tthis.gl.uniform2f(this.resolutionLocation, this.resolution.x, this.resolution.y);\r\n\t\t\tthis.gl.uniform2f(this.cameraLocation, camera[0], camera[1]);\r\n\r\n\t\t\tthis.gl.activeTexture(this.gl.TEXTURE0);\r\n\t\t\tif (key != -1) {\r\n\t\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.tileTextures.get(key));\r\n\t\t\t} else {\r\n\t\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.glTexture);\r\n\t\t\t}\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t\t\tthis.gl.drawElements(this.gl.TRIANGLES, renderCall.indecies.length, this.gl.UNSIGNED_SHORT, 0)\r\n\r\n\t\t\tthis.gl.disableVertexAttribArray(this.positionLocation);\r\n\t\t\tthis.gl.disableVertexAttribArray(this.textureCoordAttribute);\r\n\t\t});\r\n\t}\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/renderer.ts","import { Context } from '../';\r\nimport { TextureType } from '../model';\r\n\r\nexport class RenderCall {\r\n\tpublic vertecies: number[];\r\n\tpublic textureCoords: number[];\r\n\tpublic indecies: number[];\r\n\tpublic key: number;\r\n\r\n\tconstructor() {\r\n\t\tthis.vertecies = [];\r\n\t\tthis.indecies = [];\r\n\t\tthis.textureCoords = [];\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/renderCall.ts","import { Context } from '../';\r\nimport { TextureType } from '../model';\r\n\r\nexport class ColorRenderCall {\r\n\tpublic vertecies: number[];\r\n\tpublic textureCoords: number[];\r\n\tpublic indecies: number[];\r\n\tpublic color: number[];\r\n\r\n\tconstructor() {\r\n\t\tthis.vertecies = [];\r\n\t\tthis.indecies = [];\r\n\t\tthis.textureCoords = [];\r\n\t\tthis.color = [];\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/colorRenderCall.ts","import { Context } from '../context';\r\nimport { ColorRenderCall } from './';\r\nimport { TextureType, Vector } from '../model';\r\n\r\nexport class ColorRenderer {\r\n\r\n\tprivate context: Context;\r\n\tprivate gl: WebGLRenderingContext;\r\n\tprivate shaderProgram: WebGLShader;\r\n\r\n\tprivate vertexBuffer: WebGLBuffer;\r\n\tprivate textureCoordBuffer: WebGLBuffer;\r\n\tprivate indeciesBuffer: WebGLBuffer;\r\n\tprivate colorBuffer: WebGLBuffer;\r\n\r\n\tprivate colorAttributeLocation: number;\r\n\tprivate positionLocation: number;\r\n\tprivate textureCoordAttribute: number;\r\n\tprivate resolutionLocation : WebGLUniformLocation;\r\n\tprivate cameraLocation: WebGLUniformLocation;\r\n\r\n\tprivate projectionMatrix: number[];\r\n\r\n\tprivate resolution: Vector;\r\n\r\n\tconstructor(context: Context) {\r\n\t\tthis.context = context;\r\n\t\tthis.gl = this.context.gl;\r\n\t\tthis.shaderProgram = this.context.colorShaderProgram;\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 1, \"a_color\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 2, \"a_texture_coord\");\r\n\r\n\t\tthis.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t\tthis.colorAttributeLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_color\");\r\n\t\tthis.textureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_texture_coord\");\r\n\t\t\r\n\t\tthis.resolutionLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_resolution\");\r\n\t\tthis.cameraLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_camera\");\r\n\r\n\t\tthis.resolution = new Vector(this.context.gl.canvas.width, this.context.gl.canvas.height);\r\n\r\n\t\tthis.colorBuffer = this.gl.createBuffer();\r\n\t\tthis.vertexBuffer = this.gl.createBuffer();\r\n\t\tthis.textureCoordBuffer = this.gl.createBuffer();\r\n\t\tthis.indeciesBuffer = this.gl.createBuffer();\r\n\t}\r\n\r\n\tpublic render(renderCalls: ColorRenderCall[], camera: [number, number]) {\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\t\tfor(let renderCall of renderCalls) {\r\n\t\t\t\r\n\t\t\tthis.gl.enableVertexAttribArray(this.positionLocation);\r\n\t\t\tthis.gl.enableVertexAttribArray(this.textureCoordAttribute);\r\n\t\t\tthis.gl.enableVertexAttribArray(this.colorAttributeLocation);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.textureCoords), this.gl.STATIC_DRAW);\r\n\t\t\t\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.color), this.gl.STATIC_DRAW);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t\t\tthis.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(renderCall.indecies), this.gl.STATIC_DRAW);\r\n\t\t\t\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t\t\tthis.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n\t\t\tthis.gl.vertexAttribPointer(this.textureCoordAttribute, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.colorBuffer);\r\n\t\t\tthis.gl.vertexAttribPointer(this.colorAttributeLocation, 4, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\tthis.gl.uniform2f(this.resolutionLocation, this.resolution.x, this.resolution.y);\r\n\t\t\tthis.gl.uniform2f(this.cameraLocation, camera[0], camera[1]);\r\n\r\n\t\t\tthis.gl.activeTexture(this.gl.TEXTURE0);\r\n\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.glTexture);\r\n\t\t\t\r\n\t\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n\t\t\tthis.gl.drawElements(this.gl.TRIANGLES, renderCall.indecies.length, this.gl.UNSIGNED_SHORT, 0)\r\n\r\n\t\t\tthis.gl.disableVertexAttribArray(this.positionLocation);\r\n\t\t\tthis.gl.disableVertexAttribArray(this.textureCoordAttribute);\r\n\t\t\tthis.gl.disableVertexAttribArray(this.colorAttributeLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/colorRenderer.ts","import { TextureMapper } from './textureMapper';\r\nimport { Vector, Rectangle, Tile } from '../model';\r\nimport { Matrix3 } from './matrix3';\r\n\r\nexport class RenderHelper {\r\n\r\n\tprivate static instance: RenderHelper = new RenderHelper();\r\n\tprivate textureMapper = TextureMapper.getInstance();\r\n\tprivate static textureSize = 2048;\r\n\tprivate canvasWidth = 1200;\r\n\tprivate canvasHeight = 800;\r\n\tprivate projectionMatrix = Matrix3.createProjectionMatrix(this.canvasWidth, this.canvasHeight);\r\n\r\n\tconstrcuctor() {\r\n\t\tif (RenderHelper.instance) {\r\n\t\t\tthrow new Error(\"Static class cant be instanced!\");\r\n\t\t}\r\n\r\n\t\tRenderHelper.instance = this;\r\n\t}\r\n\r\n\tpublic static getInstance() {\r\n\t\treturn RenderHelper.instance;\r\n\t}\r\n\r\n\tpublic getRelativeValue(x: number, y: number) {\r\n\r\n\t\tlet relativePosition = new Vector(0, 0);\r\n\t\trelativePosition.x = x / (this.canvasWidth / 2) - 1;\r\n\t\trelativePosition.y = -y / (this.canvasHeight / 2) + 1;\r\n\r\n\t\treturn relativePosition;\r\n\t}\r\n\r\n\tpublic getVertecies(x: number, y: number, width: number, height: number, currentVertecies: number[]) {\r\n\t\tvar x1 = x;\r\n\t\tvar x2 = x + width;\r\n\t\tvar y1 = y;\r\n\t\tvar y2 = y + height;\r\n\r\n\t\tvar newVertecies = [\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx2, y1,\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx1, y2\r\n\t\t]\r\n\r\n\t\tcurrentVertecies.push.apply(currentVertecies, newVertecies);\r\n\r\n\t\treturn currentVertecies;\r\n\t}\r\n\r\n\tpublic getInverseVertecies(x: number, y: number, width: number, height: number, currentVertecies: number[]) {\r\n\r\n\t\tlet x1 = x + width;\r\n\t\tlet x2 = x;\r\n\t\tlet y1 = y;\r\n\t\tlet y2 = y + height;\r\n\r\n\t\tlet newVertecies = [\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx2, y1,\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx1, y2\r\n\t\t]\r\n\r\n\t\tcurrentVertecies.push.apply(currentVertecies, newVertecies);\r\n\r\n\t\treturn currentVertecies;\r\n\t}\r\n\r\n\tpublic getColor(currentColors: number[], color?: number[]) {\r\n\r\n\t\tlet col: number[] = [];\r\n\r\n\t\tif (color) {\r\n\t\t\tcol = color;\r\n\t\t} else {\r\n\t\t\tcol = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n\t\t}\r\n\r\n\t\tcurrentColors.push.apply(currentColors, col);\r\n\r\n\t\treturn currentColors;\r\n\t}\r\n\r\n\tpublic getMatrices(x: number, y: number, width: number, height: number, angle: number, currentMatrices: number[]) {\r\n\r\n\t\tlet rotationPointX = x + width / 2;\r\n\t\tlet rotationPointY = y + height / 2;\r\n\r\n\t\tlet moveToRotationPointMatrix = Matrix3.createTranslationMatrix(-rotationPointX, -rotationPointY);\r\n\t\tlet rotationMatrix = Matrix3.createRotationMatrix(angle);\r\n\t\tlet moveBackMatrix = Matrix3.createTranslationMatrix(rotationPointX, rotationPointY);\r\n\r\n\t\tlet matrix = Matrix3.multiply(moveToRotationPointMatrix, rotationMatrix);\r\n\t\tmatrix = Matrix3.multiply(matrix, moveBackMatrix);\r\n\t\tmatrix = Matrix3.multiply(matrix, this.projectionMatrix);\r\n\r\n\t\tmatrix = this.getIndeciesAttribute(matrix);\r\n\r\n\t\tcurrentMatrices.push.apply(currentMatrices, matrix);\r\n\r\n\t\treturn currentMatrices;\r\n\t}\r\n\r\n\tpublic getIndeciesAttribute(attribute: number[]) {\r\n\r\n\t\tlet copy = attribute.slice(0, attribute.length);\r\n\r\n\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\tattribute.push(...copy);\r\n\t\t}\r\n\r\n\t\treturn attribute;\r\n\t}\r\n\r\n\tpublic getIndecies(currentIndecies: number[]) {\r\n\r\n\t\tvar vertexIndices = [\r\n\t\t\tcurrentIndecies.length, currentIndecies.length + 1, currentIndecies.length + 2, currentIndecies.length + 3, currentIndecies.length + 4, currentIndecies.length + 5\r\n\t\t];\r\n\r\n\t\tcurrentIndecies.push.apply(currentIndecies, vertexIndices);\r\n\r\n\t\treturn currentIndecies;\r\n\t}\r\n\r\n\tpublic addTextureCoordinates(currentTextureCoordinates: number[], textureCoords: number[]) {\r\n\t\tcurrentTextureCoordinates.push.apply(currentTextureCoordinates, textureCoords);\r\n\r\n\t\treturn currentTextureCoordinates;\r\n\t}\r\n\r\n\tpublic getTextureCoordinates(currentTextureCoordinates: number[], textureType: number) {\r\n\r\n\t\tvar rect = this.textureMapper.mapTexture(textureType);\r\n\r\n\t\tlet textureCoordinates = this.getCoords(rect, RenderHelper.textureSize);\r\n\r\n\t\tcurrentTextureCoordinates.push.apply(currentTextureCoordinates, textureCoordinates);\r\n\r\n\t\treturn currentTextureCoordinates;\r\n\t}\r\n\r\n\tpublic getTiledTextureCoordinates(tile: Rectangle, currentTextureCoordinates: number[], size: [number, number]) {\r\n\r\n\t\tlet x1 = 0;\r\n\t\tlet x2 = tile.width / size[0];\r\n\t\tlet y1 = 0;\r\n\t\tlet y2 = tile.height / size[1];\r\n\r\n\t\tlet textureCoordinates = [\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx2, y1,\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx1, y2\r\n\t\t];\r\n\r\n\t\tcurrentTextureCoordinates.push.apply(currentTextureCoordinates, textureCoordinates);\r\n\r\n\t\treturn currentTextureCoordinates;\r\n\t}\r\n\r\n\tpublic getMainTextureCoords(rect: Rectangle) {\r\n\t\treturn this.getCoords(rect, RenderHelper.textureSize);\r\n\t}\r\n\r\n\tprivate getCoords(rect: Rectangle, size: number) {\r\n\t\tlet x1 = rect.x / size;\r\n\t\tlet y1 = rect.y / size;\r\n\t\tlet x2 = (rect.x + rect.width) / size;\r\n\t\tlet y2 = (rect.y + rect.height) / size;\r\n\r\n\t\tvar textureCoordinates = [\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx2, y1,\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx1, y2\r\n\t\t];\r\n\r\n\t\treturn textureCoordinates;\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/renderHelper.ts","import { Vector, Rectangle } from '../model';\r\n\r\nexport class TextureMapper {\r\n\r\n\tprivate static instance: TextureMapper = new TextureMapper();\r\n\r\n\tprivate texture0 = new Rectangle(0, 0, 0, 0);\r\n\tprivate texture1 = new Rectangle(0, 0, 51.2, 51.2);\r\n\tprivate texture2 = new Rectangle(51.2, 0, 51.2, 51.2);\r\n\tprivate texture3 = new Rectangle(102.4, 0, 51.2, 51.2);\r\n\tprivate texture4 = new Rectangle(153.6, 0, 51.2, 51.2);\r\n\tprivate texture5 = new Rectangle(204.8, 0, 51.2, 51.2);\r\n\tprivate texture6 = new Rectangle(0, 51.2, 51.2, 51.2);\r\n\tprivate texture7 = new Rectangle(51.2, 51.2, 51.2, 51.2);\r\n\tprivate texture8 = new Rectangle(102.4, 51.2, 51.2, 51.2);\r\n\tprivate texture9 = new Rectangle(153.6, 51.2, 51.2, 51.2);\r\n\tprivate texture10 = new Rectangle(204.8, 51.2, 51.2, 51.2);\r\n\tprivate texture11 = new Rectangle(0, 102.4, 51.2, 51.2);\r\n\tprivate texture12 = new Rectangle(51.2, 102.4, 51.2, 51.2);\r\n\tprivate texture13 = new Rectangle(102.4, 102.4, 51.2, 51.2);\r\n\tprivate texture14 = new Rectangle(153.6, 102.4, 51.2, 51.2);\r\n\tprivate texture15 = new Rectangle(204.8, 102.4, 51.2, 50);\r\n\tprivate texture16 = new Rectangle(0, 153.6, 51.2, 51.2);\r\n\tprivate texture17 = new Rectangle(51.2, 153.6, 51.2, 51.2);\r\n\tprivate texture18 = new Rectangle(102.4, 153.6, 51.2, 51.2);\r\n\tprivate texture19 = new Rectangle(153.6, 153.6, 50, 50);\r\n\tprivate texture20 = new Rectangle(204.8, 153.6, 51.2, 51.2);\r\n\tprivate texture21 = new Rectangle(0, 204.8, 51.2, 51.2);\r\n\tprivate texture22 = new Rectangle(51.2, 204.8, 51.2, 51.2);\r\n\tprivate texture23 = new Rectangle(102.4, 204.8, 50, 51.2);\r\n\tprivate texture24 = new Rectangle(153.6, 204.8, 51.2, 51.2);\r\n\tprivate texture25 = new Rectangle(234, 220, 20, 36);\r\n\tprivate texture26 = new Rectangle(128, 320, 86, 128);\r\n\r\n\tprivate texture50 = new Rectangle(0, 368, 128, 16);\r\n\tprivate texture51 = new Rectangle(32, 1280, 290, 32);\r\n\tprivate texture52 = new Rectangle(32, 1440, 64, 8);\r\n\tprivate texture53 = new Rectangle(33, 1448, 8, 8);\r\n\tprivate texture54 = new Rectangle(33, 1456, 8, 8);\r\n\r\n\tprivate texture55 = new Rectangle(384, 1024, 128, 128);\r\n\tprivate texture56 = new Rectangle(512, 1024, 128, 128);\r\n\tprivate texture57 = new Rectangle(640, 1024, 128, 128);\r\n\tprivate texture58 = new Rectangle(768, 1024, 128, 128);\r\n\tprivate texture59 = new Rectangle(896, 1024, 128, 128);\r\n\r\n\tprivate texture60 = new Rectangle(1760, 1248, 32, 64);\r\n\tprivate texture61 = new Rectangle(1792, 1248, 32, 64);\r\n\tprivate texture62 = new Rectangle(1824, 1248, 32, 64);\r\n\tprivate texture63 = new Rectangle(1856, 1248, 32, 64);\r\n\r\n\tprivate texture100 = new Rectangle(258, 2, 55, 50);\r\n\tprivate texture101 = new Rectangle(311, 2, 64, 55);\r\n\tprivate texture102 = new Rectangle(375, 2, 72, 64);\r\n\tprivate texture103 = new Rectangle(257, 64, 75, 64);\r\n\tprivate texture104 = new Rectangle(336, 64, 78, 72);\r\n\tprivate texture105 = new Rectangle(416, 64, 82, 75);\r\n\tprivate texture106 = new Rectangle(256, 192, 128, 128);\r\n\tprivate texture107 = new Rectangle(384, 192, 128, 128);\r\n\tprivate texture108 = new Rectangle(512, 192, 128, 128);\r\n\tprivate texture109 = new Rectangle(256, 320, 128, 128);\r\n\tprivate texture110 = new Rectangle(384, 320, 128, 128);\r\n\tprivate texture111 = new Rectangle(512, 320, 128, 128);\r\n\tprivate texture112 = new Rectangle(512, 0, 128, 128);\r\n\tprivate texture113 = new Rectangle(640, 0, 128, 128);\r\n\tprivate texture114 = new Rectangle(768, 0, 128, 128);\r\n\tprivate texture115 = new Rectangle(896, 0, 128, 128);\r\n\tprivate texture116 = new Rectangle(704, 128, 128, 128);\r\n\tprivate texture117 = new Rectangle(832, 128, 128, 128);\r\n\r\n\tprivate texture118 = new Rectangle(1870, 340, 85, 85);\r\n\tprivate texture119 = new Rectangle(1955, 340, 85, 85);\r\n\tprivate texture120 = new Rectangle(1700, 425, 85, 85);\r\n\tprivate texture121 = new Rectangle(1785, 425, 85, 85);\r\n\tprivate texture122 = new Rectangle(1870, 425, 85, 85);\r\n\tprivate texture123 = new Rectangle(1955, 425, 85, 85);\r\n\tprivate texture124 = new Rectangle(1700, 510, 85, 85);\r\n\tprivate texture125 = new Rectangle(1785, 510, 85, 85);\r\n\tprivate texture126 = new Rectangle(1870, 510, 85, 85);\r\n\tprivate texture127 = new Rectangle(1955, 510, 85, 85);\r\n\tprivate texture128 = new Rectangle(1700, 595, 85, 85);\r\n\tprivate texture129 = new Rectangle(1785, 595, 85, 85);\r\n\tprivate texture130 = new Rectangle(1870, 595, 85, 85);\r\n\tprivate texture131 = new Rectangle(1955, 595, 85, 85);\r\n\tprivate texture132 = new Rectangle(1700, 680, 85, 85);\r\n\tprivate texture133 = new Rectangle(1785, 680, 85, 85);\r\n\tprivate texture134 = new Rectangle(1870, 680, 85, 85);\r\n\tprivate texture135 = new Rectangle(1955, 680, 85, 85);\r\n\r\n\tprivate texture136 = new Rectangle(1700, 765, 85, 85);\r\n\tprivate texture137 = new Rectangle(1785, 765, 85, 85);\r\n\tprivate texture138 = new Rectangle(1870, 765, 85, 85);\r\n\r\n\tprivate texture139 = new Rectangle(1408, 448, 64, 64);\r\n\tprivate texture140 = new Rectangle(1472, 448, 64, 64);\r\n\tprivate texture141 = new Rectangle(1536, 448, 64, 64);\r\n\tprivate texture142 = new Rectangle(1600, 448, 64, 64);\r\n\tprivate texture143 = new Rectangle(1408, 512, 64, 64);\r\n\tprivate texture144 = new Rectangle(1472, 512, 64, 64);\r\n\tprivate texture145 = new Rectangle(1536, 512, 64, 64);\r\n\tprivate texture146 = new Rectangle(1600, 512, 64, 64);\r\n\t\r\n\t\r\n\r\n\tprivate texture147 = new Rectangle(0, 896, 128, 128);\r\n\tprivate texture148 = new Rectangle(128, 896, 128, 128);\r\n\tprivate texture149 = new Rectangle(256, 896, 128, 128);\r\n\tprivate texture150 = new Rectangle(0, 1024, 128, 128);\r\n\tprivate texture151 = new Rectangle(128, 1024, 128, 128);\r\n\tprivate texture152 = new Rectangle(256, 1024, 128, 128);\r\n\r\n\tprivate texture153 = new Rectangle(1408, 576, 64, 64);\r\n\tprivate texture154 = new Rectangle(1472, 576, 64, 64);\r\n\tprivate texture155 = new Rectangle(1536, 576, 64, 64);\r\n\r\n\tprivate texture156 = new Rectangle(32, 608, 32, 64);\r\n\tprivate texture157 = new Rectangle(96, 608, 32, 64);\r\n\tprivate texture158 = new Rectangle(160, 608, 32, 64);\r\n\tprivate texture159 = new Rectangle(224, 608, 32, 64);\r\n\r\n\r\n\tprivate texture160 = new Rectangle(1056, 1248, 32, 64);\r\n\tprivate texture161 = new Rectangle(1088, 1248, 32, 64);\r\n\r\n\tprivate texture162 = new Rectangle(992, 1248, 32, 64);\r\n\tprivate texture163 = new Rectangle(1024, 1248, 32, 64);\r\n\r\n\tprivate texture165 = new Rectangle(1152, 1248, 32, 64);\r\n\tprivate texture166 = new Rectangle(1184, 1248, 32, 64);\r\n\tprivate texture167 = new Rectangle(1216, 1248, 32, 64);\r\n\tprivate texture168 = new Rectangle(1280, 1248, 32, 64);\r\n\tprivate texture169 = new Rectangle(1312, 1248, 32, 64);\r\n\r\n\tprivate texture170 = new Rectangle(1344, 1248, 32, 64);\r\n\tprivate texture171 = new Rectangle(1376, 1248, 32, 64);\r\n\tprivate texture172 = new Rectangle(1408, 1248, 32, 64);\r\n\tprivate texture173 = new Rectangle(1472, 1248, 32, 64);\r\n\tprivate texture174 = new Rectangle(1504, 1248, 32, 64);\r\n\tprivate texture175 = new Rectangle(1536, 1248, 32, 64);\r\n\tprivate texture176 = new Rectangle(1568, 1248, 32, 64);\r\n\tprivate texture177 = new Rectangle(1600, 1248, 32, 64);\r\n\tprivate texture178 = new Rectangle(1632, 1248, 32, 64);\r\n\r\n\tprivate texture179 = new Rectangle(1248, 32, 164, 27);\r\n\tprivate texture180 = new Rectangle(1248, 96, 32, 32);\r\n\tprivate texture181 = new Rectangle(1248, 64, 164, 27);\r\n\tprivate texture182 = new Rectangle(1248, 0, 164, 27);\r\n\tprivate texture183 = new Rectangle(1440, 0, 164, 27);\r\n\tprivate texture184 = new Rectangle(1440, 32, 164, 27);\r\n\tprivate texture185 = new Rectangle(1440, 64, 164, 27);\r\n\tprivate texture186 = new Rectangle(1440, 96, 164, 27);\r\n\r\n\tprivate texture187 = new Rectangle(1088, 96, 128, 64);\r\n\r\n\tprivate texture188 = new Rectangle(1088, 192, 128, 64);\r\n\tprivate texture189 = new Rectangle(1088, 256, 128, 64);\r\n\tprivate texture190 = new Rectangle(1088, 320, 128, 64);\r\n\tprivate texture191 = new Rectangle(1088, 384, 128, 64);\r\n\tprivate texture192 = new Rectangle(1088, 448, 128, 64);\r\n\tprivate texture193 = new Rectangle(1088, 512, 128, 64);\r\n\tprivate texture194 = new Rectangle(1088, 576, 128, 64);\r\n\tprivate texture195 = new Rectangle(1088, 640, 128, 64);\r\n\tprivate texture196 = new Rectangle(1088, 704, 128, 64);\r\n\tprivate texture197 = new Rectangle(1088, 768, 128, 64);\r\n\r\n\tprivate texture198 = new Rectangle(1632, 0, 270, 64);\r\n\r\n\tprivate texture199 = new Rectangle(64, 1664, 128, 128);\r\n\r\n\r\n\tprivate texture200 = new Rectangle(28, 293, 28, 26);\r\n\tprivate texture201 = new Rectangle(56, 293, 28, 26);\r\n\tprivate texture202 = new Rectangle(84, 293, 28, 26);\r\n\tprivate texture203 = new Rectangle(0, 290, 28, 29);\r\n\tprivate texture204 = new Rectangle(112, 290, 28, 29);\r\n\tprivate texture205 = new Rectangle(140, 290, 28, 29);\r\n\tprivate texture206 = new Rectangle(168, 290, 28, 29);\r\n\tprivate texture207 = new Rectangle(196, 290, 28, 29);\r\n\tprivate texture208 = new Rectangle(224, 290, 28, 29);\r\n\r\n\tprivate texture209 = new Rectangle(0, 480, 28, 29);\r\n\tprivate texture210 = new Rectangle(28, 480, 28, 29);\r\n\tprivate texture211 = new Rectangle(56, 480, 28, 29);\r\n\tprivate texture212 = new Rectangle(84, 480, 28, 29);\r\n\r\n\tprivate texture214 = new Rectangle(0, 448, 28, 29);\r\n\tprivate texture215 = new Rectangle(28, 448, 28, 29);\r\n\tprivate texture216 = new Rectangle(56, 448, 28, 29);\r\n\tprivate texture217 = new Rectangle(84, 448, 28, 29);\r\n\tprivate texture218 = new Rectangle(112, 448, 28, 29);\r\n\tprivate texture219 = new Rectangle(140, 448, 28, 29);\r\n\r\n\tprivate texture220 = new Rectangle(0, 416, 28, 29);\r\n\tprivate texture221 = new Rectangle(28, 416, 28, 29);\r\n\tprivate texture222 = new Rectangle(56, 416, 28, 29);\r\n\tprivate texture223 = new Rectangle(84, 416, 28, 29);\r\n\r\n\tprivate texture224 = new Rectangle(0, 384, 28, 29);\r\n\tprivate texture225 = new Rectangle(28, 384, 28, 29);\r\n\tprivate texture226 = new Rectangle(56, 384, 28, 29);\r\n\r\n\tprivate texture227 = new Rectangle(112, 480, 28, 29);\r\n\tprivate texture228 = new Rectangle(140, 480, 28, 29);\r\n\tprivate texture229 = new Rectangle(168, 480, 28, 29);\r\n\r\n\tprivate texture230 = new Rectangle(196, 480, 28, 29);\r\n\tprivate texture231 = new Rectangle(224, 480, 28, 29);\r\n\tprivate texture232 = new Rectangle(252, 480, 28, 29);\r\n\r\n\tprivate texture233 = new Rectangle(32, 1152, 32, 32);\r\n\tprivate texture234 = new Rectangle(64, 1152, 32, 32);\r\n\tprivate texture235 = new Rectangle(96, 1152, 32, 32);\r\n\tprivate texture236 = new Rectangle(128, 1152, 32, 32);\r\n\r\n\tprivate texture237 = new Rectangle(160, 1152, 32, 32);\r\n\tprivate texture238 = new Rectangle(192, 1152, 32, 32);\r\n\tprivate texture239 = new Rectangle(224, 1152, 32, 32);\r\n\tprivate texture240 = new Rectangle(256, 1152, 32, 32);\r\n\tprivate texture241 = new Rectangle(288, 1152, 32, 32);\r\n\tprivate texture242 = new Rectangle(320, 1152, 32, 32);\r\n\r\n\tprivate texture243 = new Rectangle(32, 1216, 32, 32);\r\n\tprivate texture244 = new Rectangle(64, 1216, 32, 32);\r\n\tprivate texture245 = new Rectangle(96, 1216, 32, 32);\r\n\tprivate texture246 = new Rectangle(128, 1216, 32, 32);\r\n\tprivate texture247 = new Rectangle(160, 1216, 32, 32);\r\n\tprivate texture248 = new Rectangle(192, 1216, 32, 32);\r\n\r\n\tprivate texture249 = new Rectangle(0, 320, 28, 32);\r\n\r\n\tprivate texture250 = new Rectangle(224, 1216, 32, 32);\r\n\tprivate texture251 = new Rectangle(256, 1216, 32, 32);\r\n\tprivate texture252 = new Rectangle(288, 1216, 32, 32);\r\n\tprivate texture253 = new Rectangle(320, 1216, 32, 32);\r\n\tprivate texture254 = new Rectangle(352, 1216, 32, 32);\r\n\tprivate texture255 = new Rectangle(384, 1216, 32, 32);\r\n\tprivate texture256 = new Rectangle(416, 1216, 32, 32);\r\n\tprivate texture257 = new Rectangle(448, 1216, 32, 32);\r\n\r\n\tprivate texture262 = new Rectangle(32, 1344, 32, 32);\r\n\tprivate texture263 = new Rectangle(64, 1344, 32, 32);\r\n\tprivate texture264 = new Rectangle(96, 1344, 32, 32);\r\n\tprivate texture265 = new Rectangle(160, 1344, 32, 32);\r\n\tprivate texture266 = new Rectangle(192, 1344, 32, 32);\r\n\tprivate texture267 = new Rectangle(224, 1344, 32, 32);\r\n\r\n\tprivate texture268 = new Rectangle(32, 1401, 24, 7);\r\n\tprivate texture269 = new Rectangle(64, 1401, 15, 7);\r\n\r\n\tprivate texture270 = new Rectangle(288, 1344, 32, 32);\r\n\tprivate texture271 = new Rectangle(320, 1344, 32, 32);\r\n\tprivate texture272 = new Rectangle(352, 1344, 32, 32);\r\n\tprivate texture273 = new Rectangle(384, 1344, 32, 32);\r\n\tprivate texture274 = new Rectangle(416, 1344, 32, 32);\r\n\tprivate texture275 = new Rectangle(448, 1344, 32, 32);\r\n\r\n\tprivate texture276 = new Rectangle(288, 1376, 32, 32);\r\n\tprivate texture277 = new Rectangle(320, 1376, 32, 32);\r\n\tprivate texture278 = new Rectangle(352, 1376, 32, 32);\r\n\tprivate texture279 = new Rectangle(384, 1376, 32, 32);\r\n\tprivate texture280 = new Rectangle(416, 1376, 32, 32);\r\n\tprivate texture281 = new Rectangle(448, 1376, 32, 32);\r\n\r\n\tprivate texture282 = new Rectangle(512, 1344, 32, 32);\r\n\tprivate texture283 = new Rectangle(544, 1344, 32, 32);\r\n\tprivate texture284 = new Rectangle(576, 1344, 32, 32);\r\n\tprivate texture285 = new Rectangle(608, 1344, 32, 32);\r\n\tprivate texture286 = new Rectangle(640, 1344, 32, 32);\r\n\tprivate texture287 = new Rectangle(672, 1344, 32, 32);\r\n\tprivate texture288 = new Rectangle(704, 1344, 32, 32);\r\n\tprivate texture289 = new Rectangle(736, 1344, 32, 32);\r\n\r\n\tprivate texture290 = new Rectangle(800, 1344, 32, 32);\r\n\tprivate texture291 = new Rectangle(832, 1344, 32, 32);\r\n\tprivate texture292 = new Rectangle(864, 1344, 32, 32);\r\n\tprivate texture293 = new Rectangle(896, 1344, 32, 32);\r\n\r\n\tprivate texture294 = new Rectangle(480, 1376, 28, 32);\r\n\tprivate texture295 = new Rectangle(512, 1376, 28, 32);\r\n\tprivate texture296 = new Rectangle(544, 1376, 28, 32);\r\n\r\n\tprivate texture297 = new Rectangle(480, 1440, 20, 20);\r\n\tprivate texture298 = new Rectangle(512, 1440, 20, 20);\r\n\tprivate texture299 = new Rectangle(544, 1440, 20, 20);\r\n\r\n\tprivate texture300 = new Rectangle(32, 1664, 128, 128);\r\n\r\n\tprivate texture301 = new Rectangle(1344, 1184, 64, 64);\r\n\tprivate texture302 = new Rectangle(1408, 1184, 64, 64);\r\n\tprivate texture303 = new Rectangle(1472, 1184, 64, 64);\r\n\tprivate texture304 = new Rectangle(1536, 1184, 64, 64);\r\n\tprivate texture305 = new Rectangle(1600, 1184, 64, 64);\r\n\tprivate texture306 = new Rectangle(1664, 1184, 64, 64);\r\n\r\n\r\n\r\n\tprivate texture500 = new Rectangle(0, 1536, 96, 64);\r\n\r\n\tprivate texture550 = new Rectangle(1088, 0, 128, 64);\r\n\tprivate texture551 = new Rectangle(1632, 96, 111, 12);\r\n\tprivate texture552 = new Rectangle(1632, 128, 111, 12);\r\n\r\n\tprivate texture553 = new Rectangle(1440, 128, 164, 27);\r\n\r\n\tprivate texture554 = new Rectangle(1248, 128, 164, 27);\r\n\r\n\tprivate texture555 = new Rectangle(1440, 160, 164, 27);\r\n\tprivate texture556 = new Rectangle(1440, 192, 164, 27);\r\n\tprivate texture557 = new Rectangle(1440, 224, 164, 27);\r\n\tprivate texture558 = new Rectangle(1440, 256, 164, 27);\r\n\r\n\tprivate texture560 = new Rectangle(1344, 704, 64, 96);\r\n\tprivate texture561 = new Rectangle(1408, 704, 64, 96);\r\n\tprivate texture562 = new Rectangle(1472, 704, 64, 96);\r\n\tprivate texture563 = new Rectangle(1536, 704, 64, 96);\r\n\tprivate texture564 = new Rectangle(1600, 704, 64, 96);\r\n\tprivate texture565 = new Rectangle(1344, 800, 64, 96);\r\n\tprivate texture566 = new Rectangle(1408, 800, 64, 96);\r\n\tprivate texture567 = new Rectangle(1472, 800, 64, 96);\r\n\r\n\tprivate texture568 = new Rectangle(1536, 800, 64, 96);\r\n\tprivate texture569 = new Rectangle(1600, 800, 64, 96);\r\n\tprivate texture570 = new Rectangle(1344, 896, 64, 96);\r\n\tprivate texture571 = new Rectangle(1408, 896, 64, 96);\r\n\tprivate texture572 = new Rectangle(1472, 896, 64, 96);\r\n\tprivate texture573 = new Rectangle(1536, 896, 64, 96);\r\n\tprivate texture574 = new Rectangle(1600, 896, 64, 96);\r\n\tprivate texture575 = new Rectangle(1344, 992, 64, 96);\r\n\tprivate texture576 = new Rectangle(1408, 992, 64, 96);\r\n\tprivate texture577 = new Rectangle(1472, 992, 64, 96);\r\n\tprivate texture578 = new Rectangle(1536, 992, 64, 96);\r\n\tprivate texture579 = new Rectangle(1600, 992, 64, 96);\r\n\r\n\tprivate texture580 = new Rectangle(1408, 1440, 128, 96);\r\n\tprivate texture581 = new Rectangle(1536, 1440, 128, 96);\r\n\tprivate texture582 = new Rectangle(1664, 1440, 128, 96);\r\n\tprivate texture583 = new Rectangle(1792, 1440, 128, 96);\r\n\tprivate texture584 = new Rectangle(1408, 1568, 128, 96);\r\n\tprivate texture585 = new Rectangle(1536, 1568, 128, 96);\r\n\tprivate texture586 = new Rectangle(1664, 1568, 128, 96);\r\n\tprivate texture587 = new Rectangle(1792, 1568, 128, 96);\r\n\tprivate texture588 = new Rectangle(1408, 1696, 128, 96);\r\n\tprivate texture589 = new Rectangle(1536, 1696, 128, 96);\r\n\tprivate texture590 = new Rectangle(1664, 1696, 128, 96);\r\n\tprivate texture591 = new Rectangle(1792, 1696, 128, 96);\r\n\tprivate texture592 = new Rectangle(1408, 1824, 128, 96);\r\n\tprivate texture593 = new Rectangle(1536, 1824, 128, 96);\r\n\tprivate texture594 = new Rectangle(1664, 1824, 128, 96);\r\n\tprivate texture595 = new Rectangle(1792, 1824, 128, 96);\r\n\tprivate texture596 = new Rectangle(1408, 1952, 128, 96);\r\n\tprivate texture597 = new Rectangle(1664, 1952, 128, 96);\r\n\tprivate texture598 = new Rectangle(1792, 1952, 128, 96);\r\n\r\n\tprivate texture600 = new Rectangle(544, 0, 96, 96);\r\n\tprivate texture601 = new Rectangle(640, 0, 96, 96);\r\n\tprivate texture602 = new Rectangle(736, 0, 96, 96);\r\n\tprivate texture603 = new Rectangle(832, 0, 96, 96);\r\n\tprivate texture604 = new Rectangle(544, 96, 96, 96);\r\n\tprivate texture605 = new Rectangle(640, 96, 96, 96);\r\n\tprivate texture606 = new Rectangle(736, 96, 96, 96);\r\n\tprivate texture607 = new Rectangle(832, 96, 96, 96);\r\n\r\n\tconstrcuctor() {\r\n\t\tif (TextureMapper.instance) {\r\n\t\t\tthrow new Error(\"Static class cant be instanced!\");\r\n\t\t}\r\n\r\n\t\tTextureMapper.instance = this;\r\n\t}\r\n\r\n\tpublic static getInstance() {\r\n\t\treturn TextureMapper.instance;\r\n\t}\r\n\r\n\r\n\r\n\tpublic mapTexture(textureType: number) {\r\n\r\n\t\tswitch (textureType) {\r\n\t\t\tcase 0: return this.texture0;\r\n\t\t\tcase 1: return this.texture1;\r\n\t\t\tcase 2: return this.texture2;\r\n\t\t\tcase 3: return this.texture3;\r\n\t\t\tcase 4: return this.texture4;\r\n\t\t\tcase 5: return this.texture5;\r\n\t\t\tcase 6: return this.texture6;\r\n\t\t\tcase 7: return this.texture7;\r\n\t\t\tcase 8: return this.texture8;\r\n\t\t\tcase 9: return this.texture9;\r\n\t\t\tcase 10: return this.texture10;\r\n\t\t\tcase 11: return this.texture11;\r\n\t\t\tcase 12: return this.texture12;\r\n\t\t\tcase 13: return this.texture13;\r\n\t\t\tcase 14: return this.texture14;\r\n\t\t\tcase 15: return this.texture15;\r\n\t\t\tcase 16: return this.texture16;\r\n\t\t\tcase 17: return this.texture17;\r\n\t\t\tcase 18: return this.texture18;\r\n\t\t\tcase 19: return this.texture19;\r\n\t\t\tcase 20: return this.texture20;\r\n\t\t\tcase 21: return this.texture21;\r\n\t\t\tcase 22: return this.texture22;\r\n\t\t\tcase 23: return this.texture23;\r\n\t\t\tcase 24: return this.texture24;\r\n\t\t\tcase 25: return this.texture25;\r\n\t\t\tcase 26: return this.texture26;\r\n\r\n\t\t\tcase 50: return this.texture50;\r\n\t\t\tcase 51: return this.texture51;\r\n\t\t\tcase 52: return this.texture52;\r\n\t\t\tcase 53: return this.texture53;\r\n\t\t\tcase 54: return this.texture54;\r\n\r\n\t\t\tcase 55: return this.texture55;\r\n\t\t\tcase 56: return this.texture56;\r\n\t\t\tcase 57: return this.texture57;\r\n\t\t\tcase 58: return this.texture58;\r\n\t\t\tcase 59: return this.texture59;\r\n\r\n\t\t\tcase 60: return this.texture60;\r\n\t\t\tcase 61: return this.texture61;\r\n\t\t\tcase 62: return this.texture62;\t\t\t\r\n\t\t\tcase 63: return this.texture63;\r\n\r\n\t\t\tcase 100: return this.texture100;\r\n\t\t\tcase 101: return this.texture101;\r\n\t\t\tcase 102: return this.texture102;\r\n\t\t\tcase 103: return this.texture103;\r\n\t\t\tcase 104: return this.texture104;\r\n\t\t\tcase 105: return this.texture105;\r\n\t\t\tcase 106: return this.texture106;\r\n\t\t\tcase 107: return this.texture107;\r\n\t\t\tcase 108: return this.texture108;\r\n\t\t\tcase 109: return this.texture109;\r\n\t\t\tcase 110: return this.texture110;\r\n\t\t\tcase 111: return this.texture111;\r\n\t\t\tcase 112: return this.texture112;\r\n\t\t\tcase 113: return this.texture113;\r\n\t\t\tcase 114: return this.texture114;\r\n\t\t\tcase 115: return this.texture115;\r\n\t\t\tcase 116: return this.texture116;\r\n\t\t\tcase 117: return this.texture117;\r\n\t\t\tcase 118: return this.texture118;\r\n\t\t\tcase 119: return this.texture119;\r\n\t\t\tcase 120: return this.texture120;\r\n\t\t\tcase 121: return this.texture121;\r\n\t\t\tcase 122: return this.texture122;\r\n\t\t\tcase 123: return this.texture123;\r\n\t\t\tcase 124: return this.texture124;\r\n\t\t\tcase 125: return this.texture125;\r\n\t\t\tcase 126: return this.texture126;\r\n\t\t\tcase 127: return this.texture127;\r\n\t\t\tcase 128: return this.texture128;\r\n\t\t\tcase 129: return this.texture129;\r\n\t\t\tcase 130: return this.texture130;\r\n\t\t\tcase 131: return this.texture131;\r\n\t\t\tcase 132: return this.texture132;\r\n\t\t\tcase 133: return this.texture133;\r\n\t\t\tcase 134: return this.texture134;\r\n\t\t\tcase 135: return this.texture135;\r\n\r\n\t\t\tcase 136: return this.texture136;\r\n\t\t\tcase 137: return this.texture137;\r\n\t\t\tcase 138: return this.texture138;\r\n\r\n\t\t\tcase 139: return this.texture139;\r\n\t\t\tcase 140: return this.texture140;\r\n\t\t\tcase 141: return this.texture141;\r\n\t\t\tcase 142: return this.texture142;\r\n\t\t\tcase 143: return this.texture143;\r\n\t\t\tcase 144: return this.texture144;\r\n\t\t\tcase 145: return this.texture145;\r\n\t\t\tcase 146: return this.texture146;\r\n\r\n\t\t\tcase 147: return this.texture147;\r\n\t\t\tcase 148: return this.texture148;\r\n\t\t\tcase 149: return this.texture149;\r\n\t\t\tcase 150: return this.texture150;\r\n\t\t\tcase 151: return this.texture151;\r\n\t\t\tcase 152: return this.texture152;\r\n\r\n\t\t\tcase 153: return this.texture153;\r\n\t\t\tcase 154: return this.texture154;\r\n\t\t\tcase 155: return this.texture155;\r\n\r\n\t\t\tcase 156: return this.texture156;\r\n\t\t\tcase 157: return this.texture157;\r\n\t\t\tcase 158: return this.texture158;\r\n\t\t\tcase 159: return this.texture159;\r\n\r\n\t\t\tcase 160: return this.texture160;\r\n\t\t\tcase 161: return this.texture161;\r\n\r\n\t\t\tcase 162: return this.texture162;\r\n\t\t\tcase 163: return this.texture163;\r\n\r\n\t\t\tcase 165: return this.texture165;\r\n\t\t\tcase 166: return this.texture166;\r\n\t\t\tcase 167: return this.texture167;\r\n\t\t\tcase 168: return this.texture168;\r\n\t\t\tcase 169: return this.texture169;\r\n\r\n\t\t\tcase 170: return this.texture170;\r\n\t\t\tcase 171: return this.texture171;\r\n\t\t\tcase 172: return this.texture172;\r\n\t\t\tcase 173: return this.texture173;\r\n\t\t\tcase 174: return this.texture174;\r\n\t\t\tcase 175: return this.texture175;\r\n\t\t\tcase 176: return this.texture176;\r\n\t\t\tcase 177: return this.texture177;\r\n\t\t\tcase 178: return this.texture178;\r\n\t\t\tcase 179: return this.texture179;\r\n\t\t\tcase 180: return this.texture180;\r\n\r\n\t\t\tcase 181: return this.texture181;\r\n\t\t\tcase 182: return this.texture182;\r\n\t\t\tcase 183: return this.texture183;\r\n\t\t\tcase 184: return this.texture184;\r\n\t\t\tcase 185: return this.texture185;\r\n\t\t\tcase 186: return this.texture186;\r\n\t\t\tcase 187: return this.texture187;\r\n\t\t\tcase 188: return this.texture188;\r\n\t\t\tcase 189: return this.texture189;\r\n\t\t\tcase 190: return this.texture190;\r\n\t\t\tcase 191: return this.texture191;\r\n\t\t\tcase 192: return this.texture192;\r\n\t\t\tcase 193: return this.texture193;\r\n\t\t\tcase 194: return this.texture194;\r\n\t\t\tcase 195: return this.texture195;\r\n\t\t\tcase 196: return this.texture196;\r\n\t\t\tcase 197: return this.texture197;\r\n\r\n\t\t\tcase 198: return this.texture198;\r\n\t\t\tcase 199: return this.texture199;\r\n\r\n\r\n\t\t\tcase 200: return this.texture200;\r\n\t\t\tcase 201: return this.texture201;\r\n\t\t\tcase 202: return this.texture202;\r\n\t\t\tcase 203: return this.texture203;\r\n\t\t\tcase 204: return this.texture204;\r\n\t\t\tcase 205: return this.texture205;\r\n\t\t\tcase 206: return this.texture206;\r\n\t\t\tcase 207: return this.texture207;\r\n\t\t\tcase 208: return this.texture208;\r\n\r\n\t\t\tcase 209: return this.texture209;\r\n\t\t\tcase 210: return this.texture210;\r\n\t\t\tcase 211: return this.texture211;\r\n\t\t\tcase 212: return this.texture212;\r\n\r\n\t\t\tcase 214: return this.texture214;\r\n\t\t\tcase 215: return this.texture215;\r\n\t\t\tcase 216: return this.texture216;\r\n\t\t\tcase 217: return this.texture217;\r\n\t\t\tcase 218: return this.texture218;\r\n\t\t\tcase 219: return this.texture219;\r\n\r\n\t\t\tcase 220: return this.texture220;\r\n\t\t\tcase 221: return this.texture221;\r\n\t\t\tcase 222: return this.texture222;\r\n\t\t\tcase 223: return this.texture223;\r\n\r\n\t\t\tcase 224: return this.texture224;\r\n\t\t\tcase 225: return this.texture225;\r\n\t\t\tcase 226: return this.texture226;\r\n\r\n\t\t\tcase 227: return this.texture227;\r\n\t\t\tcase 228: return this.texture228;\r\n\t\t\tcase 229: return this.texture229;\r\n\r\n\t\t\tcase 230: return this.texture230;\r\n\t\t\tcase 231: return this.texture231;\r\n\t\t\tcase 232: return this.texture232;\r\n\r\n\t\t\tcase 233: return this.texture233;\r\n\t\t\tcase 234: return this.texture234;\r\n\t\t\tcase 235: return this.texture235;\r\n\t\t\tcase 236: return this.texture236;\r\n\r\n\t\t\tcase 237: return this.texture237;\r\n\t\t\tcase 238: return this.texture238;\r\n\t\t\tcase 239: return this.texture239;\r\n\t\t\tcase 240: return this.texture240;\r\n\t\t\tcase 241: return this.texture241;\r\n\t\t\tcase 242: return this.texture242;\r\n\r\n\t\t\tcase 243: return this.texture243;\r\n\t\t\tcase 244: return this.texture244;\r\n\t\t\tcase 245: return this.texture245;\r\n\t\t\tcase 246: return this.texture246;\r\n\t\t\tcase 247: return this.texture247;\r\n\t\t\tcase 248: return this.texture248;\r\n\r\n\t\t\tcase 249: return this.texture249;\r\n\r\n\t\t\tcase 250: return this.texture250;\r\n\t\t\tcase 251: return this.texture251;\r\n\t\t\tcase 252: return this.texture252;\r\n\t\t\tcase 253: return this.texture253;\r\n\t\t\tcase 254: return this.texture254;\r\n\t\t\tcase 255: return this.texture255;\r\n\t\t\tcase 256: return this.texture256;\r\n\t\t\tcase 257: return this.texture257;\r\n\r\n\t\t\tcase 262: return this.texture262;\r\n\t\t\tcase 263: return this.texture263;\r\n\t\t\tcase 264: return this.texture264;\r\n\t\t\tcase 265: return this.texture265;\r\n\t\t\tcase 266: return this.texture266;\r\n\t\t\tcase 267: return this.texture267;\r\n\r\n\t\t\tcase 268: return this.texture268;\r\n\t\t\tcase 269: return this.texture269;\r\n\r\n\t\t\tcase 270: return this.texture270;\r\n\t\t\tcase 271: return this.texture271;\r\n\t\t\tcase 272: return this.texture272;\r\n\t\t\tcase 273: return this.texture273;\r\n\t\t\tcase 274: return this.texture274;\r\n\t\t\tcase 275: return this.texture275;\r\n\r\n\t\t\tcase 276: return this.texture276;\r\n\t\t\tcase 277: return this.texture277;\r\n\t\t\tcase 278: return this.texture278;\r\n\t\t\tcase 279: return this.texture279;\r\n\t\t\tcase 280: return this.texture280;\r\n\t\t\tcase 281: return this.texture281;\r\n\r\n\t\t\tcase 282: return this.texture282;\r\n\t\t\tcase 283: return this.texture283;\r\n\t\t\tcase 284: return this.texture284;\r\n\t\t\tcase 285: return this.texture285;\r\n\t\t\tcase 286: return this.texture286;\r\n\t\t\tcase 287: return this.texture287;\r\n\t\t\tcase 288: return this.texture288;\r\n\t\t\tcase 289: return this.texture289;\r\n\r\n\t\t\tcase 290: return this.texture290;\r\n\t\t\tcase 291: return this.texture291;\r\n\t\t\tcase 292: return this.texture292;\r\n\t\t\tcase 293: return this.texture293;\r\n\r\n\t\t\tcase 294: return this.texture294;\r\n\t\t\tcase 295: return this.texture295;\r\n\t\t\tcase 296: return this.texture296;\r\n\r\n\t\t\tcase 297: return this.texture297;\r\n\t\t\tcase 298: return this.texture298;\r\n\t\t\tcase 299: return this.texture299;\r\n\r\n\t\t\tcase 300: return this.texture300;\r\n\r\n\t\t\tcase 301: return this.texture301;\r\n\t\t\tcase 302: return this.texture302;\r\n\t\t\tcase 303: return this.texture303;\r\n\t\t\tcase 304: return this.texture304;\r\n\t\t\tcase 305: return this.texture305;\r\n\t\t\tcase 306: return this.texture306;\r\n\r\n\t\t\tcase 500: return this.texture500;\r\n\r\n\t\t\tcase 550: return this.texture550;\r\n\t\t\tcase 551: return this.texture551;\r\n\t\t\tcase 552: return this.texture552;\r\n\r\n\t\t\tcase 553: return this.texture553;\r\n\t\t\tcase 554: return this.texture554;\r\n\r\n\t\t\tcase 555: return this.texture555;\r\n\t\t\tcase 556: return this.texture556;\r\n\t\t\tcase 557: return this.texture557;\r\n\t\t\tcase 558: return this.texture558;\r\n\r\n\t\t\tcase 560: return this.texture560;\r\n\t\t\tcase 561: return this.texture561;\r\n\t\t\tcase 562: return this.texture562;\r\n\t\t\tcase 563: return this.texture563;\r\n\t\t\tcase 564: return this.texture564;\r\n\t\t\tcase 565: return this.texture565;\r\n\t\t\tcase 566: return this.texture566;\r\n\t\t\tcase 567: return this.texture567;\r\n\t\t\tcase 568: return this.texture568;\r\n\t\t\tcase 569: return this.texture569;\r\n\t\t\tcase 570: return this.texture570;\r\n\t\t\tcase 571: return this.texture571;\r\n\t\t\tcase 572: return this.texture572;\r\n\t\t\tcase 573: return this.texture573;\r\n\t\t\tcase 574: return this.texture574;\r\n\t\t\tcase 575: return this.texture575;\r\n\r\n\t\t\tcase 576: return this.texture576;\r\n\t\t\tcase 577: return this.texture577;\r\n\t\t\tcase 578: return this.texture578;\r\n\t\t\tcase 579: return this.texture579;\r\n\r\n\t\t\tcase 580: return this.texture580;\r\n\t\t\tcase 581: return this.texture581;\r\n\t\t\tcase 582: return this.texture582;\r\n\t\t\tcase 583: return this.texture583;\r\n\t\t\tcase 584: return this.texture584;\r\n\t\t\tcase 585: return this.texture585;\r\n\t\t\tcase 586: return this.texture586;\r\n\t\t\tcase 587: return this.texture587;\r\n\t\t\tcase 588: return this.texture588;\r\n\t\t\tcase 589: return this.texture589;\r\n\t\t\tcase 590: return this.texture590;\r\n\t\t\tcase 591: return this.texture591;\r\n\t\t\tcase 592: return this.texture592;\r\n\t\t\tcase 593: return this.texture593;\r\n\t\t\tcase 594: return this.texture594;\r\n\t\t\tcase 595: return this.texture595;\r\n\t\t\tcase 596: return this.texture596;\r\n\t\t\tcase 597: return this.texture597;\r\n\t\t\tcase 598: return this.texture598;\r\n\r\n\t\t\tcase 600: return this.texture600;\r\n\t\t\tcase 601: return this.texture601;\r\n\t\t\tcase 602: return this.texture602;\r\n\t\t\tcase 603: return this.texture603;\r\n\t\t\tcase 604: return this.texture604;\r\n\t\t\tcase 605: return this.texture605;\r\n\t\t\tcase 606: return this.texture606;\r\n\t\t\tcase 607: return this.texture607;\r\n\t\t}\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/textureMapper.ts","export class Matrix3 {\r\n\r\n    public createIdentityMatrix() {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    }\r\n\r\n    public static createProjectionMatrix(width: number, height: number) {\r\n\t\treturn [\r\n\t\t\t2 / width, 0, 0,\r\n\t\t\t0, -2 / height, 0,\r\n\t\t\t-1, 1, 1\r\n\t\t];\r\n\t}\r\n\r\n\tpublic static createTranslationMatrix(tx: number, ty: number) {\r\n\t\treturn [\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\ttx, ty, 1\r\n\t\t];\r\n\t}\r\n\r\n\tpublic static createRotationMatrix(angleInRadians: number) {\r\n\t\tlet c = Math.cos(angleInRadians);\r\n\t\tlet s = Math.sin(angleInRadians);\r\n\t\treturn [\r\n\t\t\tc, -s, 0,\r\n\t\t\ts, c, 0,\r\n\t\t\t0, 0, 1\r\n\t\t];\r\n\t}\r\n\r\n\tpublic static createScaleMatrix(sx: number, sy: number) {\r\n\t\treturn [\r\n\t\t\tsx, 0, 0,\r\n\t\t\t0, sy, 0,\r\n\t\t\t0, 0, 1\r\n\t\t];\r\n\t}\r\n\r\n\tpublic static multiply(a: number[], b: number[]) {\r\n\t\tvar a00 = a[0 * 3 + 0];\r\n\t\tvar a01 = a[0 * 3 + 1];\r\n\t\tvar a02 = a[0 * 3 + 2];\r\n\t\tvar a10 = a[1 * 3 + 0];\r\n\t\tvar a11 = a[1 * 3 + 1];\r\n\t\tvar a12 = a[1 * 3 + 2];\r\n\t\tvar a20 = a[2 * 3 + 0];\r\n\t\tvar a21 = a[2 * 3 + 1];\r\n\t\tvar a22 = a[2 * 3 + 2];\r\n\t\tvar b00 = b[0 * 3 + 0];\r\n\t\tvar b01 = b[0 * 3 + 1];\r\n\t\tvar b02 = b[0 * 3 + 2];\r\n\t\tvar b10 = b[1 * 3 + 0];\r\n\t\tvar b11 = b[1 * 3 + 1];\r\n\t\tvar b12 = b[1 * 3 + 2];\r\n\t\tvar b20 = b[2 * 3 + 0];\r\n\t\tvar b21 = b[2 * 3 + 1];\r\n\t\tvar b22 = b[2 * 3 + 2];\r\n\t\treturn [a00 * b00 + a01 * b10 + a02 * b20,\r\n\t\ta00 * b01 + a01 * b11 + a02 * b21,\r\n\t\ta00 * b02 + a01 * b12 + a02 * b22,\r\n\t\ta10 * b00 + a11 * b10 + a12 * b20,\r\n\t\ta10 * b01 + a11 * b11 + a12 * b21,\r\n\t\ta10 * b02 + a11 * b12 + a12 * b22,\r\n\t\ta20 * b00 + a21 * b10 + a22 * b20,\r\n\t\ta20 * b01 + a21 * b11 + a22 * b21,\r\n\t\ta20 * b02 + a21 * b12 + a22 * b22];\r\n\t}\r\n\r\n    public static positionConvertion(x: number, y: number, matrix: number[]) {\r\n        x = x * matrix[0] + y * matrix[3] + 1 * matrix[6];\r\n        y = x * matrix[1] + y * matrix[4] + 1 * matrix[7];\r\n\r\n        return [x, y];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/matrix3.ts","import { Context } from '../';\r\nimport { TextureType } from '../model';\r\n\r\nexport class DynamicRenderCall {\r\n\tpublic vertecies: number[];\r\n\tpublic textureCoords: number[];\r\n\tpublic indecies: number[];\r\n\tpublic matrices: number[];\r\n\r\n\tconstructor() {\r\n\t\tthis.vertecies = [];\r\n\t\tthis.indecies = [];\r\n\t\tthis.textureCoords = [];\r\n\t\tthis.matrices = [];\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/dynamicRenderCall.ts","import { Context } from '../context';\r\nimport { ParticleRenderCall } from './particleRenderCall';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\nimport { Particle } from '../particle/particle';\r\nimport { Enemy } from '../character/enemy';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { Rectangle, SpellType } from '../model';\r\n\r\nexport class ParticleRenderer {\r\n\r\n\tprivate context: Context;\r\n\tprivate gl: WebGLRenderingContext;\r\n\tprivate shaderProgram: WebGLShader;\r\n\tprivate collisionDetection = CollisionDetection.getInstance();\r\n\r\n\tprivate pointRelativeTimeBuffer: any;\r\n\tprivate pointLifetimesBuffer: any;\r\n\tprivate pointStartPositionsBuffer: any;\r\n\tprivate pointEndPositionsBuffer: any;\r\n\r\n\tprivate startPositionLocation: number;\r\n\tprivate endPositionLocation: number;\r\n\tprivate lifeTimeAttribute: number;\r\n\tprivate relativeTimeAttribute: number;\r\n\r\n\tprivate particleTexture: WebGLUniformLocation;\r\n\tprivate genericParticle: WebGLUniformLocation;\r\n\tprivate colorLocation: WebGLUniformLocation;\r\n\r\n\tprivate elapsed: number;\r\n\tprivate centerPos: number[];\r\n\tprivate color: number[];\r\n\r\n\tprivate particleHandler: ParticleHandler;\r\n\r\n\tconstructor(context: Context, particleHandler: ParticleHandler) {\r\n\t\tthis.context = context;\r\n\t\tthis.particleHandler = particleHandler;\r\n\t\tthis.gl = this.context.gl;\r\n\t\t//this.shaderProgram = this.context.particleProgram;\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 0, \"a_relativeTime\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 1, \"a_lifetime\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 2, \"a_startPosition\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 3, \"a_endPosition\");\r\n\r\n\t\tthis.relativeTimeAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_relativeTime\");\r\n\t\tthis.lifeTimeAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_lifetime\");\r\n\t\tthis.startPositionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_startPosition\");\r\n\t\tthis.endPositionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_endPosition\");\r\n\r\n\t\tthis.particleTexture = this.gl.getUniformLocation(this.shaderProgram, \"u_particleTexture\");\r\n\t\tthis.colorLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_color\");\r\n\r\n\t\tthis.pointEndPositionsBuffer = this.gl.createBuffer() as any;\r\n\t\tthis.pointStartPositionsBuffer = this.gl.createBuffer() as any;\r\n\t\tthis.pointLifetimesBuffer = this.gl.createBuffer() as any;\r\n\t\tthis.pointRelativeTimeBuffer = this.gl.createBuffer() as any;\r\n\t}\r\n\r\n\tpublic render(renderCalls: ParticleRenderCall[]) {\r\n\r\n\t\tfor (let call of renderCalls) {\r\n\t\t\tif (call.length > 0) {\r\n\t\t\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointRelativeTimeBuffer);\r\n\t\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.relativeTime), this.gl.STATIC_DRAW);\r\n\t\t\t\tthis.pointRelativeTimeBuffer.itemSize = 1;\r\n\t\t\t\tthis.pointRelativeTimeBuffer.numItems = call.length;\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointLifetimesBuffer);\r\n\t\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.lifetimes), this.gl.STATIC_DRAW);\r\n\t\t\t\tthis.pointLifetimesBuffer.itemSize = 1;\r\n\t\t\t\tthis.pointLifetimesBuffer.numItems = call.length;\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointStartPositionsBuffer);\r\n\t\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.startPositions), this.gl.STATIC_DRAW);\r\n\t\t\t\tthis.pointStartPositionsBuffer.itemSize = 3;\r\n\t\t\t\tthis.pointStartPositionsBuffer.numItems = call.length;\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointEndPositionsBuffer);\r\n\t\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(call.endPositions), this.gl.STATIC_DRAW);\r\n\t\t\t\tthis.pointEndPositionsBuffer.itemSize = 3;\r\n\t\t\t\tthis.pointEndPositionsBuffer.numItems = call.length;\r\n\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.lifeTimeAttribute);\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.relativeTimeAttribute);\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.startPositionLocation);\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.endPositionLocation);\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointRelativeTimeBuffer);\r\n\t\t\t\tthis.gl.vertexAttribPointer(this.relativeTimeAttribute, this.pointRelativeTimeBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointLifetimesBuffer);\r\n\t\t\t\tthis.gl.vertexAttribPointer(this.lifeTimeAttribute, this.pointLifetimesBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointStartPositionsBuffer);\r\n\t\t\t\tthis.gl.vertexAttribPointer(this.startPositionLocation, this.pointStartPositionsBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointEndPositionsBuffer);\r\n\t\t\t\tthis.gl.vertexAttribPointer(this.endPositionLocation, this.pointEndPositionsBuffer.itemSize, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\t\tthis.gl.activeTexture(this.gl.TEXTURE0);\r\n\r\n\t\t\t\tif(call.type == SpellType.frostBlast) {\r\n\t\t\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.frostParticelTexture);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.genericParticleTexture);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.gl.uniform1i(this.particleTexture, 0);\r\n\r\n\t\t\t\tthis.gl.uniform4f(this.colorLocation, call.color[0], call.color[1], call.color[2], call.color[3]);\r\n\r\n\t\t\t\tthis.gl.drawArrays(this.gl.POINTS, 0, this.pointLifetimesBuffer.numItems);\r\n\r\n\t\t\t\tthis.gl.disableVertexAttribArray(this.lifeTimeAttribute);\r\n\t\t\t\tthis.gl.disableVertexAttribArray(this.relativeTimeAttribute);\r\n\t\t\t\tthis.gl.disableVertexAttribArray(this.startPositionLocation);\r\n\t\t\t\tthis.gl.disableVertexAttribArray(this.endPositionLocation);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/particleRenderer.ts","import { Vector, Tile, Rectangle, Projectile, DynamicTile } from '../model';\r\nimport { CollisionData, Grid } from './';\r\nimport { Character } from '../character/character';\r\nimport { Enemy } from '../character/enemy';\r\n\r\nexport class CollisionDetection {\r\n\r\n\tprivate static instance: CollisionDetection = new CollisionDetection();\r\n\tprivate grid: Grid;\r\n\tprivate gameSize: Vector;\r\n\tprivate gridItemSize: number;\r\n\r\n\r\n\tconstructor() {\r\n\t\tif (CollisionDetection.instance) {\r\n\t\t\tthrow new Error(\"Static class cant be instanced!\");\r\n\t\t}\r\n\r\n\t\tCollisionDetection.instance = this;\r\n\t}\r\n\r\n\tpublic static getInstance() {\r\n\t\treturn CollisionDetection.instance;\r\n\t}\r\n\r\n\tpublic createGrid(gameSize: Vector, collidables: Rectangle[]) {\r\n\t\tthis.gameSize = gameSize;\r\n\t\tthis.grid = new Grid(25, this.gameSize);\r\n\r\n\t\tfor (let collidable of collidables) {\r\n\t\t\tthis.grid.insert(collidable);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic collisionDetection(tiles: Tile[], dynamicTiles: DynamicTile[], character: Character, frameVelocity: Vector, delta: number) {\r\n\r\n\t\tlet collisionData = this.checkCollision(tiles, dynamicTiles, character, frameVelocity, delta);\r\n\r\n\t\treturn collisionData;\r\n\t}\r\n\r\n\tpublic fastCheckEnviroment(rect: Rectangle, tiles: Tile[]) {\r\n\t\tlet clear = true;\r\n\r\n\t\tlet possibleColls = this.grid.get(rect);\r\n\r\n\t\tfor (let tile of possibleColls) {\r\n\t\t\tif (this.aabbCheck(rect, tile)) {\r\n\t\t\t\tclear = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn clear;\r\n\t}\r\n\r\n\tpublic checkProjectileCollisionX(collidables: Rectangle[], projectile: Projectile, frameVelocity: Vector, staticCollisions: boolean, checkClose: boolean) {\r\n\r\n\t\tlet broadphasebox = this.getSweptBroadphaseBoxX(projectile.collisionArea, frameVelocity);\r\n\r\n\t\tlet possibleColls: Rectangle[];\r\n\r\n\t\tif (staticCollisions) {\r\n\t\t\tpossibleColls = this.grid.get(broadphasebox);\r\n\t\t} else {\r\n\t\t\tpossibleColls = collidables;\r\n\t\t}\r\n\r\n\t\tlet collisionData: CollisionData = new CollisionData();\r\n\r\n\t\tfor (let collidable of possibleColls) {\r\n\t\t\tif (this.aabbCheck(broadphasebox, collidable)) {\r\n\t\t\t\tcollisionData = this.aabbCollisionX(projectile.collisionArea, collidable, frameVelocity, collisionData);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (checkClose) {\r\n\t\t\tfor (let collidable of possibleColls) {\r\n\t\t\t\tif (this.aabbCheck(projectile.collisionArea, collidable)) {\r\n\t\t\t\t\tcollisionData.wallCollision = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn collisionData;\r\n\t}\r\n\r\n\tpublic checkProjectileCollisionY(collidables: Rectangle[], projectile: Projectile, frameVelocity: Vector, staticCollisions: boolean) {\r\n\t\tlet broadphasebox = this.getSweptBroadphaseBoxY(projectile.collisionArea, frameVelocity);\r\n\r\n\t\tlet possibleColls: Rectangle[];\r\n\r\n\t\tif (staticCollisions) {\r\n\t\t\tpossibleColls = this.grid.get(broadphasebox);\r\n\t\t} else {\r\n\t\t\tpossibleColls = collidables;\r\n\t\t}\r\n\r\n\t\tlet collisionData: CollisionData = new CollisionData();\r\n\r\n\t\tfor (let collidable of possibleColls) {\r\n\t\t\tif (this.aabbCheck(broadphasebox, collidable)) {\r\n\t\t\t\tcollisionData = this.aabbCollisionY(projectile.collisionArea, collidable, frameVelocity, collisionData);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn collisionData;\r\n\t}\r\n\r\n\tpublic checkCollision(tiles: Tile[], dynamicTiles: DynamicTile[], character: Character, frameVelocity: Vector, delta: number) {\r\n\r\n\t\tlet tilesToCheck = tiles;\r\n\t\tlet collisionData: CollisionData = new CollisionData();\r\n\t\tlet dynamicCollisionData = new CollisionData();\r\n\t\tlet rect1 = character.getCollisionArea();\r\n\t\tlet broadphasebox = this.getSweptBroadphaseBoxY(rect1, frameVelocity);\r\n\r\n\t\tlet possibleColls = this.grid.get(broadphasebox) as Tile[];\r\n\r\n\t\tfor (let dynamicTile of dynamicTiles) {\r\n\t\t\tlet deltaVelocity = new Vector(frameVelocity.x - dynamicTile.velocity.x * delta, frameVelocity.y - dynamicTile.velocity.y * delta);\r\n\t\t\tdynamicCollisionData = this.checkDynamicTileY(dynamicTile, rect1, character, deltaVelocity, dynamicCollisionData, delta);\r\n\t\t}\r\n\r\n\t\tfor (let tile of possibleColls) {\r\n\t\t\tif (this.aabbCheck(broadphasebox, tile)) {\r\n\t\t\t\tcollisionData = this.aabbCollisionY(rect1, tile, frameVelocity, collisionData);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dynamicCollisionData.groundCollision) {\r\n\t\t\tcollisionData = dynamicCollisionData;\r\n\t\t\tframeVelocity.y = dynamicCollisionData.velocityY;\r\n\t\t}\r\n\r\n\t\tcharacter.position.y += frameVelocity.y * collisionData.collisionTimeY;\r\n\r\n\t\trect1 = character.getCollisionArea();\r\n\t\tbroadphasebox = this.getSweptBroadphaseBoxX(rect1, frameVelocity);\r\n\r\n\t\tfor (let dynamicTile of dynamicTiles) {\r\n\t\t\tlet deltaVelocity = new Vector(frameVelocity.x - dynamicTile.velocity.x * delta, frameVelocity.y - dynamicTile.velocity.y * delta);\r\n\t\t\tdynamicCollisionData = this.checkDynamicTileX(dynamicTile, rect1, character, deltaVelocity, dynamicCollisionData, delta);\r\n\t\t}\r\n\r\n\t\tfor (let tile of tilesToCheck) {\r\n\t\t\tif (this.aabbCheck(broadphasebox, tile)) {\r\n\t\t\t\tcollisionData = this.aabbCollisionX(character.getCollisionArea(), tile, frameVelocity, collisionData);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dynamicCollisionData.wallCollision) {\r\n\t\t\tcollisionData.wallCollision = dynamicCollisionData.wallCollision;\r\n\t\t\tcollisionData.collisionTimeX = dynamicCollisionData.collisionTimeX;\r\n\t\t\tframeVelocity.x = dynamicCollisionData.velocityX;\r\n\t\t}\r\n\r\n\t\tcharacter.position.x += frameVelocity.x * collisionData.collisionTimeX;\r\n\r\n\t\tcollisionData.remainingTime = 1 - collisionData.collisionTimeY;\r\n\r\n\t\treturn collisionData;\r\n\t}\r\n\r\n\tpublic getClosestX(rect: Rectangle, tiles: Rectangle[], inverse: boolean) {\r\n\t\tlet coliidables: Rectangle[] = []\r\n\t\tlet closestX: number = inverse ? 0 : this.gameSize.x;\r\n\r\n\t\tlet possibleColls = this.grid.get(rect);\r\n\r\n\t\tfor (let tile of possibleColls) {\r\n\t\t\tif (this.aabbCheck(rect, tile)) {\r\n\t\t\t\tif (inverse) {\r\n\t\t\t\t\tlet tileVal = tile.x + tile.width;\r\n\t\t\t\t\tif (tileVal > closestX) {\r\n\t\t\t\t\t\tclosestX = tileVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet tileVal = tile.x;\r\n\t\t\t\t\tif (tileVal < closestX) {\r\n\t\t\t\t\t\tclosestX = tileVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn closestX;\r\n\t}\r\n\r\n\tpublic checkCoutOfBounds(character: Character, area: [number, number]) {\r\n\t\tlet rect = new Rectangle(0, 0, area[0], area[1]);\r\n\t\tif (!this.aabbCheck(character.getCollisionArea(), rect)) {\r\n\t\t\tcharacter.dead = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic aabbCheck(rect1: Rectangle, rect2: Rectangle) {\r\n\t\treturn (rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.height + rect1.y > rect2.y)\r\n\t}\r\n\r\n\tpublic aabbCheckS(rect1: Rectangle, areas: Rectangle[]) {\r\n\t\tfor (let rect2 of areas) {\r\n\t\t\tif ((rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.height + rect1.y > rect2.y)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate checkDynamicTileY(dynamicTile: DynamicTile, characterCollisionArea: Rectangle, character: Character, frameVelocity: Vector, dynamicCollisionData: CollisionData, delta: number) {\r\n\r\n\t\tlet broadphasebox = this.getSweptBroadphaseBoxY(characterCollisionArea, frameVelocity);\r\n\r\n\t\tif (this.aabbCheck(broadphasebox, dynamicTile.tile)) {\r\n\t\t\tdynamicCollisionData = this.aabbCollisionY(characterCollisionArea, dynamicTile.tile, frameVelocity, dynamicCollisionData);\r\n\t\t\tif (dynamicCollisionData.groundCollision) {\r\n\t\t\t\tdynamicCollisionData.lift = dynamicTile;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dynamicCollisionData;\r\n\t}\r\n\r\n\tprivate checkDynamicTileX(dynamicTile: DynamicTile, characterCollisionArea: Rectangle, character: Character, frameVelocity: Vector, dynamicCollisionData: CollisionData, delta: number) {\r\n\r\n\t\tlet broadphasebox = this.getSweptBroadphaseBoxX(characterCollisionArea, frameVelocity);\r\n\r\n\t\tif (this.aabbCheck(broadphasebox, dynamicTile.tile)) {\r\n\t\t\tdynamicCollisionData = this.aabbCollisionX(characterCollisionArea, dynamicTile.tile, frameVelocity, dynamicCollisionData);\r\n\t\t}\r\n\r\n\t\treturn dynamicCollisionData;\r\n\t}\r\n\r\n\tprivate getSweptBroadphaseBoxX(rect: Rectangle, velocity: Vector) {\r\n\t\tlet x = rect.x + velocity.x;\r\n\t\tlet y = rect.y;\r\n\t\tlet width = rect.width + Math.abs(velocity.x);\r\n\t\tlet height = rect.height;\r\n\r\n\t\treturn new Rectangle(x, y, width, height);\r\n\t}\r\n\r\n\tprivate getSweptBroadphaseBoxY(rect: Rectangle, velocity: Vector) {\r\n\t\tlet x = rect.x;\r\n\t\tlet y = rect.y + velocity.y;\r\n\t\tlet width = rect.width;\r\n\t\tlet height = rect.height + Math.abs(velocity.y);\r\n\r\n\t\treturn new Rectangle(x, y, width, height);\r\n\t}\r\n\r\n\tprivate aabbCollisionY(rect1: Rectangle, rect2: Rectangle, velocity: Vector, collisionData: CollisionData) {\r\n\t\tlet yInvEntry: number;\r\n\t\tlet yInvExit: number;\r\n\r\n\t\tif (velocity.y > 0) {\r\n\t\t\tyInvEntry = (rect2.y) - (rect1.y + rect1.height);\r\n\t\t\tyInvExit = (rect2.y + rect2.height) - (rect1.y);\r\n\t\t} else {\r\n\t\t\tyInvEntry = (rect2.y + rect2.height) - (rect1.y);\r\n\t\t\tyInvExit = (rect2.y) - (rect1.y + rect1.height);\r\n\t\t}\r\n\r\n\t\tlet yEntry: number;\r\n\t\tlet yExit: number;\r\n\r\n\t\tif (velocity.y == 0) {\r\n\t\t\tyEntry = -Number.MAX_SAFE_INTEGER;\r\n\t\t\tyExit = Number.MAX_SAFE_INTEGER;\r\n\t\t} else {\r\n\t\t\tyEntry = yInvEntry / velocity.y;\r\n\t\t\tyExit = yInvExit / velocity.y;\r\n\t\t}\r\n\r\n\t\tlet entryTime = yEntry;\r\n\t\tlet exitTime = yExit;\r\n\r\n\t\tif (entryTime > exitTime || yEntry < 0 || yEntry > 1) {\r\n\t\t\treturn collisionData;\r\n\t\t} else {\r\n\t\t\tif (velocity.y < 0) {\r\n\t\t\t\tcollisionData.normalY = 1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcollisionData.normalY = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (collisionData.collisionTimeY > entryTime) {\r\n\t\t\t\tcollisionData.collisionTimeY = entryTime;\r\n\t\t\t\tcollisionData.velocityY = velocity.y;\r\n\t\t\t}\r\n\r\n\t\t\tif (velocity.y > 20) {\r\n\t\t\t\tcollisionData.fallDeath = true;\r\n\t\t\t}\r\n\r\n\t\t\tcollisionData.groundCollision = true;\r\n\r\n\t\t}\r\n\t\treturn collisionData;\r\n\t}\r\n\r\n\tprivate aabbCollisionX(rect1: Rectangle, rect2: Rectangle, velocity: Vector, collisionData: CollisionData) {\r\n\t\tlet xInvEntry: number;\r\n\t\tlet xInvExit: number;\r\n\r\n\t\tif (velocity.x > 0) {\r\n\t\t\txInvEntry = (rect2.x) - (rect1.x + rect1.width);\r\n\t\t\txInvExit = (rect2.x + rect2.width) - (rect1.x);\r\n\t\t} else {\r\n\t\t\txInvEntry = (rect2.x + rect2.width) - (rect1.x);\r\n\t\t\txInvExit = (rect2.x) - (rect1.x + rect1.width);\r\n\t\t}\r\n\r\n\t\tlet xEntry: number;\r\n\t\tlet xExit: number;\r\n\r\n\t\tif (velocity.x == 0) {\r\n\t\t\txEntry = -Number.MAX_SAFE_INTEGER;\r\n\t\t\txExit = Number.MAX_SAFE_INTEGER;\r\n\t\t} else {\r\n\t\t\txEntry = xInvEntry / velocity.x;\r\n\t\t\txExit = xInvExit / velocity.x;\r\n\t\t}\r\n\r\n\t\tlet entryTime = xEntry;\r\n\t\tlet exitTime = xExit;\r\n\r\n\t\tif (entryTime > exitTime || xEntry < 0 || xEntry > 1) {\r\n\t\t\treturn collisionData;\r\n\t\t} else {\r\n\t\t\tif (xInvEntry < 0) {\r\n\t\t\t\tcollisionData.normalX = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcollisionData.normalX = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (collisionData.collisionTimeX > entryTime) {\r\n\t\t\t\tcollisionData.collisionTimeX = entryTime;\r\n\t\t\t\tcollisionData.velocityX = velocity.x;\r\n\t\t\t}\r\n\r\n\t\t\tcollisionData.wallCollision = true;\r\n\t\t}\r\n\r\n\t\treturn collisionData;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/collision/collisionDetection.ts","import { CollisionData } from './collisionData';\r\nimport { CollisionDetection } from './collisionDetection';\r\nimport { Grid } from './grid';\r\n\r\nexport { CollisionData, CollisionDetection, Grid };\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/collision/index.ts","import { DynamicTile } from '../model';\r\n\r\nexport class CollisionData {\r\n\tnormalX: number = 0;\r\n\tnormalY: number = 0;\r\n\tcollisionTimeY: number = 1;\r\n\tcollisionTimeX: number = 1;\r\n\tvelocityY: number;\r\n\tvelocityX: number;\r\n\tremainingTime: number = 0;\r\n\twallCollision: boolean = false;\r\n\tgroundCollision: boolean = false;\r\n\tlift: DynamicTile = null;\r\n\tfallDeath: boolean = false;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/collision/collisionData.ts","import { Rectangle, Tile, Vector } from '../model';\r\n\r\nexport class Grid {\r\n\r\n    public grid: Rectangle[][][] = [];\r\n    private gridSize: number;\r\n    private maxX: number;\r\n    private maxY: number;\r\n\r\n    constructor(size: number, canvasSize: Vector) {\r\n        this.gridSize = size;\r\n        this.maxX = canvasSize.x/this.gridSize;\r\n        this.maxY = canvasSize.y/this.gridSize;\r\n\r\n        for(let i = 0; i < this.maxX; i++)  {\r\n            this.grid[i] = [];\r\n            for(let j = 0; j < this.maxY; j++) {\r\n                this.grid[i][j] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    public insert(rect: Rectangle) {\r\n        \r\n        let coords = this.getGridCoordinates(rect);\r\n\r\n        for(let i = 0; i < coords[2]; i++) {\r\n            for(let j = 0; j < coords[3]; j++) {\r\n                this.grid[coords[0] + i][coords[1] + j].push(rect);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get(rect: Rectangle) {\r\n        let result: Rectangle[] = []\r\n\r\n        let coords = this.getGridCoordinates(rect);\r\n\r\n        for(let i = 0; i < coords[2]; i++) {\r\n            for(let j = 0; j < coords[3]; j++) {\r\n                result.push(...this.grid[coords[0] + i][coords[1] + j]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private getGridCoordinates(rect: Rectangle) {\r\n\r\n        let x = Math.floor(rect.x/this.gridSize);\r\n        let y = Math.floor(rect.y/this.gridSize);\r\n        let xi = Math.ceil(rect.width/this.gridSize) + 1;\r\n        let yi = Math.ceil(rect.height/this.gridSize) + 1;\r\n\r\n        if(x < 0) {\r\n            x = 0;\r\n        }\r\n\r\n        if(y < 0) {\r\n            y = 0;\r\n        }\r\n\r\n        if(x+xi > this.maxX) {\r\n            xi = this.maxX - x ;\r\n        }\r\n\r\n        if(y+yi > this.maxY) {\r\n            yi = this.maxY - y;\r\n        }\r\n\r\n        return [x, y, xi, yi];\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/collision/grid.ts","import { Rectangle, Animation, Vector } from '../'\r\n\r\nexport class FrameAnimation extends Animation {\r\n\r\n    private lastFrameIndex: number;\r\n    private growthX: number;\r\n    private growthY: number;\r\n    private offsetY: number = 20;\r\n    private offsetX: number = 10;\r\n    private particleFunction: (position: Vector) => void;\r\n\r\n\tconstructor(growthX: number, growthY: number, offsetX: number, offsetY: number, particleFunction: (position: Vector) => void, texturenumbers: number[]) {\r\n        super(texturenumbers);\r\n\r\n        this.particleFunction = particleFunction;\r\n        this.growthX = growthX;\r\n        this.growthY = growthY;\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n\r\n        this.lastFrameIndex = this.frameIndex;\r\n\t}\r\n\r\n\tpublic next(delta: number) {\r\n        if(this.lastFrameIndex != this.frameIndex) {\r\n            this.lastFrameIndex = this.frameIndex;\r\n            this.offsetX += this.growthX;\r\n            this.offsetY += this.growthY;\r\n        }\r\n        \r\n        this.particleFunction(new Vector(this.areaToRender.x + this.offsetX, this.areaToRender.y - this.offsetY));\r\n\r\n        super.next(delta);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/frameAnimation.ts","export enum SpellType{\r\n    fireball = 1,\r\n    electricbolt = 2,\r\n    frostBlast = 3,\r\n    fireBlast = 4,\r\n    shield = 5,\r\n    channelmagic = 6\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/enum/spellType.ts","import { Projectile, Vector, Rectangle, Animation, SpellType } from '../'\r\n\r\nexport class Spell extends Projectile {\r\n\r\n    public distance: number;\r\n    public type: SpellType;\r\n\r\n    constructor(velocity: Vector, area: Rectangle, animation: Animation, collisionRatio: number, distance: number, type: SpellType) {\r\n        super(velocity, area, animation, collisionRatio);\r\n\r\n        this.distance = distance;\r\n        this.type = type;\r\n    }\r\n\r\n    public update(travelDistanceX: number, travelDistanceY: number, delta: number) {\r\n\r\n        super.update(travelDistanceX, travelDistanceY, delta);\r\n\r\n        this.distance -= Math.abs(travelDistanceX); \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/spell.ts","import { Projectile, Rectangle, Vector, Animation, DebugElement, RotationAnimation, StaticRotationAnimation } from '../';\r\nimport { Gravity } from '../../forces/gravity';\r\nimport { Drag } from '../../forces/drag';\r\nimport { DebugHandler } from '../../handler/debugHandler';\r\n\r\nexport class PhysicalProjectile extends Projectile {\r\n\r\n    public gravityStrength: number = 0.0025;\r\n    public gravity: Gravity = new Gravity(this.gravityStrength);\r\n    private dragStrength = 0.0005;\r\n    public drag: Drag = new Drag(this.dragStrength);\r\n    public extendedOnGroundCollision: () => void;\r\n\r\n    private angle: boolean;\r\n\r\n    constructor(velocity: Vector, area: Rectangle, animation: Animation, collisionRatio: number, collisionArea?: Rectangle, angle?: boolean) {\r\n        super(velocity, area, animation, collisionRatio, collisionArea);\r\n\r\n        this.angle = angle;\r\n    }\r\n\r\n    public update(travelDistanceX: number, travelDistanceY: number, delta: number) {\r\n        super.update(travelDistanceX, travelDistanceY, delta); \r\n    }\r\n\r\n    public updateForces(delta: number) {\r\n        this.gravity.apply(this.velocity, delta);\r\n        this.drag.apply(this.velocity, delta);\r\n    }\r\n\r\n    public onGroundCollision() {\r\n        if(this.animation instanceof StaticRotationAnimation) {\r\n            if(this.animation.inverse) {\r\n                this.animation.angle = 0;\r\n            } else {\r\n                this.animation.angle = Math.PI * 2;\r\n            }\r\n        }\r\n\r\n        if(this.extendedOnGroundCollision) {\r\n            this.extendedOnGroundCollision();\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/physicalProjectile.ts","import { Vector } from '../model';\r\n\r\nexport class Gravity {\r\n\tprivate strength = 0;\r\n\r\n\tconstructor(strength: number) {\r\n\t\tthis.strength = strength;\r\n\t}\r\n\r\n\tpublic apply(vector: Vector, delta: number) {\r\n\t\tvector.y += this.strength * delta;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/forces/gravity.ts","import { Vector } from '../model';\r\n\r\nexport class Drag {\r\n    private strength = 0;\r\n\r\n    constructor(strength: number) {\r\n        this.strength = strength;\r\n    }\r\n\r\n    public apply(vector: Vector, delta: number) {\r\n\r\n        let deltaDrag = delta * this.strength;\r\n\r\n        if (vector.x > 0) {\r\n            vector.x -= deltaDrag;\r\n            if (vector.x < deltaDrag) {\r\n                vector.x = 0;\r\n            }\r\n        } else if (vector.x < 0) {\r\n            vector.x += deltaDrag;\r\n            if (vector.x > deltaDrag) {\r\n                vector.x = 0;\r\n            }\r\n        }\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/forces/drag.ts","import { Projectile, Vector, Rectangle, Animation } from '../'\r\n\r\nexport class Meele extends Projectile{\r\n    constructor(velocity: Vector, area: Rectangle, animation: Animation, collisionRatio: number) {\r\n        super(velocity, area, animation, collisionRatio);\r\n    }\r\n\r\n    update(travelDistanceX: number, travelDistanceY: number, delta: number) {\r\n        super.update(travelDistanceX, travelDistanceY, delta);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/meele.ts","import { Rectangle } from './';\r\n\r\nexport class DebugElement {\r\n\r\n    area: Rectangle;\r\n    inverse: boolean;\r\n\r\n    constructor(area: Rectangle, inverse: boolean) {\r\n        this.area = area;\r\n        this.inverse = inverse;\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/debug.ts","export enum TextureType {\r\n    tileTexture = 1,\r\n    particleTexture = 2,\r\n    frostTexture = 3\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/enum/textureType.ts","import { Animation } from './animation';\r\nimport { Vector } from '../';\r\n\r\nexport class StickyAnimation {\r\n    public animation: Animation;\r\n    public offset: Vector;\r\n\r\n    constructor(animation: Animation, offset: Vector) {\r\n        this.animation = animation;\r\n        this.offset = offset;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/stickyAnimation.ts","import { Rectangle, Animation, Vector } from '../'\r\n\r\nexport class RotationAnimation extends Animation {\r\n\r\n    private vec: Vector;\r\n    public angle: number;\r\n\r\n    constructor(vec: Vector, texturenumbers: number[]) {\r\n        super(texturenumbers);\r\n        this.vec = vec;\r\n    }\r\n\r\n    public next(delta: number) {\r\n        this.angle = Math.atan2(this.vec.x, this.vec.y);\r\n        \r\n        if(this.inverse) {\r\n            this.angle = this.angle + Math.PI * 0.5;\r\n        } else {\r\n            this.angle = this.angle + Math.PI * 1.5;\r\n        }\r\n\r\n        super.next(delta);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/rotationAnimation.ts","import { Rectangle, Animation, Vector } from '../'\r\n\r\nexport class StaticRotationAnimation extends Animation {\r\n\r\n    private vec: Vector;\r\n    public angle: number;\r\n\r\n    constructor(vec: Vector, inverse: boolean, texturenumbers: number[]) {\r\n        super(texturenumbers);\r\n        this.vec = vec;\r\n        this.inverse = inverse;\r\n        this.angle = Math.atan2(this.vec.x, this.vec.y);\r\n        if(this.inverse) {\r\n            this.angle = this.angle + Math.PI * 0.5;\r\n        } else {\r\n            this.angle = this.angle + Math.PI * 1.5;\r\n        }\r\n    }\r\n\r\n    public next(delta: number) {\r\n        super.next(delta);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/staticRotationAnimation.ts","import { Projectile, Vector, Rectangle, Animation, SpellType } from '../'\r\n\r\nexport class CollisionProjectile extends Projectile {\r\n\r\n    public distance: number;\r\n\r\n    constructor(velocity: Vector, area: Rectangle, distance: number, animation: Animation, damage: number) {\r\n        super(velocity, area, animation, 1);\r\n        this.damage = damage;\r\n        this.distance = distance;\r\n    }\r\n\r\n    public update(travelDistanceX: number, travelDistanceY: number, delta: number) {\r\n        super.update(travelDistanceX, travelDistanceY, delta);\r\n\r\n        this.distance -= Math.abs(travelDistanceX); \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/collisionProjectile.ts","export enum ProjectileType {\r\n    None = 0,\r\n    Arrow = 1,\r\n    Sword = 2,\r\n    NecroBall = 3\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/projectileType.ts","import { Animation } from '../../model';\r\n\r\nexport abstract class Cast {\r\n\r\n    public done: boolean = false;\r\n    public currentAnimation: Animation;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public update(delta: number) {\r\n    }\r\n\r\n    public cancel() {\r\n    }\r\n\r\n    public reset() {\r\n        this.done = false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/casts/cast.ts","import { Animation, Cast } from '../../model';\r\n\r\nexport class InstantCast extends Cast{\r\n\r\n    private onCast: (animation: Animation) => Animation;\r\n\r\n    constructor(animation: Animation, onCast: (animation: Animation) => Animation) {\r\n        super();\r\n        this.currentAnimation = animation;\r\n        this.onCast = onCast;\r\n    }\r\n\r\n    public update(delta: number) {\r\n        this.currentAnimation = this.onCast(this.currentAnimation);\r\n        this.currentAnimation.next(delta);\r\n            \r\n        if (this.currentAnimation.repetitions <= 0) {\r\n            this.done = true;\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.currentAnimation.reset();\r\n        this.currentAnimation.repetitions = 1;\r\n        super.reset();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/casts/instantCast.ts","import { Animation, Cast } from '../../model';\r\n\r\nexport class ChannelCast extends Cast {\r\n\r\n    public channeling: boolean = false;\r\n    public currentValue: number;\r\n    public lowerCurrentAnimation: Animation;\r\n    private onChannel: () => void;\r\n    private onCancel: () => void;\r\n    private defaultValue: number;\r\n    private maxValue: number;\r\n    private growth: number;\r\n    private delay: number;\r\n\r\n    constructor(channelAnimation: Animation, lowerChannelAnimation: Animation, onChannel: () => void, onCancel: () => void, defaultValue: number, maxValue: number, growth: number) {\r\n        super();\r\n        this.onChannel = onChannel;\r\n        this.onCancel = onCancel;\r\n        this.currentAnimation = channelAnimation;\r\n        this.lowerCurrentAnimation = lowerChannelAnimation;\r\n        this.defaultValue = defaultValue;\r\n        this.maxValue = maxValue;\r\n        this.growth = growth;\r\n        this.currentValue = this.defaultValue;\r\n    }\r\n\r\n    public update(delta: number) {\r\n\r\n        if(this.channeling) {\r\n            this.delay = 150;\r\n        }\r\n\r\n        if (this.delay > 0) {\r\n\r\n            this.currentAnimation.next(delta);\r\n            \r\n            if (this.currentValue >= this.maxValue) {\r\n                this.currentValue = this.maxValue;\r\n            } else {\r\n                this.currentValue += (delta * this.growth);\r\n            }\r\n\r\n            this.onChannel();\r\n\r\n        } else {\r\n            this.done = true;\r\n        }\r\n\r\n        this.delay -= delta;\r\n        this.channeling = false;\r\n    }\r\n\r\n    public resetValue() {\r\n        this.currentValue = this.defaultValue;\r\n    }\r\n\r\n    public cancel() {\r\n        this.onCancel();\r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/casts/channelCast.ts","import { Animation, Cast } from '../../model';\r\n\r\nexport class SpellCast extends Cast{\r\n\r\n    public size: number = 20;\r\n    public hasCast: boolean;\r\n    private onCast: (animation: Animation, size: number) => Animation;\r\n    private mainRepetion: number;\r\n\r\n    constructor(animation: Animation, mainRepetion: number, onCast: (animation: Animation, size: number) => Animation) {\r\n        super();\r\n        this.currentAnimation = animation;\r\n        this.onCast = onCast;\r\n        this.mainRepetion = mainRepetion;\r\n        this.hasCast = false;\r\n    }\r\n\r\n    public update(delta: number) {\r\n        \r\n        if(this.currentAnimation.repetitions == this.mainRepetion && !this.hasCast) {\r\n            this.currentAnimation = this.onCast(this.currentAnimation, this.size);\r\n            this.hasCast = true;\r\n        }\r\n        \r\n        this.currentAnimation.next(delta);\r\n        \r\n        if (this.currentAnimation.repetitions <= 0) {\r\n            this.done = true;\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.hasCast = false;\r\n        this.currentAnimation.repetitions = 4;\r\n        this.currentAnimation.reset();\r\n        super.reset();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/casts/spellCast.ts","import { Projectile, Vector, Rectangle, Animation, SpellType } from '../'\r\n\r\nexport class ParticleProjectile extends Projectile {\r\n\r\n    public distance: number;\r\n    private onUpdate: (area: Rectangle, inverse: boolean, offsetX: number) => void;\r\n    private offset: number;\r\n    private inverse: boolean;\r\n\r\n    constructor(velocity: Vector, area: Rectangle, animation: Animation, collisionRatio: number, distance: number, inverse: boolean, offset: number, onUpdate: (area: Rectangle, inverse: boolean, offsetX: number) => void, collisionArea?: Rectangle) {\r\n        super(velocity, area, animation, collisionRatio, collisionArea);\r\n\r\n        this.onUpdate = onUpdate;\r\n        this.distance = distance;\r\n        this.inverse = inverse;\r\n        this.offset = offset;\r\n    }\r\n\r\n    public update(travelDistanceX: number, travelDistanceY: number, delta: number) {\r\n\r\n        super.update(travelDistanceX, travelDistanceY, delta);\r\n\r\n        this.onUpdate(this.area, this.inverse, this.offset);\r\n        this.distance -= Math.abs(travelDistanceX); \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/animation/particleProjectile.ts","import { RenderHelper } from '../render';\r\nimport { Constants } from '../service/constants';\r\nimport { Tile, Vector } from './';\r\n\r\nexport class DynamicTile {\r\n\tpublic tile: Tile;\r\n\tpublic velocity: Vector;\r\n\tpublic verticalAxis: boolean;\r\n\tpublic textureCoordinates: number[];\r\n\tprivate inverse: boolean = false;\r\n\tprivate distance: number = 0;\r\n\tprivate maxDistance: number;\r\n\tprivate initialDown: boolean;\r\n\tprivate initialRight: boolean;\r\n\tprivate renderHelper = RenderHelper.getInstance();\r\n\tprivate constants = Constants.getInstance();\r\n\r\n\tprivate initialPosition: Vector;\r\n\r\n\tconstructor(tile: Tile, velocity: Vector, verticalAxis: boolean, maxDistance: number) {\r\n\t\tthis.tile = tile;\r\n\t\tthis.velocity = velocity;\r\n\t\tthis.verticalAxis = verticalAxis;\r\n\t\tthis.maxDistance = maxDistance;\r\n\r\n\t\tif(this.velocity.y > 0) {\r\n\t\t\tthis.initialDown = true;\r\n\t\t} else {\r\n\t\t\tthis.initialDown = false;\r\n\t\t}\r\n\r\n\t\tif(this.velocity.x > 0) {\r\n\t\t\tthis.initialRight = true;\r\n\t\t} else {\r\n\t\t\tthis.initialRight = false;\r\n\t\t}\r\n\r\n\t\tthis.textureCoordinates = this.renderHelper.getTiledTextureCoordinates(this.tile, [], this.constants.tileSize);\r\n\r\n\t\tthis.initialPosition = new Vector(tile.x, tile.y);\r\n\t}\r\n\r\n\tupdate(delta: number, travelDistance: number) {\r\n\t\tif (this.verticalAxis) {\r\n\t\t\tthis.calculateVerticalMovement(delta, travelDistance);\r\n\t\t} else {\r\n\t\t\tthis.calculateHorizontalMovement(delta, travelDistance);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate calculateVerticalMovement(delta: number, travelDistance: number) {\r\n\t\tthis.distance += Math.abs(travelDistance);\r\n\r\n\t\tif (this.distance >= this.maxDistance) {\r\n\t\t\tthis.distance = this.maxDistance;\r\n\t\t\tif(this.inverse) {\r\n\t\t\t\tthis.tile.y = this.initialPosition.y;\r\n\t\t\t} else {\r\n\t\t\t\tif(this.initialDown) {\r\n\t\t\t\t\tthis.tile.y = this.initialPosition.y + this.maxDistance;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.tile.y = this.initialPosition.y - this.maxDistance;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.turn();\r\n\t\t} else {\r\n\t\t\tthis.tile.y += travelDistance;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate calculateHorizontalMovement(delta: number, travelDistance: number) {\r\n\t\tthis.distance += Math.abs(travelDistance);\r\n\r\n\t\tif (this.distance >= this.maxDistance) {\r\n\t\t\tthis.distance = this.maxDistance;\r\n\t\t\tif(this.inverse) {\r\n\t\t\t\tthis.tile.x = this.initialPosition.x;\r\n\t\t\t} else {\r\n\t\t\t\tif(this.initialRight) {\r\n\t\t\t\t\tthis.tile.x = this.initialPosition.x + this.maxDistance;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.tile.x = this.initialPosition.x - this.maxDistance;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.turn();\r\n\t\t} else {\r\n\t\t\tthis.tile.x += travelDistance;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate turn() {\r\n\t\tthis.distance = 0;\r\n\t\tthis.inverse = !this.inverse;\r\n\t\tthis.velocity.invert();\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/dynamicTile.ts","import { TextureResource } from '../map/model/';\r\n\r\nexport class Constants {\r\n\r\n    private static instance: Constants = new Constants();\r\n\r\n    constrcuctor() {\r\n        if (Constants.instance) {\r\n            throw new Error(\"Static class cant be instanced!\");\r\n        }\r\n\r\n        Constants.instance = this;\r\n    }\r\n\r\n    public static getInstance() {\r\n        return Constants.instance;\r\n    }\r\n\r\n    public tileResources: TextureResource[] = [\r\n        new TextureResource(\"1tile.png\", [32, 32]),\r\n        new TextureResource(\"2tile.png\", [32, 32]),\r\n        new TextureResource(\"3tile.png\", [32, 32]),\r\n        new TextureResource(\"4tile.png\", [32, 32]),\r\n        new TextureResource(\"5tile.png\", [32, 32]),\r\n        new TextureResource(\"6tile.png\", [32, 32]),\r\n        new TextureResource(\"7tile.png\", [32, 32]),\r\n        new TextureResource(\"8tile.png\", [32, 32]),\r\n        new TextureResource(\"9tile.png\", [32, 32]),\r\n        new TextureResource(\"10tile.png\", [32, 32]),\r\n        new TextureResource(\"11tile.png\", [32, 32]),\r\n        new TextureResource(\"12tile.png\", [32, 32]),\r\n        new TextureResource(\"13tile.png\", [32, 32]),\r\n        new TextureResource(\"14tile.png\", [32, 32]),\r\n        new TextureResource(\"15tile.png\", [32, 32]),\r\n        new TextureResource(\"16tile.png\", [32, 32]),\r\n        new TextureResource(\"17tile.png\", [32, 32]),\r\n        new TextureResource(\"18tile.png\", [32, 32]),\r\n        new TextureResource(\"19tile.png\", [32, 32]),\r\n        new TextureResource(\"20tile.png\", [32, 32]),\r\n        new TextureResource(\"21tile.png\", [32, 32]),\r\n        new TextureResource(\"22tile.png\", [32, 32]),\r\n        new TextureResource(\"23tile.png\", [32, 32]),\r\n        new TextureResource(\"24tile.png\", [32, 32]),\r\n        new TextureResource(\"25tile.png\", [32, 32]),\r\n        new TextureResource(\"26tile.png\", [32, 32])\r\n    ];\r\n\r\n    public uiResources: TextureResource[] = [\r\n        new TextureResource(\"100ui.png\", [256, 128]),\r\n        new TextureResource(\"101ui.png\", [512, 512]),\r\n        new TextureResource(\"102ui.png\", [256, 256]),\r\n        new TextureResource(\"103ui.png\", [256, 256]),\r\n        new TextureResource(\"104ui.png\", [256, 256]),\r\n        new TextureResource(\"105ui.png\", [256, 256]),\r\n        new TextureResource(\"106ui.png\", [256, 256]),\r\n        new TextureResource(\"107ui.png\", [256, 256]),\r\n        new TextureResource(\"108ui.png\", [256, 256]),\r\n        new TextureResource(\"109ui.png\", [256, 256]),\r\n        new TextureResource(\"110ui.png\", [256, 256]),\r\n        new TextureResource(\"111ui.png\", [256, 256]),\r\n        new TextureResource(\"112ui.png\", [256, 256]),\r\n        new TextureResource(\"113ui.png\", [256, 256]),\r\n        new TextureResource(\"114ui.png\", [256, 256]),\r\n        new TextureResource(\"115ui.png\", [256, 256]),\r\n        new TextureResource(\"116ui.png\", [256, 256]),\r\n        new TextureResource(\"117ui.png\", [256, 256]),\r\n        new TextureResource(\"118ui.png\", [256, 256]),\r\n        new TextureResource(\"119ui.png\", [256, 256]),\r\n        new TextureResource(\"120ui.png\", [256, 256]),\r\n        new TextureResource(\"121ui.png\", [256, 256]),\r\n    ];\r\n\r\n    public tileSize: [number, number] = [32, 32];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/service/constants.ts","import { EnemyData } from './enemyData';\r\nimport { LevelData } from './levelData';\r\nimport { EnemyType } from './enemyType';\r\nimport { TextureResource } from './texture-resource';\r\nimport { TileAsset } from './tile-asset';\r\n\r\n\r\nexport { EnemyData, LevelData, EnemyType, TextureResource, TileAsset };\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map/model/index.ts","import { Rectangle } from '../../model';\r\nimport { EnemyType } from './enemyType';\r\n\r\nexport class EnemyData {\r\n    area: Rectangle;\r\n    type: EnemyType;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map/model/enemyData.ts","import { Rectangle, DynamicTileData, RenderableData } from '../../model';\r\n\r\nexport class LevelData {\r\n\t\r\n\tpublic name: string;\r\n\tpublic tiles: RenderableData[];\r\n\tpublic decorativeTiles: RenderableData[];\r\n\tpublic background: RenderableData;\r\n\tpublic dynamicTiles: DynamicTileData[];\r\n\tpublic enemies: RenderableData[];\r\n\tpublic player: [number, number];\r\n\tpublic camera: [number, number];\r\n\tpublic gameSize: [number, number];\r\n\tpublic end: [number, number];\r\n\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map/model/levelData.ts","export enum EnemyType {\r\n    swordman = 1\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map/model/enemyType.ts","export class TextureResource {\r\n    constructor(public name: string, public size: [number, number]) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map/model/texture-resource.ts","export class TileAsset {\r\n    \r\n    constructor(\r\n        public key: number,\r\n        public image: HTMLImageElement,\r\n        public size: [number, number],\r\n    ) {\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/map/model/tile-asset.ts","import { Rectangle } from './';\r\n\r\nexport class DynamicTileData\r\n{\r\n\tpublic tile: Rectangle;\r\n\tpublic key: number;\r\n\tpublic velocity: number;\r\n\tpublic inverse: boolean;\r\n\tpublic vertical: boolean;\r\n\tpublic distance: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/dynamicTileData.ts","import { Rectangle } from './';\r\n\r\nexport class RenderableData {\r\n    public area: Rectangle;\r\n    public key: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/renderable-data.ts","export class Progress {\r\n    public playerName: string;\r\n    public active = false;\r\n    public completedLevels: number;\r\n    public level: number;\r\n    public fire: number;\r\n    public frost: number;\r\n    public defence: number;\r\n    public hp: number;\r\n    public mana: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/model/progress.ts","import { Enemy } from './enemy';\r\nimport { Swordman } from './swordman';\r\nimport { Archer } from './archer';\r\nimport { Character } from './character';\r\nimport { Player } from './player';\r\nimport { Shadow } from './shadow';\r\nimport { State } from './state';\r\nimport { Apprentice } from './apprentice';\r\nimport { Screamer } from './screamer';\r\nimport { MasterSorcerer } from './masterSorcerer';\r\nimport { IEnemy } from \"./iEnemy\";\r\n\r\nexport {\r\n    Enemy,\r\n    Swordman,\r\n    Archer,\r\n    Character,\r\n    Player,\r\n    Shadow,\r\n    State,\r\n    Apprentice,\r\n    Screamer,\r\n    MasterSorcerer,\r\n    IEnemy\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/index.ts","import { Vector, Tile, Rectangle, Animation, SpellType } from '../model'\r\nimport { Character } from './character';\r\nimport { Player } from './player';\r\nimport { State, IEnemy } from './';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { CollisionData } from '../collision/collisionData';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { DeathType } from './deathType';\r\n\r\nexport class Enemy extends Character implements IEnemy {\r\n\r\n    public color = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n    public burnValue = 0;\r\n    protected direction = true;\r\n    protected oldDirection = true;\r\n    protected collisionDetection = CollisionDetection.getInstance();\r\n    protected nextToEdge: boolean;\r\n    protected idleAnimation: Animation;\r\n    protected idleToTrackingAnimation: Animation;\r\n    protected trackingAnimation: Animation;\r\n    protected trackingToInRangeTransitionAnimation: Animation;\r\n    protected trackingToIdleTransitionAnimation: Animation;\r\n    protected hitAnimation: Animation;\r\n    protected collisionData: CollisionData;\r\n    protected hitDamage = 0;\r\n    protected hp: number = 100;\r\n    protected freezeDamage: number = 0.08;\r\n    protected flameDamage: number = 0.12;\r\n    protected maxFreeze = this.hp / this.freezeDamage;\r\n    protected freezeValue = 0;\r\n    protected burnDamage = 0.2;\r\n    protected cinderValue = 0;\r\n    protected burnDurationFactor = 3;\r\n    protected hitAreaOffset = 40;\r\n    protected minDistance = 5;\r\n    protected searchAreaOffset = 150;\r\n    protected trackingTime = 0;\r\n    protected trackingMaxTime = 3000;\r\n    protected trackingSpeed = 0;\r\n    protected idleSpeed = 0;\r\n    protected hitting = false;\r\n    protected collisionArea: Rectangle;\r\n\r\n    protected currentState = State.Idle;\r\n\r\n    constructor(position: Vector, width: number, height: number) {\r\n        super(position, width, height);\r\n    }\r\n\r\n    public takeDamage(damage: number, type: SpellType) {\r\n        this.hp = this.hp - damage;\r\n        if (this.hp <= 0) {\r\n            if (type == SpellType.frostBlast) {\r\n                this.deathType = DeathType.freezeDeath;\r\n            } else if (type == SpellType.fireBlast) {\r\n                this.deathType = DeathType.fireDeath;\r\n            } else {\r\n                this.deathType = DeathType.swordDeath;\r\n            }\r\n\r\n            this.dead = true;\r\n        }\r\n    }\r\n\r\n    public burn() {\r\n\r\n        this.cinderValue += this.burnDurationFactor;\r\n        this.takeDamage(this.flameDamage, SpellType.fireBlast);\r\n\r\n        if (this.cinderValue > 300) {\r\n            this.burnValue += this.burnDurationFactor;\r\n        }\r\n    }\r\n\r\n    public setFreezeSpeed() {\r\n        this.actualSpeed = this.maxSpeed * Math.pow(0.997, this.freezeValue);\r\n \r\n        if (this.actualSpeed < this.maxSpeed * 0.3) {\r\n            this.actualSpeed = this.maxSpeed * 0.3;\r\n        }\r\n    }\r\n\r\n    public freeze() {\r\n        this.freezeValue++;\r\n        if (this.actualSpeed > this.maxSpeed * 0.3) {\r\n            this.actualSpeed = this.actualSpeed * 0.997;\r\n        }\r\n\r\n        this.takeDamage(this.freezeDamage, SpellType.frostBlast);\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player): void {\r\n        this.toMove.x = this.velocity.x * delta;\r\n        this.toMove.y = this.velocity.y * delta;\r\n        this.nextToEdge = false;\r\n\r\n        if (this.actualSpeed < this.maxSpeed) {\r\n            this.actualSpeed = this.actualSpeed * 1.005;\r\n        }\r\n\r\n        this.collisionData = this.collisionDetection.collisionDetection(tiles, [], this, this.toMove, delta);\r\n\r\n        this.fall(delta);\r\n\r\n        let collisionArea = this.getCollisionArea();\r\n\r\n        let leftEdge = this.collisionDetection.fastCheckEnviroment(new Rectangle(collisionArea.x, collisionArea.y + collisionArea.height, 1, 30), tiles);\r\n        let rightEdge = this.collisionDetection.fastCheckEnviroment(new Rectangle(collisionArea.x + collisionArea.width, collisionArea.y + collisionArea.height, 1, 30), tiles);\r\n\r\n        if (leftEdge && rightEdge) {\r\n            this.nextToEdge = true;\r\n        } else {\r\n            if (this.inverse) {\r\n                if (leftEdge) {\r\n                    this.direction = false;\r\n                    this.nextToEdge = true;\r\n                }\r\n            } else {\r\n                if (rightEdge) {\r\n                    this.direction = true;\r\n                    this.nextToEdge = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.collisionData.groundCollision) {\r\n            this.velocity.y = 0;\r\n        }\r\n\r\n        if (this.collisionData.wallCollision) {\r\n            if (this.collisionData.normalX == 1) {\r\n                this.nextToEdge = true;\r\n                this.direction = !this.direction;\r\n            } else {\r\n                this.nextToEdge = true;\r\n                this.direction = !this.direction;\r\n            }\r\n            this.velocity.x = 0;\r\n        }\r\n\r\n        let freezePercent = this.freezeValue / this.maxFreeze;\r\n        this.updateColor([1.0 + (freezePercent * 1.0), 1.0 + (freezePercent * 2.0), 1.0 + (freezePercent * 2.0), 1.0]);\r\n\r\n        this.updateBurnDamage();\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea = new Rectangle(0, 0, 0, 0);\r\n        return collisionArea;\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        this.currentAnimation = this.idleAnimation;\r\n        this.maxSpeed = this.idleSpeed;\r\n        if (this.inRange(player, this.searchAreaOffset, tiles)) {\r\n            this.currentState = State.IdleToTrackingTransition;\r\n        }\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n\r\n    }\r\n\r\n    protected patrol(delta: number) {\r\n        if (this.oldDirection != this.direction) {\r\n            this.oldDirection = this.direction;\r\n        }\r\n\r\n        if (this.oldDirection) {\r\n            this.moveLeft(delta);\r\n        } else {\r\n            this.moveRight(delta);\r\n        }\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        this.currentAnimation = this.hitAnimation;\r\n        if (!this.inRange(player, this.hitAreaOffset, tiles) && this.hitAnimation.frameIndex == 0) {\r\n            this.currentState = State.Tracking;\r\n        }\r\n\r\n        this.moveToPlayer(delta, player, tiles, 10);\r\n    }\r\n\r\n    protected npcAction(delta: number, player: Player, tiles: Tile[]) {\r\n\r\n        switch (this.currentState) {\r\n            case State.Idle: this.idle(delta, player, tiles);\r\n                break;\r\n\r\n            case State.IdleToTrackingTransition: this.idleToTrackingTransition(delta);\r\n                break;\r\n\r\n            case State.TrackingToIdleTransition: this.trackingToIdleTransition(delta);\r\n                break;\r\n\r\n            case State.Tracking: this.track(player, delta, tiles, 10);\r\n                break;\r\n\r\n            case State.TrackingToInRangeTransition: this.trackingToInRangeTransition(delta);\r\n                break;\r\n\r\n            case State.InHitRange: this.hit(delta, player, tiles);\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected checkStop(player: Player, tiles: Tile[]) {\r\n        if (this.nextToEdge || this.inRange(player, this.minDistance, tiles)) {\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    protected stop() {\r\n        this.velocity.x = 0;\r\n    }\r\n\r\n    protected track(player: Player, delta: number, tiles: Tile[], gapSize: number) {\r\n        this.currentAnimation = this.trackingAnimation;\r\n        this.maxSpeed = this.trackingSpeed;\r\n\r\n        this.trackingTime -= delta;\r\n        if (this.trackingTime <= 0) {\r\n            this.currentState = State.TrackingToIdleTransition;\r\n        }\r\n\r\n        if (this.inRange(player, this.searchAreaOffset, tiles)) {\r\n            this.trackingTime = this.trackingMaxTime;\r\n        }\r\n\r\n        if (this.inRange(player, this.hitAreaOffset, tiles)) {\r\n            this.currentState = State.TrackingToInRangeTransition;\r\n        }\r\n\r\n        this.moveToPlayer(delta, player, tiles, gapSize);\r\n    }\r\n\r\n    protected moveToPlayer(delta: number, player: Player, tiles: Tile[], gapSize: number) {\r\n        if (Math.abs(player.position.x - this.position.x) > gapSize) {\r\n            if (player.position.x < this.position.x) {\r\n                this.moveLeft(delta);\r\n\r\n                this.checkStop(player, tiles);\r\n            } else if (player.position.x > this.position.x) {\r\n                this.moveRight(delta);\r\n\r\n                this.checkStop(player, tiles);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number, tiles: Tile[]) {\r\n\r\n    }\r\n\r\n    protected rand(min: number, max: number) {\r\n        return min + (Math.random() * (max - min))\r\n    }\r\n\r\n    protected getDeltaPosition(player: Player, offsetX: number, offsetY: number) {\r\n        return new Vector(player.middlePosition.x - offsetX - this.position.x, player.middlePosition.y - offsetY - this.position.y);\r\n    }\r\n\r\n    private updateBurnDamage() {\r\n        if (this.burnValue > 0) {\r\n            this.takeDamage(this.burnDamage, SpellType.fireBlast);\r\n            this.burnValue--;\r\n        }\r\n    }\r\n\r\n    private updateColor(color: number[]) {\r\n        let colorColl: number[] = [];\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            colorColl.push(...color);\r\n        }\r\n\r\n        this.color = colorColl;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/enemy.ts","import { Vector, Animation, Rectangle } from '../model';\r\nimport { Gravity } from '../forces/gravity';\r\nimport { DeathType } from './deathType';\r\n\r\nexport abstract class Character {\r\n    public position: Vector;\r\n\tpublic toMove: Vector = new Vector(0, 0);\r\n    public dead: boolean = false;\r\n\tpublic deathType: DeathType;\r\n\tpublic inverse: boolean = false;\r\n\tpublic width: number;\r\n\tpublic height: number;\r\n    public currentAnimation: Animation;\r\n\tprotected velocity: Vector = new Vector(0, 0);\r\n    protected maxSpeed: number = 0.3;\r\n\tprotected actualSpeed: number = 0.3;\r\n    protected acceleration: number = 0.009;\r\n\tprotected moving: boolean = false;\r\n    protected gravityStrength: number = 0.0025;\r\n    protected gravity: Gravity = new Gravity(this.gravityStrength);\r\n\r\n    constructor(position: Vector, width: number, height: number) {\r\n        this.position = position;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public moveRight(delta: number) {\r\n\r\n\t\tif (this.velocity.x < this.actualSpeed) {\r\n\t\t\tthis.velocity.x += this.acceleration * delta;\r\n\t\t}\r\n\r\n\t\tif (this.velocity.x > this.actualSpeed) {\r\n\t\t\tthis.velocity.x = this.actualSpeed;\r\n\t\t}\r\n\r\n\t\tthis.inverse = false;\r\n\t\tthis.moving = true;\r\n\t}\r\n\r\n    public moveLeft(delta: number) {\r\n        if (this.velocity.x > -this.actualSpeed) {\r\n\t\t\tthis.velocity.x -= this.acceleration * delta;\r\n\t\t}\r\n\r\n\t\tif (this.velocity.x < this.actualSpeed) {\r\n\t\t\tthis.velocity.x = -this.actualSpeed;\r\n\t\t}\r\n\r\n\t\tthis.inverse = true;\r\n\t\tthis.moving = true;\r\n    }\r\n\r\n    public fall(delta: number) {\r\n\t\tthis.gravity.apply(this.velocity, delta);\r\n\t}\r\n\r\n\tpublic getCollisionArea() {\r\n\t\tvar collisionArea = new Rectangle(this.position.x, this.position.y, this.width, this.height);\r\n\r\n\t\treturn collisionArea;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/character.ts","export enum DeathType {\r\n    fallDeath = 0,\r\n    swordDeath = 1,\r\n    freezeDeath = 2,\r\n    fireDeath = 3\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/deathType.ts","import { Enemy } from './enemy';\r\nimport { Player } from './player';\r\nimport { Context } from '../context';\r\nimport { Vector, Rectangle, Tile, Meele, Animation, SpellType } from '../model';\r\nimport { TextureMapper } from '../render/textureMapper';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { DeathType } from './deathType';\r\nimport { State } from './state';\r\n\r\nexport class Swordman extends Enemy {\r\n\r\n    public hitCollisionAreas: Rectangle[] = [];\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    private meeleAnimation: Animation;\r\n    private hitOffset = 40;\r\n    protected hitting = false;\r\n    protected trackingSpeed = 0.2;\r\n    protected idleSpeed = 0.1;\r\n    protected minDistance = 5;\r\n\r\n    constructor(position: Vector, width: number, height: number, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler) {\r\n        super(position, width, height);\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n        this.maxSpeed = 0.1;\r\n        this.actualSpeed = this.maxSpeed;\r\n\r\n        this.idleAnimation = new Animation([228, 227, 229, 227]);\r\n\r\n        this.idleAnimation.timeToChange = 150;\r\n\r\n        this.hitAnimation = new Animation([231, 231, 232, 230, 212]);\r\n        \r\n        this.trackingAnimation = new Animation([211, 209, 211, 210]);\r\n\r\n    }\r\n\r\n    public takeDamage(damage: number, type: SpellType) {\r\n        super.takeDamage(damage, type);\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        this.npcAction(delta, player, tiles);\r\n        super.update(delta, tiles, player);\r\n\r\n        if (this.currentAnimation == this.hitAnimation) {\r\n            this.currentAnimation.next(delta);\r\n        } else {\r\n            if (this.velocity.x != 0 || this.collisionData.wallCollision) {\r\n                this.currentAnimation.next(delta);\r\n            }\r\n        }\r\n\r\n        this.setHitAnimation();\r\n        this.checkHitCollisionAreas(player);\r\n\r\n        \r\n    }\r\n\r\n    private checkHitCollisionAreas(player: Player) {\r\n        if (this.hitAnimation) {\r\n            if (this.hitAnimation.frameIndex == 1 && !this.hitting) {\r\n                this.hitting = true;\r\n                this.projectileHandler.createCollisionProjectile(this.position, this.width, this.inverse, 30, new Vector(0.5, 0.6));\r\n            }\r\n\r\n            if (this.hitAnimation.frameIndex == 0) {\r\n                this.hitting = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        super.idle(delta, player, tiles);\r\n        this.patrol(delta);\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n        this.currentState = State.Tracking;\r\n        this.maxSpeed = this.trackingSpeed;\r\n        this.actualSpeed = this.maxSpeed;\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n        this.currentState = State.InHitRange;\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n        this.maxSpeed = this.idleSpeed;\r\n        this.actualSpeed = this.maxSpeed;\r\n        this.currentState = State.Idle;\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number) {\r\n\r\n        let area: Rectangle;\r\n\r\n        if (this.inverse) {\r\n            area = new Rectangle(this.position.x - offset, this.position.y, offset, this.height);\r\n        } else {\r\n            area = new Rectangle(this.position.x, this.position.y, offset + this.width, this.height);\r\n        }\r\n\r\n        return this.collisionDetection.aabbCheck(area, player.getCollisionArea());\r\n\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        super.hit(delta, player, tiles);\r\n        if (this.meeleAnimation) {\r\n            if (this.meeleAnimation.repetitions <= 0) {\r\n                this.createHit(player);\r\n            }\r\n        } else {\r\n            this.createHit(player);\r\n        }\r\n    }\r\n\r\n    private createHit(player: Player) {\r\n        if (!this.inverse) {\r\n            this.meeleAnimation = this.animationHandler.swordscut_a(new Vector(this.position.x + this.hitOffset, this.position.y), 50, !this.inverse);\r\n        } else {\r\n            this.meeleAnimation = this.animationHandler.swordscut_a(new Vector(this.position.x - this.hitOffset, this.position.y), 50, !this.inverse);\r\n        }\r\n    }\r\n\r\n    private setHitAnimation() {\r\n        if (this.meeleAnimation) {\r\n            if (!this.inverse) {\r\n                this.meeleAnimation.areaToRender.x = this.position.x + this.hitOffset;\r\n                this.meeleAnimation.areaToRender.y = this.position.y;\r\n            } else {\r\n                this.meeleAnimation.areaToRender.x = this.position.x - this.hitOffset;\r\n                this.meeleAnimation.areaToRender.y = this.position.y;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea = new Rectangle(this.position.x + 10, this.position.y, this.width - 20, 55);\r\n\r\n        return collisionArea;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/swordman.ts","export enum State {\r\n    Idle,\r\n    IdleToTrackingTransition,\r\n    TrackingToIdleTransition,\r\n    Tracking,\r\n    TrackingToInRangeTransition,\r\n    InHitRange\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/state.ts","import { Enemy } from './enemy';\r\nimport { Player } from './player';\r\nimport { Context } from '../context';\r\nimport { Vector, Rectangle, Tile, Meele, Animation, SpellType, DebugElement } from '../model';\r\nimport { TextureMapper } from '../render/textureMapper';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { DebugHandler } from '../handler/debugHandler';\r\nimport { DeathType } from './deathType';\r\nimport { State } from './';\r\n\r\nexport class Archer extends Enemy {\r\n\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    protected hitAreaOffset: number = 600;\r\n    protected searchAreaOffset: number = 800;\r\n    protected hp = 50;\r\n    private arrowVelocity = 0.5;\r\n    private shoot = false;\r\n    public debugHandler = DebugHandler.getInstance();\r\n\r\n    constructor(position: Vector, width: number, height: number, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler) {\r\n        super(position, width, height);\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n\r\n        this.maxSpeed = 0.1;\r\n        this.actualSpeed = this.maxSpeed;\r\n\r\n        this.idleAnimation = new Animation([267, 266, 267, 265]);\r\n\r\n        this.hitAnimation = new Animation([262, 264, 263, 264]);\r\n\r\n        this.trackingAnimation = new Animation([267, 266, 267, 265]);\r\n\r\n        this.trackingAnimation.timeToChange = 175;\r\n\r\n        this.hitAnimation.timeToChange = 300;\r\n\r\n        this.currentAnimation = this.hitAnimation;\r\n\r\n        this.idleAnimation.timeToChange = 175;\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        this.npcAction(delta, player, tiles);\r\n        super.update(delta, tiles, player);\r\n\r\n        this.currentAnimation.next(delta);\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea = new Rectangle(this.position.x + 10, this.position.y - 5, this.width - 20, 55);\r\n\r\n        return collisionArea;\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        super.idle(delta, player, tiles);\r\n        this.patrol(delta);\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        super.hit(delta, player, tiles);\r\n\r\n        if(this.hitAnimation.frameIndex == 3) {\r\n            if(!this.shoot) {\r\n                this.shoot = true;\r\n                let velocity = this.calculatePath(player, this.inverse);\r\n                let bowPosition = new Vector(this.position.x, this.position.y + 20); \r\n                this.projectileHandler.createArrow(bowPosition, this.inverse, velocity);\r\n            }\r\n        } else {\r\n            this.shoot = false;\r\n        }\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n        this.currentState = State.Tracking;\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n        this.currentState = State.InHitRange;\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n        this.currentState = State.Idle;\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number, tiles: Tile[]) {\r\n\r\n        let deltaPos = this.getDeltaPosition(player, 10, 0);\r\n        let magnitude = deltaPos.magnitude();\r\n        \r\n        if(magnitude < this.searchAreaOffset) {\r\n            if(this.clearShoot(deltaPos, tiles)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private clearShoot(deltaPos: Vector, tiles: Tile[]) {\r\n        let clear = true;\r\n        let pathBlocks = this.getPathBlocks(deltaPos);\r\n\r\n        //this.debugHandler.debugRects.push(...pathBlocks);\r\n\r\n        for(let block of pathBlocks) {\r\n            if(!this.collisionDetection.fastCheckEnviroment(block, tiles)){\r\n                clear = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return clear;\r\n    }\r\n\r\n    private getPathBlocks(deltaPos: Vector) {\r\n\r\n        let blocksize = 20;\r\n        let magnitude = deltaPos.magnitude();\r\n        let direction = deltaPos.copy(deltaPos);\r\n        let bowPosition = new Vector(this.position.x, this.position.y + 10); \r\n\r\n        direction.normalize();\r\n\r\n        let blocks: Rectangle[] = [];\r\n\r\n        for(let i = 0; i < Math.floor(magnitude/blocksize); i++) {\r\n\r\n            let newMagnitude = magnitude - (i * blocksize);\r\n\r\n            blocks.push(new Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n        }\r\n\r\n        return blocks;\r\n    }\r\n    \r\n    private getDeltaVelocity(player: Player, deltaPos: Vector) {\r\n        \r\n        let velocity = player.getVelocity();\r\n        let deltaVelocity = velocity.x * velocity.x * 800;\r\n        if(deltaPos.x < 0) {\r\n            if(velocity.x > 0) {\r\n                return -deltaVelocity;\r\n            } else {\r\n                return deltaVelocity;\r\n            }\r\n        } else {\r\n            if(velocity.x > 0) {\r\n                return deltaVelocity;\r\n            } else {\r\n                return -deltaVelocity;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    private calculatePath(player: Player, inverse: boolean) {\r\n        let deltaPos = this.getDeltaPosition(player, 10, 0);\r\n\r\n        deltaPos.y = deltaPos.y - ((deltaPos.x * deltaPos.x * 0.00063) + this.getDeltaVelocity(player, deltaPos));\r\n        \r\n        let velocity = new Vector(deltaPos.x, deltaPos.y * this.rand(0.85, 1.15));\r\n        velocity.normalize();\r\n        velocity.multiply(this.arrowVelocity);\r\n        return velocity;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/archer.ts","import { Particle } from '../particle/particle'\r\nimport { Vector, Tile, Rectangle, DebugElement } from '../model';\r\nimport { RenderHelper } from '../render/renderHelper';\r\nimport { RenderCall } from '../render/renderCall';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\n\r\nexport class DebugHandler {\r\n\r\n    public debugRects: Rectangle[] = [];\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private static instance: DebugHandler = new DebugHandler();\r\n\r\n    constructor() {\r\n\t\tif (DebugHandler.instance) {\r\n\t\t\tthrow new Error(\"Static class cant be instanced!\");\r\n\t\t}\r\n\r\n\t\tDebugHandler.instance = this;\r\n\t}\r\n\r\n\tpublic static getInstance() {\r\n\t\treturn DebugHandler.instance;\r\n\t}\r\n\r\n    createRenderCall(renderCall: RenderCall) {\r\n\r\n        for(let rect of this.debugRects) {\r\n            renderCall.vertecies = this.renderHelper.getVertecies(rect.x, rect.y, rect.width, rect.height, renderCall.vertecies);\r\n            renderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, 1);\r\n\t\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t\t}\r\n        \r\n        return renderCall;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/debugHandler.ts","import { Vector, Rectangle, Sprite, Animation, SpellType, StickyAnimation, DebugElement, Tile, DynamicTile, ChannelCast, Progress } from '../model';\r\nimport { RenderCall, ColorRenderCall, RenderHelper } from '../render';\r\nimport { Context } from '../';\r\nimport { CollisionData } from '../collision';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\nimport { SpellHandler } from '../handler/spellHandler';\r\nimport { Drag } from '../forces/drag';\r\nimport { Character } from './character';\r\nimport { DeathType } from './deathType';\r\nimport { DebugHandler } from '../handler/debugHandler';\r\n\r\nexport class Player extends Character {\r\n\r\n\tpublic defaultJumpSpeed: number = -0.7;\r\n\tpublic jumpSpeed: number = this.defaultJumpSpeed;\r\n\tpublic damageAnimations: StickyAnimation[] = [];\r\n\tpublic hp: number;\r\n\tpublic mana: number;\r\n\tpublic stunned = false;\r\n\tpublic lift: DynamicTile = null;\r\n\tpublic liftVelocity = new Vector(0, 0);\r\n\tpublic middlePosition = new Vector(0, 0);\r\n\tprivate collisionDetection = CollisionDetection.getInstance();\r\n\tprivate projectileHandler: ProjectileHandler;\r\n\tprivate animationHandler: AnimationHandler;\r\n\tprivate particleHandler: ParticleHandler;\r\n\tprivate spellHandler: SpellHandler;\r\n\tprivate drag: number = 0.0015;\r\n\tprivate externalDragForce: number = 0.0005;\r\n\tprivate dragForce: Drag = new Drag(this.drag);\r\n\tprivate externalDrag = new Drag(this.externalDragForce);\r\n\r\n\tprivate stunnedAnimation: Animation;\r\n\tprivate idleTime = 3000;\r\n\tprivate idleTimeChange = 3000;\r\n\tprivate jumping: boolean = false;\r\n\tprivate inJump = false;\r\n\tprivate renderHelper = RenderHelper.getInstance();\r\n\tprivate context: Context;\r\n\tprivate manaRegen = 1;\r\n\tprivate maxMana: number;\r\n\tprivate externalVelocity: Vector = new Vector(0, 0);\r\n\r\n\tprivate lowerAnimation: Animation;\r\n\tprivate upperAnimation: Animation;\r\n\r\n\tprivate lowerIdleAnimation: Animation;\r\n\tprivate upperIdleAnimation: Animation;\r\n\r\n\tprivate lowerJumpAnimation: Animation;\r\n\tprivate upperJumpAnimation: Animation;\r\n\r\n\tprivate lowerRunningAnimation: Animation;\r\n\tprivate upperRunningAnimation: Animation;\r\n\r\n\tprivate lowerStillAnimation: Animation;\r\n\tprivate upperStillAnimation: Animation;\r\n\r\n\tprivate onGroundTimer = 0;\r\n\tprivate shieldTextureCoords = this.renderHelper.getTextureCoordinates([], 199);\r\n\r\n\tprivate debugHandler = DebugHandler.getInstance();\r\n\r\n\tconstructor(position: Vector, context: Context, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler, particleHandler: ParticleHandler, width: number, height: number, hp: number, mana: number, progress: Progress, fireLevel: number, frostLevel: number, shieldLevel: number) {\r\n\t\tsuper(position, width, height);\r\n\t\tthis.context = context;\r\n\t\tthis.projectileHandler = projectileHandler;\r\n\t\tthis.animationHandler = animationHandler;\r\n\t\tthis.particleHandler = particleHandler;\r\n\t\tthis.spellHandler = new SpellHandler(this.animationHandler, this.projectileHandler, this.particleHandler, this, fireLevel, frostLevel, shieldLevel);\r\n\r\n\t\tthis.lowerIdleAnimation = new Animation([162]);\r\n\t\tthis.upperIdleAnimation = new Animation([163]);\r\n\r\n\t\tthis.upperRunningAnimation = new Animation([170, 171, 172, 170, 173, 174]);\r\n\t\tthis.upperRunningAnimation.timeToChange = 150;\r\n\r\n\t\tthis.lowerRunningAnimation = new Animation([165, 166, 167, 165, 168, 169]);\r\n\t\tthis.lowerRunningAnimation.timeToChange = 150;\r\n\r\n\t\tthis.stunnedAnimation = new Animation([60, 61, 62, 63]);\r\n\t\tthis.stunnedAnimation.timeToChange = 200;\r\n\r\n\t\tthis.lowerJumpAnimation = new Animation([160]);\r\n\r\n\t\tthis.upperJumpAnimation = new Animation([161]);\r\n\r\n\t\tthis.lowerStillAnimation = new Animation([165]);\r\n\r\n\t\tthis.upperStillAnimation = new Animation([170]);\r\n\r\n\t\tthis.hp = hp;\r\n\t\tthis.mana = mana;\r\n\t\tthis.maxMana = this.mana;\r\n\r\n\t\tthis.lowerAnimation = this.lowerIdleAnimation;\r\n\t\tthis.upperAnimation = this.upperIdleAnimation;\r\n\r\n\r\n\t}\r\n\r\n\tpublic takeDamage(damage: number) {\r\n\t\tthis.hp -= damage;\r\n\r\n\t\tif (this.hp <= 0) {\r\n\t\t\tthis.hp = 0;\r\n\t\t\tthis.deathType = DeathType.swordDeath;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic hardHit(inverse: boolean, x: number) {\r\n\t\tthis.stun();\r\n\t\tthis.velocity.x = 0;\r\n\t\tif (inverse) {\r\n\t\t\tthis.externalVelocity.x += x;\r\n\t\t} else {\r\n\t\t\tthis.externalVelocity.x -= x;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic useMana(mana: number) {\r\n\r\n\t\tif (this.mana - mana <= 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.mana -= mana;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic regenMana() {\r\n\t\tthis.mana += this.manaRegen;\r\n\r\n\t\tif (this.mana > this.maxMana) {\r\n\t\t\tthis.mana = this.maxMana;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getVelocity() {\r\n\t\treturn new Vector(this.velocity.x + this.externalVelocity.x + this.liftVelocity.x, this.velocity.y + this.externalVelocity.y + this.liftVelocity.y);\r\n\t}\r\n\r\n\tpublic isMoving() {\r\n\t\treturn this.velocity.x == 0;\r\n\t}\r\n\r\n\tpublic createRenderCall(renderCall: RenderCall) {\r\n\r\n\r\n\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n\t\tif(this.inverse) {\r\n\t\t\trenderCall.vertecies = this.renderHelper.getInverseVertecies(this.position.x, this.position.y, this.width, this.height, renderCall.vertecies);\r\n\t\t} else {\r\n\t\t\trenderCall.vertecies = this.renderHelper.getVertecies(this.position.x, this.position.y, this.width, this.height, renderCall.vertecies);\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (this.stunned) {\r\n\t\t\trenderCall.textureCoords.push.apply(renderCall.textureCoords, this.stunnedAnimation.getCurrentFrame());\r\n\t\t} else {\r\n\t\t\trenderCall.textureCoords.push.apply(renderCall.textureCoords, this.upperAnimation.getCurrentFrame());\r\n\r\n\t\t\tthis.renderLower(renderCall);\r\n\r\n\t\t\tif (this.spellHandler.castingShield) {\r\n\t\t\t\tthis.renderShield(renderCall);\r\n\t\t\t\tthis.spellHandler.castingShield = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn renderCall;\r\n\t}\r\n\r\n\tpublic shieldExplosion(inverse: boolean) {\r\n\t\tthis.particleHandler.createShieldExplosionEffect(this.getCalculatedPos(this.position, 0), this.inverse);\r\n\t\tthis.hardHit(inverse, 0.7);\r\n\t}\r\n\r\n\tpublic getShieldCollidables() {\r\n\t\tif (this.spellHandler.castingShield) {\r\n\t\t\treturn this.spellHandler.shieldCollidables;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic renderLower(renderCall: RenderCall) {\r\n\r\n\t\tlet call = new RenderCall();\r\n\t\tlet x: number = this.position.x;\r\n\t\tlet x1: number;\r\n\t\tlet x2: number;\r\n\t\tlet textureNumber: number;\r\n\r\n\t\tif (this.inverse) {\r\n\t\t\tx2 = x;\r\n\t\t\tx1 = x + (this.width);\r\n\t\t} else {\r\n\t\t\tx2 = x + (this.width);\r\n\t\t\tx1 = x;\r\n\t\t}\r\n\r\n\t\tlet y1 = this.position.y;\r\n\t\tlet y2 = this.position.y + (this.height);\r\n\r\n\t\tcall.vertecies = [\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx2, y1,\r\n\t\t\tx1, y1,\r\n\t\t\tx2, y2,\r\n\t\t\tx1, y2\r\n\t\t];\r\n\r\n\t\trenderCall.textureCoords.push.apply(renderCall.textureCoords, this.lowerAnimation.getCurrentFrame());\r\n\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t\trenderCall.vertecies.push.apply(renderCall.vertecies, call.vertecies);\r\n\r\n\t}\r\n\r\n\tpublic update(tiles: Tile[], dynamicTiles: DynamicTile[], delta: number) {\r\n\r\n\t\tlet collisionData = this.collisionDetection.collisionDetection(tiles, dynamicTiles, this, this.toMove, delta);\r\n\r\n\t\tthis.middlePosition.x = (this.position.x + this.width/2);\r\n\t\tthis.middlePosition.y = this.position.y;\r\n\r\n\t\tif (this.lift == null) {\r\n\t\t\tthis.fall(delta);\r\n\t\t} else {\r\n\t\t\tif (collisionData.groundCollision) {\r\n\t\t\t\tthis.liftVelocity = new Vector(0, 0)\r\n\t\t\t\tthis.lift = null;\r\n\t\t\t}\r\n\t\t\tcollisionData.groundCollision = true;\r\n\t\t\tcollisionData.normalY = -1;\r\n\t\t}\r\n\r\n\t\tif (collisionData.lift != null && collisionData.groundCollision && collisionData.normalY == -1) {\r\n\t\t\tthis.lift = collisionData.lift;\r\n\t\t}\r\n\r\n\t\tif (this.deathType) {\r\n\t\t\tif (this.deathType == DeathType.swordDeath) {\r\n\t\t\t\tthis.dead = true;\r\n\t\t\t\tthis.projectileHandler.createPlayerSword_death(this.position, this.inverse);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionData.groundCollision) {\r\n\t\t\tthis.velocity.y = 0;\r\n\r\n\t\t\tif (collisionData.normalY == -1) {\r\n\t\t\t\tthis.inJump = false;\r\n\t\t\t\tif (this.jumping) {\r\n\t\t\t\t\tthis.liftVelocity = new Vector(0, 0)\r\n\t\t\t\t\tthis.lift = null;\r\n\t\t\t\t\tthis.idleTime = 0;\r\n\t\t\t\t\tthis.velocity.y = this.jumpSpeed;\r\n\t\t\t\t\tthis.inJump = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.onGroundTimer = 50;\r\n\r\n\t\t\t} else if (this.onGroundTimer >= 0) {\r\n\t\t\t\tcollisionData.fallDeath = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionData.fallDeath) {\r\n\t\t\tthis.dead = true;\r\n\t\t\tthis.animationHandler.fallDeath(this.position);\r\n\t\t}\r\n\r\n\t\tif (collisionData.wallCollision) {\r\n\t\t\tthis.velocity.x = 0;\r\n\t\t\tthis.externalVelocity.x = 0;\r\n\t\t}\r\n\r\n\t\tif (this.velocity.x != 0 || collisionData.wallCollision) {\r\n\t\t\tthis.idleTime = 0;\r\n\t\t} else {\r\n\t\t\tthis.idleTime += delta;\r\n\t\t\tthis.lowerRunningAnimation.reset();\r\n\t\t\tthis.upperRunningAnimation.reset();\r\n\t\t}\r\n\r\n\t\tif (!this.moving) {\r\n\t\t\tif (this.externalVelocity.x != 0) {\r\n\t\t\t\tthis.externalDrag.apply(this.externalVelocity, delta);\r\n\t\t\t} else {\r\n\t\t\t\tthis.dragForce.apply(this.velocity, delta);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.spellHandler.update(delta);\r\n\r\n\t\tif (this.inJump) {\r\n\t\t\tthis.lowerAnimation = this.lowerJumpAnimation;\r\n\t\t} else if (this.moving || this.velocity.x != 0) {\r\n\t\t\tthis.lowerAnimation = this.lowerRunningAnimation;\r\n\t\t} else {\r\n\t\t\tthis.lowerAnimation = this.lowerStillAnimation;\r\n\t\t}\r\n\r\n\t\tif (this.stunned) {\r\n\t\t\tthis.stunnedAnimation.next(delta);\r\n\t\t\tthis.spellHandler.castingShield = false;\r\n\t\t\tif (this.stunnedAnimation.repetitions == 0) {\r\n\t\t\t\tthis.stunned = false;\r\n\t\t\t}\r\n\t\t} else if (this.spellHandler.currentCast) {\r\n\t\t\tif (this.spellHandler.currentCast instanceof ChannelCast) {\r\n\t\t\t\tthis.lowerAnimation = this.spellHandler.currentCast.lowerCurrentAnimation;\r\n\t\t\t}\r\n\r\n\t\t\tthis.upperAnimation = this.spellHandler.currentCast.currentAnimation;\r\n\t\t} else if (this.inJump) {\r\n\t\t\tthis.upperAnimation = this.upperJumpAnimation;\r\n\t\t} else if (this.idleTime >= this.idleTimeChange) {\r\n\t\t\tthis.lowerAnimation = this.lowerIdleAnimation;\r\n\t\t\tthis.upperAnimation = this.upperIdleAnimation;\r\n\t\t} else if (this.moving || this.velocity.x != 0) {\r\n\t\t\tthis.upperRunningAnimation.frameIndex = this.lowerRunningAnimation.frameIndex;\r\n\t\t\tthis.upperRunningAnimation.lastChange = this.lowerRunningAnimation.lastChange;\r\n\r\n\t\t\tthis.upperAnimation = this.upperRunningAnimation;\r\n\t\t\tthis.lowerAnimation = this.lowerRunningAnimation;\r\n\r\n\t\t} else {\r\n\t\t\tthis.upperAnimation = this.upperStillAnimation;\r\n\t\t\tthis.lowerAnimation = this.lowerStillAnimation;\r\n\t\t}\r\n\r\n\t\tthis.lowerAnimation.next(delta);\r\n\t\tthis.upperAnimation.next(delta);\r\n\r\n\t\tthis.jumping = false;\r\n\t\tthis.moving = false;\r\n\r\n\t\tlet totalVelocity = this.getVelocity();\r\n\t\tthis.toMove.x = totalVelocity.x * delta;\r\n\t\tthis.toMove.y = totalVelocity.y * delta;\r\n\r\n\t\tthis.updateDamageAnimations();\r\n\r\n\t\tthis.onGroundTimer -= delta;\r\n\t}\r\n\r\n\tpublic moveRight(delta: number) {\r\n\t\tsuper.moveRight(delta);\r\n\t}\r\n\r\n\tpublic moveLeft(delta: number) {\r\n\t\tsuper.moveLeft(delta);\r\n\t}\r\n\r\n\tpublic getCollisionArea() {\r\n\t\tvar collisionArea = new Rectangle(this.position.x + 8, this.position.y + 14, 32, 68);\r\n\r\n\t\treturn collisionArea;\r\n\t}\r\n\r\n\tpublic getProjectileCollisionArea() {\r\n\t\tvar collisionArea = new Rectangle(this.position.x + 14, this.position.y + 14, 20, 72);\r\n\r\n\t\treturn collisionArea;\r\n\t}\r\n\r\n\tpublic getCalculatedPos(position: Vector, size: number) {\r\n\t\treturn new Vector(this.calcPos(position.x, size, 25), this.calcPos(position.y, size, 43))\r\n\t}\r\n\r\n\tpublic calcPos(value: number, size: number, offset: number) {\r\n\t\treturn value - (size / 2 - offset);\r\n\t}\r\n\r\n\tpublic jump() {\r\n\t\tif (!this.jumping) {\r\n\t\t\tthis.jumping = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic cast(type: SpellType) {\r\n\t\tthis.spellHandler.cast(type);\r\n\t}\r\n\r\n\tprivate renderShield(renderCall: RenderCall) {\r\n\r\n\t\trenderCall.vertecies = this.renderHelper.getVertecies(this.position.x - 18, this.position.y - 5, 80, 100, renderCall.vertecies);\r\n\t\trenderCall.textureCoords.push.apply(renderCall.textureCoords, this.shieldTextureCoords);\r\n\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n\t\treturn renderCall;\r\n\t}\r\n\r\n\tprivate stun() {\r\n\t\tthis.stunned = true;\r\n\t\tthis.stunnedAnimation.repetitions = 10;\r\n\t\tthis.stunnedAnimation.reset();\r\n\t}\r\n\r\n\tprivate updateDamageAnimations() {\r\n\t\tlet removeItems: StickyAnimation[] = [];\r\n\r\n\t\tfor (let stickyAnimation of this.damageAnimations) {\r\n\t\t\tstickyAnimation.animation.areaToRender.x = this.position.x - stickyAnimation.offset.x;\r\n\t\t\tstickyAnimation.animation.areaToRender.y = this.position.y - stickyAnimation.offset.y;\r\n\r\n\t\t\tif (stickyAnimation.animation.repetitions <= 0) {\r\n\t\t\t\tremoveItems.push(stickyAnimation);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let remove of removeItems) {\r\n\t\t\tlet index = this.damageAnimations.indexOf(remove);\r\n\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tthis.damageAnimations.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/player.ts","import { SpellType, Cast, Animation, InstantCast, ChannelCast, Vector, Rectangle, SpellCast, Progress } from '../model';\r\nimport { AnimationHandler } from './animationHandler';\r\nimport { ProjectileHandler } from './projectileHandler';\r\nimport { ParticleHandler } from './particleHandler';\r\nimport { Player } from '../character/player';\r\n\r\nexport class SpellHandler {\r\n\r\n    public currentCast: Cast;\r\n    public shieldCollidables: Rectangle[] = [];\r\n    public castingShield = false;\r\n\r\n    private animationHandler: AnimationHandler;\r\n    private projectileHandler: ProjectileHandler;\r\n    private particleHandler: ParticleHandler;\r\n    private player: Player;\r\n\r\n    private fireBlastCast: InstantCast;\r\n    private frostBlastCast: InstantCast;\r\n    private fireBallCast: SpellCast;\r\n\r\n    private channelMagicCast: ChannelCast;\r\n\r\n    private break: number = 0;\r\n    private refShieldCollidables: Rectangle[] = [];\r\n    private maxMagicValue = 50 + (20 * this.fireLevel);\r\n    private minMagicValue = 25 + (5 * this.fireLevel);\r\n\r\n    constructor(animationHandler: AnimationHandler, projectileHandler: ProjectileHandler, particleHandler: ParticleHandler, player: Player, private fireLevel: number, private frostLevel: number, private shieldLevel: number) {\r\n        this.animationHandler = animationHandler;\r\n        this.projectileHandler = projectileHandler;\r\n        this.particleHandler = particleHandler;\r\n        this.player = player;\r\n\r\n        this.createShieldCollidables();\r\n\r\n        this.initCasts();\r\n    }\r\n\r\n    public update(delta: number) {\r\n\r\n        if (this.currentCast && this.break == 0) {\r\n            this.currentCast.update(delta);\r\n\r\n            if (this.currentCast.done) {\r\n                this.currentCast.cancel();\r\n                this.currentCast = null;\r\n            }\r\n        } else {\r\n            if (!this.castingShield) {\r\n                this.player.regenMana();\r\n            }\r\n        }\r\n\r\n        if (this.channelMagicCast.currentValue >= this.maxMagicValue) {\r\n            this.particleHandler.createMagicEffect(this.player.position, this.player.inverse);\r\n        }\r\n\r\n        if (this.castingShield) {\r\n\r\n            this.shieldCollidables = [];\r\n            for (let collidable of this.refShieldCollidables) {\r\n                this.shieldCollidables.push(new Rectangle(collidable.x + this.player.position.x, collidable.y + this.player.position.y, collidable.width, collidable.height));\r\n            }\r\n\r\n            this.particleHandler.createShieldEffect(this.player.getCalculatedPos(this.player.position, 0), this.player.inverse, this.shieldLevel);\r\n        }\r\n\r\n        this.updateBreak(delta);\r\n    }\r\n\r\n    public cast(spellType: SpellType) {\r\n        switch (spellType) {\r\n            case SpellType.fireball: this.castFireBall();\r\n                break;\r\n\r\n            case SpellType.electricbolt: this.castElectricBall();\r\n                break;\r\n\r\n            case SpellType.fireBlast: this.castFireBlast();\r\n                break;\r\n\r\n            case SpellType.frostBlast: this.castFrostBlast();\r\n                break;\r\n\r\n            case SpellType.shield: this.castShield();\r\n                break;\r\n\r\n            case SpellType.channelmagic: this.castChannelMagic();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private createShieldCollidables() {\r\n        this.refShieldCollidables = [];\r\n        let posx = 17;\r\n        let posy = 40;\r\n\r\n        for (let i = 0; i < 20; i++) {\r\n            let angle: number;\r\n            let x: number;\r\n            angle = Math.PI * (i * 0.1 + 0.6);\r\n            x = posx + (30 * Math.cos(angle));\r\n\r\n            let y = posy + (40 * Math.sin(angle));\r\n            this.refShieldCollidables.push(new Rectangle(x, y, 12, 12));\r\n        }\r\n    }\r\n\r\n    private castShield() {\r\n        if (this.player.useMana(0.1)) {\r\n            if (this.break == 0) {\r\n                this.castingShield = true;\r\n            }\r\n        } else {\r\n            this.break = 500;\r\n            this.player.shieldExplosion(this.player.inverse);\r\n        }\r\n    }\r\n\r\n    private updateBreak(delta: number) {\r\n        this.break -= delta;\r\n\r\n        if (this.break < 0) {\r\n            this.break = 0;\r\n        }\r\n    }\r\n\r\n    private castFireBall() {\r\n        if (!this.currentCast || (this.currentCast == this.fireBallCast && this.fireBallCast.currentAnimation.repetitions == 1)) {\r\n            if (this.player.useMana(20)) {\r\n                this.fireBallCast.reset();\r\n                this.fireBallCast.size = this.channelMagicCast.currentValue;\r\n                this.channelMagicCast.resetValue();\r\n                this.currentCast = this.fireBallCast;\r\n            } else {\r\n                this.break = 500;\r\n                if (this.castingShield) {\r\n                    this.player.shieldExplosion(this.player.inverse);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private castElectricBall() {\r\n\r\n    }\r\n\r\n    private castChannelMagic() {\r\n        if ((!this.currentCast || this.currentCast == this.channelMagicCast) && this.player.isMoving()) {\r\n            this.channelMagicCast.channeling = true;\r\n            this.channelMagicCast.done = false;\r\n            this.currentCast = this.channelMagicCast;\r\n        }\r\n    }\r\n\r\n    private castFireBlast() {\r\n        if (!this.currentCast || this.currentCast == this.fireBlastCast) {\r\n            if (this.player.useMana(0.5)) {\r\n                this.fireBlastCast.reset();\r\n                this.currentCast = this.fireBlastCast;\r\n            } else {\r\n                this.break = 500;\r\n                if (this.castingShield) {\r\n                    this.player.shieldExplosion(this.player.inverse);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private castFrostBlast() {\r\n        if (!this.currentCast || this.currentCast == this.frostBlastCast) {\r\n            if (this.player.useMana(0.5)) {\r\n                this.frostBlastCast.reset();\r\n                this.currentCast = this.frostBlastCast;\r\n            } else {\r\n                this.break = 500;\r\n                if (this.castingShield) {\r\n                    this.player.shieldExplosion(this.player.inverse);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCasts() {\r\n    \r\n        let fireblastAnimation = new Animation([178]);\r\n        fireblastAnimation.repetitions = 1;\r\n\r\n        let onFireCast = this.getOnCastFireBlast(this.fireLevel);\r\n\r\n        this.fireBlastCast = new InstantCast(fireblastAnimation, onFireCast);\r\n\r\n        let frostBlastAnimation = new Animation([178]);\r\n        frostBlastAnimation.repetitions = 1;\r\n\r\n        let onFrostCast = this.getOnCastFrostBlast(this.frostLevel);\r\n\r\n        this.frostBlastCast = new InstantCast(frostBlastAnimation, onFrostCast);\r\n\r\n        let channelAnimation = new Animation([175]);\r\n\r\n        let channelLowerAnimation = new Animation([162]);\r\n\r\n        let onChannelMagic = () => {\r\n            this.particleHandler.createChannelMagic(this.player.position, this.player.inverse);\r\n        };\r\n\r\n        let onCancelChannelMagic = () => {\r\n        }\r\n\r\n        this.channelMagicCast = new ChannelCast(channelAnimation, channelLowerAnimation, onChannelMagic, onCancelChannelMagic, 25 + (5 * this.fireLevel), this.maxMagicValue, 0.03);\r\n\r\n        let castAnimation = new Animation([170, 176, 177, 176]);\r\n        castAnimation.repetitions = 3;\r\n        castAnimation.timeToChange = 170;\r\n\r\n        let onFireBallUpdate = (area: Rectangle, inverse: boolean, offsetX: number) => {\r\n            this.particleHandler.createFireBall(new Vector(area.x, area.y), area.width, inverse, offsetX);\r\n        };\r\n\r\n        let onFireBallCast = (animation: Animation, size: number) => {\r\n\r\n            this.projectileHandler.createFireBall(this.player.getCalculatedPos(this.player.position, size), this.player.inverse, 0.6, size, 11, onFireBallUpdate);\r\n\r\n            return animation;\r\n        };\r\n\r\n        this.fireBallCast = new SpellCast(castAnimation, 2, onFireBallCast);\r\n    }\r\n\r\n    private getOnCastFireBlast(fireLevel: number) {\r\n        if (fireLevel == 0) {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFireBlast(this.player.position, this.player.inverse, 0);\r\n\r\n                return animation;\r\n            };\r\n        } else if (fireLevel == 1) {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFireBlast(this.player.position, this.player.inverse, 1);\r\n\r\n                return animation;\r\n            };\r\n        } else if (fireLevel == 2) {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFireBlast(this.player.position, this.player.inverse, 2);\r\n\r\n                return animation;\r\n            };\r\n        } else {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFireBlast(this.player.position, this.player.inverse, 3);\r\n\r\n                return animation;\r\n            };\r\n        }\r\n    }\r\n\r\n    private getOnCastFrostBlast(frostLevel: number) {\r\n        if (frostLevel == 0) {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFrostBlast(this.player.position, this.player.inverse, 0);\r\n\r\n                return animation;\r\n            };\r\n        } else if (frostLevel == 1) {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFrostBlast(this.player.position, this.player.inverse, 1);\r\n\r\n                return animation;\r\n            };\r\n        } else if (frostLevel == 2) {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFrostBlast(this.player.position, this.player.inverse, 2);\r\n\r\n                return animation;\r\n            };\r\n        } else {\r\n            return (animation: Animation) => {\r\n                this.particleHandler.createFrostBlast(this.player.position, this.player.inverse, 3);\r\n\r\n                return animation;\r\n            }\r\n        };\r\n    }\r\n\r\n    \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/spellHandler.ts","import { Enemy } from './enemy';\r\nimport { Player } from './player';\r\nimport { Context } from '../context';\r\nimport { Vector, Rectangle, Tile, Meele, Animation, SpellType, DebugElement } from '../model';\r\nimport { TextureMapper } from '../render/textureMapper';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { DebugHandler } from '../handler/debugHandler';\r\nimport { DeathType } from './deathType';\r\nimport { State } from './state';\r\n\r\nexport class Shadow extends Enemy {\r\n\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    protected hitAreaOffset: number = 50;\r\n    protected searchAreaOffset: number = 100;\r\n    protected hp = 300;\r\n    protected trackingSpeed = 0.2;\r\n    protected idleSpeed = 0;\r\n    protected minDistance = 30;\r\n    public debugHandler = DebugHandler.getInstance();\r\n\r\n    constructor(position: Vector, width: number, height: number, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler) {\r\n        super(position, width, height);\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n\r\n        this.idleAnimation = new Animation([118])\r\n\r\n        this.idleToTrackingAnimation = new Animation([119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132]);\r\n\r\n        this.idleToTrackingAnimation.repetitions = 13;\r\n        this.idleToTrackingAnimation.timeToChange = 50;\r\n\r\n        this.trackingToIdleTransitionAnimation = new Animation([132, 130, 127, 124, 119]);\r\n\r\n        this.trackingToIdleTransitionAnimation.repetitions = 4;\r\n\r\n        this.trackingAnimation = new Animation([133, 134, 135]);\r\n\r\n        this.hitAnimation = new Animation([136, 136, 137, 137, 138, 138]);\r\n\r\n        this.hitAnimation.timeToChange = 150;\r\n\r\n        this.currentAnimation = this.hitAnimation;\r\n\r\n        this.idleAnimation.timeToChange = 175;\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        super.update(delta, tiles, player);\r\n\r\n        this.currentAnimation.next(delta);\r\n\r\n        this.npcAction(delta, player, tiles);\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea: Rectangle;\r\n\r\n        if (this.currentState != State.Tracking && this.currentState != State.InHitRange) {\r\n            collisionArea = new Rectangle(this.position.x + this.width/2, this.position.y - 5 + this.height, 0, 0);\r\n        } else {\r\n            collisionArea = new Rectangle(this.position.x, this.position.y - 5, this.width, this.height);\r\n        }\r\n\r\n\r\n        return collisionArea;\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        super.hit(delta, player, tiles);\r\n        if (this.hitAnimation.frameIndex == 2 && !this.hitting) {\r\n            this.hitting = true;\r\n            \r\n            let pos: Vector;\r\n            if(this.inverse) {\r\n                pos = new Vector(this.position.x + 30, this.position.y + 20);\r\n            } else {\r\n                pos = new Vector(this.position.x - 50, this.position.y + 20);\r\n            }\r\n\r\n            let projectile = this.projectileHandler.createCollisionProjectile(pos, this.width, this.inverse, 60, new Vector(1, 0.8));\r\n        }\r\n\r\n        if (this.hitAnimation.frameIndex == 0) {\r\n            this.hitting = false;\r\n        }\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        super.idle(delta, player, tiles);\r\n        this.stop();\r\n        this.burnValue = 0;\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n        this.currentAnimation = this.idleToTrackingAnimation;\r\n        this.stop();\r\n\r\n        if (this.idleToTrackingAnimation.repetitions == 0) {\r\n            this.trackingTime = this.trackingMaxTime;\r\n            this.currentState = State.Tracking;\r\n            this.currentAnimation = this.trackingAnimation;\r\n            this.maxSpeed = this.trackingSpeed;\r\n            this.actualSpeed = this.maxSpeed;\r\n            this.idleToTrackingAnimation.reset();\r\n            this.idleToTrackingAnimation.repetitions = 13;\r\n        }\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n        this.currentState = State.InHitRange;\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n        this.currentAnimation = this.trackingToIdleTransitionAnimation;\r\n        this.stop();\r\n\r\n        if (this.trackingToIdleTransitionAnimation.repetitions == 0) {\r\n            this.currentState = State.Idle;\r\n            this.currentAnimation = this.idleAnimation;\r\n            this.maxSpeed = this.idleSpeed;\r\n            this.actualSpeed = this.maxSpeed;\r\n            this.trackingToIdleTransitionAnimation.reset();\r\n            this.trackingToIdleTransitionAnimation.repetitions = 4;\r\n        }\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number, tiles: Tile[]) {\r\n\r\n        let deltaPos = this.getDeltaPosition(player, 10, 0);\r\n        let magnitude = deltaPos.magnitude();\r\n\r\n        if (magnitude < offset) {\r\n            if (this.clearShoot(deltaPos, tiles)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private clearShoot(deltaPos: Vector, tiles: Tile[]) {\r\n        let clear = true;\r\n        let pathBlocks = this.getPathBlocks(deltaPos);\r\n\r\n        for (let block of pathBlocks) {\r\n            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n                clear = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return clear;\r\n    }\r\n\r\n    private getPathBlocks(deltaPos: Vector) {\r\n\r\n        let blocksize = 20;\r\n        let magnitude = deltaPos.magnitude();\r\n        let direction = deltaPos.copy(deltaPos);\r\n        let bowPosition = new Vector(this.position.x, this.position.y + 10);\r\n\r\n        direction.normalize();\r\n\r\n        let blocks: Rectangle[] = [];\r\n\r\n        for (let i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\r\n            let newMagnitude = magnitude - (i * blocksize);\r\n\r\n            blocks.push(new Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n        }\r\n\r\n        return blocks;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/shadow.ts","import { Enemy } from './enemy';\r\nimport { Player } from './player';\r\nimport { Context } from '../context';\r\nimport { Vector, Rectangle, Tile, Meele, Animation, SpellType, DebugElement } from '../model';\r\nimport { TextureMapper } from '../render/textureMapper';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\nimport { DebugHandler } from '../handler/debugHandler';\r\nimport { DeathType } from './deathType';\r\nimport { State } from './state';\r\n\r\nexport class Apprentice extends Enemy {\r\n\r\n    protected hitAreaOffset: number = 500;\r\n    protected searchAreaOffset: number = 500;\r\n    protected hp = 50;\r\n    protected trackingSpeed = 0.05;\r\n    protected idleSpeed = 0.05;\r\n    protected minDistance = 30;\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    private projectileVelocity = 0.5;\r\n    private shoot = false;\r\n    private onBlackFireUpdate = (area: Rectangle, inverse: boolean, offsetX: number) => {\r\n         this.particleHandler.createNecroFireBall(new Vector(area.x, area.y), area.width, inverse, offsetX);\r\n    };\r\n\r\n    public debugHandler = DebugHandler.getInstance();\r\n\r\n    constructor(position: Vector, width: number, height: number, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler, private particleHandler: ParticleHandler) {\r\n        super(position, width, height);\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n\r\n        this.idleAnimation = new Animation([139, 140, 141, 142, 143]);\r\n        this.idleAnimation.timeToChange = 175;\r\n\r\n        this.trackingAnimation = new Animation([139, 140, 141, 142, 143]);\r\n\r\n        this.trackingAnimation.timeToChange = 175;\r\n\r\n        this.hitAnimation = new Animation([139, 140, 141, 142, 143]);\r\n\r\n        this.hitAnimation.timeToChange = 250;\r\n\r\n        this.currentAnimation = this.hitAnimation;\r\n\r\n\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        super.update(delta, tiles, player);\r\n\r\n        this.currentAnimation.next(delta);\r\n\r\n        this.npcAction(delta, player, tiles);\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea: Rectangle;\r\n\r\n        collisionArea = new Rectangle(this.position.x + 25, this.position.y + 15, this.width - 50, this.height - 20);\r\n\r\n        return collisionArea;\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        super.hit(delta, player, tiles);\r\n        if (this.hitAnimation.frameIndex == 3) {\r\n            if (!this.shoot) {\r\n                let velocity = this.getDeltaPosition(player, 0, 0);\r\n                velocity.y = velocity.y + 20; \r\n                velocity.normalize();\r\n                velocity.multiply(this.projectileVelocity);\r\n                let pos = new Vector(this.position.x, this.position.y);\r\n                this.projectileHandler.createNecroBall(pos, 40, this.inverse, velocity, 100, this.onBlackFireUpdate);\r\n                this.shoot = true;\r\n            }\r\n\r\n        } else {\r\n            this.shoot = false;\r\n        }\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        super.idle(delta, player, tiles);\r\n        this.actualSpeed = this.maxSpeed;\r\n        this.patrol(delta);\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n        this.currentState = State.Tracking;\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n        this.currentState = State.InHitRange;\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n        this.currentState = State.Idle;\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number, tiles: Tile[]) {\r\n\r\n        let deltaPos = this.getDeltaPosition(player, 10, 0);\r\n        let magnitude = deltaPos.magnitude();\r\n\r\n        if (magnitude < offset) {\r\n            if (this.clearShoot(deltaPos, tiles)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private clearShoot(deltaPos: Vector, tiles: Tile[]) {\r\n        let clear = true;\r\n        let pathBlocks = this.getPathBlocks(deltaPos);\r\n\r\n        for (let block of pathBlocks) {\r\n            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n                clear = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return clear;\r\n    }\r\n\r\n    private getPathBlocks(deltaPos: Vector) {\r\n\r\n        let blocksize = 20;\r\n        let magnitude = deltaPos.magnitude();\r\n        let direction = deltaPos.copy(deltaPos);\r\n        let bowPosition = new Vector(this.position.x, this.position.y + 10);\r\n\r\n        direction.normalize();\r\n\r\n        let blocks: Rectangle[] = [];\r\n\r\n        for (let i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\r\n            let newMagnitude = magnitude - (i * blocksize);\r\n\r\n            blocks.push(new Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n        }\r\n\r\n        return blocks;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/apprentice.ts","import { Enemy } from './enemy';\r\nimport { Player } from './player';\r\nimport { Context } from '../context';\r\nimport { Vector, Rectangle, Tile, Meele, Animation, SpellType, DebugElement } from '../model';\r\nimport { TextureMapper } from '../render/textureMapper';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\nimport { DebugHandler } from '../handler/debugHandler';\r\nimport { DeathType } from './deathType';\r\nimport { State } from './state';\r\n\r\nexport class Screamer extends Enemy {\r\n\r\n    protected hitAreaOffset: number = 500;\r\n    protected searchAreaOffset: number = 500;\r\n    protected hp = 200;\r\n    protected hitDamage = 50;\r\n    protected trackingSpeed = 0.4;\r\n    protected idleSpeed = 0.1;\r\n    protected minDistance = 30;\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    private projectileVelocity = 0.5;\r\n    private onBlackFireUpdate = (area: Rectangle, inverse: boolean, offsetX: number) => {\r\n        this.particleHandler.createNecroFireBall(new Vector(area.x, area.y), area.width, inverse, offsetX);\r\n    };\r\n    private hitTimer: number = 0;\r\n    private chargeTimer: number = 1000;\r\n\r\n\r\n    public debugHandler = DebugHandler.getInstance();\r\n\r\n    constructor(position: Vector, width: number, height: number, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler, private particleHandler: ParticleHandler) {\r\n        super(position, width, height);\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n\r\n        this.acceleration = 0.1;\r\n\r\n        this.idleAnimation = new Animation([560, 561, 562, 563, 564, 565, 566, 567]);\r\n        this.idleAnimation.timeToChange = 175;\r\n\r\n        this.trackingAnimation = new Animation([568, 569, 570, 571, 572, 573, 574, 575]);\r\n\r\n        this.trackingAnimation.timeToChange = 175;\r\n\r\n        this.hitAnimation = new Animation([568, 569, 570, 571, 572, 573, 574, 575]);\r\n\r\n        this.hitAnimation.timeToChange = 250;\r\n\r\n        this.currentAnimation = this.hitAnimation;\r\n\r\n\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        super.update(delta, tiles, player);\r\n\r\n        this.currentAnimation.next(delta);\r\n\r\n        if(this.hitTimer > 0){\r\n            this.hitTimer -= delta;\r\n        }\r\n\r\n        this.npcAction(delta, player, tiles);\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea: Rectangle;\r\n\r\n        collisionArea = new Rectangle(this.position.x + 15, this.position.y, this.width - 30, this.height - 10);\r\n\r\n        return collisionArea;\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        super.hit(delta, player, tiles);\r\n        if (this.hitTimer <= 0) {\r\n            if (this.collisionDetection.aabbCheck(this.getCollisionArea(), player.getCollisionArea())) {\r\n                this.hitTimer = 500;\r\n                this.chargeTimer = 1000;\r\n                this.currentState = State.Idle;\r\n                player.takeDamage(this.hitDamage);\r\n                if (player.position.x < this.position.x) {\r\n                    player.hardHit(false, 0.8);\r\n                } else {\r\n                    player.hardHit(true, 0.8);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        super.idle(delta, player, tiles);\r\n        this.actualSpeed = this.maxSpeed;\r\n        this.patrol(delta);\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n        this.currentAnimation = this.trackingAnimation;\r\n        if (this.chargeTimer > 0) {\r\n            this.chargeTimer -= delta;\r\n        } else {\r\n            this.currentState = State.Tracking;\r\n        }\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n        this.currentState = State.InHitRange;\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n        this.currentState = State.Idle;\r\n    }\r\n\r\n    protected track(player: Player, delta: number, tiles: Tile[]) {\r\n        super.track(player, delta, tiles, 30);\r\n        this.setFreezeSpeed();\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number, tiles: Tile[]) {\r\n\r\n        let deltaPos = this.getDeltaPosition(player, 10, 0);\r\n        let magnitude = deltaPos.magnitude();\r\n\r\n        if (magnitude < offset) {\r\n            if (this.clearShoot(deltaPos, tiles)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected moveToPlayer(delta: number, player: Player, tiles: Tile[], gapSize: number) {\r\n        let positionMiddle = this.position.x + (this.width / 2);\r\n        if (Math.abs(player.middlePosition.x - positionMiddle) > gapSize) {\r\n            if (player.middlePosition.x < positionMiddle) {\r\n                this.moveLeft(delta);\r\n            } else if (player.middlePosition.x > positionMiddle) {\r\n                this.moveRight(delta);\r\n            }\r\n        } else {\r\n            this.currentState = State.Idle;\r\n            this.chargeTimer = 1000;\r\n        }\r\n    }\r\n\r\n    private clearShoot(deltaPos: Vector, tiles: Tile[]) {\r\n        let clear = true;\r\n        let pathBlocks = this.getPathBlocks(deltaPos);\r\n\r\n        for (let block of pathBlocks) {\r\n            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n                clear = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return clear;\r\n    }\r\n\r\n    private getPathBlocks(deltaPos: Vector) {\r\n\r\n        let blocksize = 20;\r\n        let magnitude = deltaPos.magnitude();\r\n        let direction = deltaPos.copy(deltaPos);\r\n        let bowPosition = new Vector(this.position.x, this.position.y + 10);\r\n\r\n        direction.normalize();\r\n\r\n        let blocks: Rectangle[] = [];\r\n\r\n        for (let i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\r\n            let newMagnitude = magnitude - (i * blocksize);\r\n\r\n            blocks.push(new Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n        }\r\n\r\n        return blocks;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/screamer.ts","import { Enemy } from './enemy';\r\nimport { Player } from './player';\r\nimport { Context } from '../context';\r\nimport { Vector, Rectangle, Tile, Meele, Animation, SpellType, DebugElement } from '../model';\r\nimport { TextureMapper } from '../render/textureMapper';\r\nimport { AnimationHandler } from '../handler/animationHandler';\r\nimport { ProjectileHandler } from '../handler/projectileHandler';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\nimport { DebugHandler } from '../handler/debugHandler';\r\nimport { DeathType } from './deathType';\r\nimport { State } from './state';\r\n\r\nexport class MasterSorcerer extends Enemy {\r\n\r\n    protected hitAreaOffset: number = 400;\r\n    protected searchAreaOffset: number = 800;\r\n    protected hp = 500;\r\n    protected trackingSpeed = 0.1;\r\n    protected idleSpeed = 0.1;\r\n    protected minDistance = 30;\r\n    private channelAnimation: Animation;\r\n    private channelHitTransitionAnimation: Animation;\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    private projectileVelocity = 0.5;\r\n    private shoot = false;\r\n    private onBlackFireUpdate = (area: Rectangle, inverse: boolean, offsetX: number) => {\r\n        this.particleHandler.createNecroFireBall(new Vector(area.x, area.y), area.width, inverse, offsetX);\r\n    };\r\n    private defaultChannelTime = 1500;\r\n    private shootDefaultCooldown = 100;\r\n    private shootCooldown = this.shootDefaultCooldown;\r\n    private channelTimer = this.defaultChannelTime;\r\n    private shootsFired = 0;\r\n    private maxShoots = 10;\r\n\r\n    public debugHandler = DebugHandler.getInstance();\r\n\r\n    constructor(position: Vector, width: number, height: number, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler, private particleHandler: ParticleHandler) {\r\n        super(position, width, height);\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n\r\n        this.idleAnimation = new Animation([580, 581, 582, 583, 584, 585]);\r\n        this.idleAnimation.timeToChange = 175;\r\n\r\n        this.trackingAnimation = new Animation([580, 581, 582, 583, 584, 585]);\r\n\r\n        this.trackingAnimation.timeToChange = 175;\r\n\r\n        this.channelHitTransitionAnimation = new Animation([585, 597, 598]);\r\n\r\n        this.channelHitTransitionAnimation.timeToChange = 150;\r\n\r\n        this.hitAnimation = new Animation([598]);\r\n\r\n        this.hitAnimation.timeToChange = 150;\r\n\r\n        this.channelAnimation = new Animation([585]);\r\n\r\n        this.currentAnimation = this.hitAnimation;\r\n\r\n\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        super.update(delta, tiles, player);\r\n\r\n        this.currentAnimation.next(delta);\r\n\r\n        this.npcAction(delta, player, tiles);\r\n    }\r\n\r\n    public getCollisionArea() {\r\n        let collisionArea: Rectangle;\r\n\r\n        collisionArea = new Rectangle(this.position.x + 25, this.position.y + 35, this.width - 50, this.height - 40);\r\n\r\n        return collisionArea;\r\n    }\r\n\r\n    protected track(player: Player, delta: number, tiles: Tile[], gapSize: number) {\r\n        super.track(player, delta, tiles, gapSize);\r\n        this.setFreezeSpeed();\r\n    }\r\n\r\n    protected hit(delta: number, player: Player, tiles: Tile[]) {\r\n        if (!this.inRange(player, this.hitAreaOffset, tiles) && this.hitAnimation.frameIndex == 0) {\r\n            this.currentState = State.Tracking;\r\n        }\r\n\r\n        this.moveToPlayer(delta, player, tiles, 10);\r\n        this.actualSpeed = 0;\r\n\r\n        if (this.channel(delta)) {\r\n            this.currentAnimation = this.channelAnimation;\r\n            this.particleHandler.createNecroChannelMagic(this.position, this.inverse);\r\n        } else if (this.channelHitTransitionAnimation.frameIndex != 2) {\r\n            this.currentAnimation = this.channelHitTransitionAnimation;\r\n        } else {\r\n            this.currentAnimation = this.hitAnimation;\r\n\r\n            if (this.shootCooldown <= 0) {\r\n                if (this.shootsFired < this.maxShoots) {\r\n                    this.shootsFired++;\r\n                    let velocity = this.getDeltaPosition(player, 0, this.rand(0, 50));\r\n                    velocity.y = velocity.y + 20;\r\n                    velocity.normalize();\r\n                    velocity.multiply(this.projectileVelocity);\r\n                    let pos: Vector\r\n                    if(this.inverse) {\r\n                        pos = new Vector(this.position.x - 18, this.position.y + 20);\r\n                    } else {\r\n                        pos = new Vector(this.position.x + 80, this.position.y + 20);\r\n                    }\r\n                    \r\n                    this.projectileHandler.createNecroBall(pos, 25, this.inverse, velocity, 10, this.onBlackFireUpdate);\r\n                } else {\r\n                    this.shootsFired = 0;\r\n                    this.channelTimer = this.defaultChannelTime;\r\n                    this.channelHitTransitionAnimation.reset();\r\n                }\r\n\r\n                this.shootCooldown = this.shootDefaultCooldown;\r\n            } else {\r\n                this.shootCooldown -= delta;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    protected idle(delta: number, player: Player, tiles: Tile[]) {\r\n        super.idle(delta, player, tiles);\r\n        this.actualSpeed = this.maxSpeed;\r\n        this.patrol(delta);\r\n    }\r\n\r\n    protected idleToTrackingTransition(delta: number) {\r\n        this.currentState = State.Tracking;\r\n    }\r\n\r\n    protected trackingToInRangeTransition(delta: number) {\r\n        this.currentState = State.InHitRange;\r\n    }\r\n\r\n    protected trackingToIdleTransition(delta: number) {\r\n        this.currentState = State.Idle;\r\n    }\r\n\r\n    protected inRange(player: Player, offset: number, tiles: Tile[]) {\r\n\r\n        let deltaPos = this.getDeltaPosition(player, 10, 0);\r\n        let magnitude = deltaPos.magnitude();\r\n\r\n        if (magnitude < offset) {\r\n            if (this.clearShoot(deltaPos, tiles)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private channel(delta: number) {\r\n\r\n        this.channelTimer -= delta;\r\n\r\n        if (this.channelTimer <= 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    private clearShoot(deltaPos: Vector, tiles: Tile[]) {\r\n        let clear = true;\r\n        let pathBlocks = this.getPathBlocks(deltaPos);\r\n\r\n        for (let block of pathBlocks) {\r\n            if (!this.collisionDetection.fastCheckEnviroment(block, tiles)) {\r\n                clear = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return clear;\r\n    }\r\n\r\n    private getPathBlocks(deltaPos: Vector) {\r\n\r\n        let blocksize = 20;\r\n        let magnitude = deltaPos.magnitude();\r\n        let direction = deltaPos.copy(deltaPos);\r\n        let bowPosition = new Vector(this.position.x, this.position.y + 10);\r\n\r\n        direction.normalize();\r\n\r\n        let blocks: Rectangle[] = [];\r\n\r\n        for (let i = 0; i < Math.floor(magnitude / blocksize); i++) {\r\n\r\n            let newMagnitude = magnitude - (i * blocksize);\r\n\r\n            blocks.push(new Rectangle(bowPosition.x + direction.x * newMagnitude, bowPosition.y + direction.y * newMagnitude, blocksize, 17));\r\n        }\r\n\r\n        return blocks;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/masterSorcerer.ts","import { RenderCall, RenderHelper } from \"../render/\";\r\nimport { Animation, SpellType } from \"../model/index\";\r\nimport { IEnemy } from \"./index\";\r\nimport { Vector } from \"../model/vector\";\r\nimport { DeathType } from \"./deathType\";\r\nimport { Rectangle } from \"../model/rectangle\";\r\nimport { ProjectileHandler } from \"../handler/projectileHandler\";\r\nimport { AnimationHandler } from \"../handler/animationHandler\";\r\nimport { ParticleHandler } from \"../handler/particleHandler\";\r\n\r\nexport class ShapeShifter implements IEnemy {\r\n\r\n    public toMove: Vector;\r\n    public dead: boolean;\r\n    public burnValue: number;\r\n    public currentAnimation: Animation;\r\n    public deathType: DeathType;\r\n    public inverse: boolean;\r\n    public color = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n    private hp: number = 500;\r\n    private sorcererAnimation: Animation;\r\n    private renderHalper = RenderHelper.getInstance();\r\n\r\n    constructor(public position: Vector, public width: number, public height: number, private projectileHandler: ProjectileHandler, private animationHandler: AnimationHandler, private particleHandler: ParticleHandler) {\r\n        this.sorcererAnimation = new Animation([600, 601, 602, 603, 604, 605, 606, 607]);\r\n        this.currentAnimation = this.sorcererAnimation;\r\n    }\r\n\r\n    getCollisionArea(): Rectangle {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    takeDamage(damage: number, type: SpellType): void {\r\n        this.hp = this.hp - damage;\r\n        if (this.hp <= 0) {\r\n            if (type == SpellType.frostBlast) {\r\n                this.deathType = DeathType.freezeDeath;\r\n            } else if (type == SpellType.fireBlast) {\r\n                this.deathType = DeathType.fireDeath;\r\n            } else {\r\n                this.deathType = DeathType.swordDeath;\r\n            }\r\n\r\n            this.dead = true;\r\n        }\r\n    }\r\n\r\n    freeze(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    burn(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public update(delta: number) {\r\n        this.currentAnimation.next(delta);\r\n    }\r\n\r\n    public createRenderCall(rendercall: RenderCall) {\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/character/shapeshifter.ts","import { Context, TileMap } from './';\r\nimport { RenderCall, ParticleRenderer, DynamicRenderCall, ColorRenderCall, ColorRenderer, Renderer } from './render';\r\nimport { Player } from './character/player';\r\nimport { Enemy } from './character/enemy';\r\nimport { Swordman } from './character/swordman';\r\nimport { Vector, Rectangle, Asset, SpellType, Level, Tile, Animation, DynamicTile } from './model';\r\nimport { CollisionDetection } from './collision/collisionDetection';\r\nimport { Gravity } from './forces/gravity';\r\nimport { TextRenderer } from './text/textRenderer';\r\nimport { Observable } from 'rxjs';\r\nimport { AnimationHandler } from './handler/animationHandler';\r\nimport { ProjectileHandler } from './handler/projectileHandler';\r\nimport { DynamicTileHandler } from './handler/dynamicTileHandler';\r\nimport { ParticleHandler } from './handler/particleHandler';\r\nimport { SimpleParticleRenderer } from './render/simpleParticleRenderer';\r\nimport { SimpleParticleRenderCall } from './render/simpleParticleRenderCall';\r\nimport { DebugHandler } from './handler/debugHandler';\r\nimport { EnemyHandler } from './handler/enemyHandler';\r\nimport { LevelData, EnemyType } from './map/model';\r\nimport { Camera } from './camera';\r\nimport { Archer, Shadow, Apprentice } from './character';\r\nimport { DynamicRenderer } from './render/dynamicRenderer';\r\nimport { UI } from './UI/ui';\r\nimport { SceneHandler } from './UI/sceneHandler';\r\nimport { LoadHelper } from './service/loadHelper';\r\nimport { LocalStorageHelper } from './service/localStorageHelper';\r\nimport { SceneIndex } from './UI/sceneIndex';\r\nimport { Screamer } from \"./character/screamer\";\r\n\r\nexport class Game {\r\n\tpublic canvasWidth = 1200;\r\n\tpublic canvasHeight = 800;\r\n\tpublic context: Context;\r\n\r\n\tprivate fps = 60;\r\n\tprivate tileMap: TileMap;\r\n\tprivate renderer: Renderer;\r\n\tprivate colorRenderer: ColorRenderer;\r\n\tprivate simpleParticleRenderer: SimpleParticleRenderer;\r\n\tprivate dynamicRenderer: DynamicRenderer;\r\n\tprivate collision: CollisionDetection = CollisionDetection.getInstance();\r\n\tprivate loadHelper = LoadHelper.getInstance();\r\n\tprivate player: Player;\r\n\tprivate leftKeyPress: boolean;\r\n\tprivate rightKeyPress: boolean;\r\n\tprivate jumpKeyPress: boolean;\r\n\tprivate fireballKeyPress: boolean;\r\n\tprivate channelMagicKeyPress: boolean;\r\n\tprivate frostKeyPress: boolean;\r\n\tprivate fireKeyPress: boolean;\r\n\tprivate shieldPress: boolean;\r\n\tprivate lastUpdate: number;\r\n\tprivate textRenderer: TextRenderer;\r\n\tprivate intevalTimer: any;\r\n\tprivate gameArea = new Rectangle(-50, -50, this.canvasWidth + 100, this.canvasHeight + 100);\r\n\tprivate startElement: HTMLElement;\r\n\tprivate restartElement: HTMLElement;\r\n\tprivate level: Level = new Level();\r\n\tprivate levelData: LevelData;\r\n\tprivate animationHandler: AnimationHandler;\r\n\tprivate projectileHandler: ProjectileHandler;\r\n\tprivate dynamicTileHandler: DynamicTileHandler;\r\n\tprivate UI: UI;\r\n\tprivate enemyHandler: EnemyHandler;\r\n\tprivate particleHandler: ParticleHandler;\r\n\tprivate debugHandler = DebugHandler.getInstance();\r\n\tprivate camera: Camera;\r\n\tprivate levelCompleted = false;\r\n\tprivate deathTimer = 0;\r\n\tprivate renderCalls: Map<number, RenderCall> = new Map<number, RenderCall>();\r\n\tprivate sceneHandler: SceneHandler;\r\n\tprivate collisionAreaEnd: Rectangle;\r\n\r\n\r\n\tconstructor(private asset: Asset, canvas: HTMLCanvasElement, level: LevelData) {\r\n\r\n\t\tthis.context = new Context(asset, this.canvasWidth, this.canvasHeight, canvas);\r\n\t\tthis.renderer = new Renderer(this.context);\r\n\t\tthis.sceneHandler = new SceneHandler(this.renderer, [this.canvasWidth, this.canvasHeight], canvas, this);\r\n\t\tthis.colorRenderer = new ColorRenderer(this.context);\r\n\t\tthis.simpleParticleRenderer = new SimpleParticleRenderer(this.context);\r\n\t\tthis.dynamicRenderer = new DynamicRenderer(this.context);\r\n\t\tthis.levelData = level;\r\n\r\n\t\tthis.initKeyBindings();\r\n\t\tthis.reset(this.levelData);\r\n\t\tthis.initLoop();\r\n\t}\r\n\r\n\tpublic reset(levelData: LevelData) {\r\n\t\tthis.loadLevel(levelData);\r\n\t}\r\n\r\n\tprivate initLoop() {\r\n\t\tthis.intevalTimer = setInterval(this.run(), 0);\r\n\t}\r\n\r\n\tprivate run() {\r\n\t\tthis.lastUpdate = (new Date).getTime();\r\n\t\tlet loops = 0, skipTicks = 1000 / this.fps,\r\n\t\t\tmaxFrameSkip = 3,\r\n\t\t\tnextGameTick = (new Date).getTime();\r\n\r\n\t\treturn () => {\r\n\t\t\tloops = 0;\r\n\r\n\t\t\twhile ((new Date).getTime() > nextGameTick && loops < maxFrameSkip) {\r\n\t\t\t\tlet delta = nextGameTick - this.lastUpdate;\r\n\t\t\t\tthis.lastUpdate = nextGameTick;\r\n\t\t\t\t//this.debugHandler.debugRects = [];\r\n\r\n\t\t\t\tif (this.sceneHandler.started) {\r\n\t\t\t\t\tif (!this.player.dead && !this.levelCompleted) {\r\n\t\t\t\t\t\tthis.checkGoal();\r\n\t\t\t\t\t\tthis.checkKeys(delta);\r\n\t\t\t\t\t\tthis.collision.checkCoutOfBounds(this.player, this.level.gameSize);\r\n\t\t\t\t\t\tthis.player.update(this.level.tiles, this.dynamicTileHandler.dynamicTiles, delta);\r\n\t\t\t\t\t\tthis.dynamicTileHandler.update(this.player, delta);\r\n\t\t\t\t\t\tthis.enemyHandler.update(delta, this.level.tiles, this.player);\r\n\t\t\t\t\t\tthis.animationHandler.update(delta);\r\n\t\t\t\t\t\tthis.projectileHandler.update(delta, this.level.tiles, this.player, this.dynamicTileHandler.dynamicTiles);\r\n\t\t\t\t\t\tthis.UI.update(this.player.hp, this.player.mana);\r\n\t\t\t\t\t\tthis.camera.update(this.player.position);\r\n\t\t\t\t\t\tthis.particleHandler.update(delta, this.enemyHandler.enemies);\r\n\t\t\t\t\t} else if (this.deathTimer < 3000) {\r\n\t\t\t\t\t\tthis.deathTimer += delta;\r\n\t\t\t\t\t\tthis.player.position.x = -1000;\r\n\t\t\t\t\t\tthis.player.position.y = -1000;\r\n\t\t\t\t\t\tthis.enemyHandler.update(delta, this.level.tiles, this.player);\r\n\t\t\t\t\t\tthis.animationHandler.update(delta);\r\n\t\t\t\t\t\tthis.projectileHandler.update(delta, this.level.tiles, this.player, this.dynamicTileHandler.dynamicTiles);\r\n\t\t\t\t\t\tthis.particleHandler.update(delta, this.enemyHandler.enemies);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.sceneHandler.started = false;\r\n\t\t\t\t\t\tthis.sceneHandler.setCurrentLevel(this.level.name);\r\n\t\t\t\t\t\tthis.sceneHandler.currentScene = SceneIndex.RestartMenu;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sceneHandler.update();\r\n\t\t\t\t\tthis.sceneHandler.render();\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\r\n\t\t\t\tnextGameTick += skipTicks;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tprivate render() {\r\n\t\tthis.context.clear([0, 0, 0, 0.95]);\r\n\t\tlet dynamicRenderCall = new DynamicRenderCall();\r\n\t\tlet renderCall = new RenderCall();\r\n\t\tthis.renderCalls.clear();\r\n\t\tlet colorRenderCall = new ColorRenderCall();\r\n\t\tlet colorRenderCalls: ColorRenderCall[] = [];\r\n\r\n\t\tlet simpleRenderCalls: SimpleParticleRenderCall[] = [];\r\n\r\n\t\t// this.debugHandler.debugRects = this.player.getShieldCollidables();\r\n\r\n\t\t//GAME\r\n\t\tthis.enemyHandler.createRenderCall(colorRenderCall);\r\n\t\tthis.tileMap.createGoalRenderCall(this.level.end, renderCall);\r\n\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.textRenderer.createTextRenderCall(400, 64, 50, renderCall, this.camera.position);\r\n\r\n\t\t\tfor (let stickyAnimation of this.player.damageAnimations) {\r\n\t\t\t\tthis.animationHandler.remove(stickyAnimation.animation);\r\n\t\t\t}\r\n\t\t\tthis.player.damageAnimations = [];\r\n\t\t} else if (this.levelCompleted) {\r\n\t\t\tthis.textRenderer.createTextRenderCall(800, 96, 51, renderCall, this.camera.position);\r\n\t\t} else {\r\n\t\t\trenderCall = this.player.createRenderCall(renderCall)\r\n\t\t}\r\n\r\n\r\n\t\tthis.animationHandler.createDynamicRenderCall(dynamicRenderCall, this.camera.position);\r\n\t\tthis.animationHandler.createRenderCall(colorRenderCall)\r\n\t\tthis.animationHandler.createStaticRenderCall(renderCall);\r\n\t\tthis.UI.createRenderCall(renderCall, this.camera.position);\r\n\t\tsimpleRenderCalls = this.particleHandler.createRenderCalls(simpleRenderCalls);\r\n\r\n\t\tthis.debugHandler.createRenderCall(renderCall);\r\n\r\n\t\tcolorRenderCalls.push(colorRenderCall);\r\n\r\n\t\tthis.tileMap.createRenderCall(this.renderCalls);\r\n\t\tthis.renderCalls = this.dynamicTileHandler.createRenderCall(this.renderCalls);\r\n\r\n\t\tthis.renderCalls.set(-1, renderCall);\r\n\r\n\t\tthis.renderer.render(this.renderCalls, this.camera.position);\r\n\t\tthis.colorRenderer.render(colorRenderCalls, this.camera.position);\r\n\t\tthis.simpleParticleRenderer.render(simpleRenderCalls, this.camera.position);\r\n\t\tthis.dynamicRenderer.render([dynamicRenderCall]);\r\n\t}\r\n\r\n\tprivate checkGoal() {\r\n\t\tthis.levelCompleted = this.collision.aabbCheck(this.player.getCollisionArea(), this.collisionAreaEnd);\r\n\t\tif (this.levelCompleted) {\r\n\t\t\tthis.sceneHandler.levelCompleted(this.level.name);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate checkKeys(delta: number) {\r\n\t\tif (!this.player.stunned) {\r\n\t\t\tif (this.leftKeyPress) {\r\n\t\t\t\tthis.player.moveLeft(delta);\r\n\t\t\t} else if (this.rightKeyPress) {\r\n\t\t\t\tthis.player.moveRight(delta);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.jumpKeyPress) {\r\n\t\t\t\tthis.player.jump();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.shieldPress) {\r\n\t\t\t\tthis.player.cast(SpellType.shield);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.frostKeyPress) {\r\n\t\t\t\tthis.player.cast(SpellType.frostBlast);\r\n\t\t\t} else if (this.fireKeyPress) {\r\n\t\t\t\tthis.player.cast(SpellType.fireBlast);\r\n\t\t\t} else if (this.fireballKeyPress) {\r\n\t\t\t\tthis.player.cast(SpellType.fireball);\r\n\t\t\t} else if (this.channelMagicKeyPress) {\r\n\t\t\t\tthis.player.cast(SpellType.channelmagic);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initKeyBindings() {\r\n\r\n\t\tdocument.body.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n\r\n\t\t\tvar keyCode = event.keyCode;\r\n\r\n\t\t\tswitch (keyCode) {\r\n\t\t\t\tcase 65:\r\n\t\t\t\t\tthis.leftKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 68:\r\n\t\t\t\t\tthis.rightKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 87:\r\n\t\t\t\t\tthis.jumpKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 97:\r\n\t\t\t\t\tthis.fireballKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 49:\r\n\t\t\t\t\tthis.fireballKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 98:\r\n\t\t\t\t\tthis.channelMagicKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 50:\r\n\t\t\t\t\tthis.channelMagicKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 99:\r\n\t\t\t\t\tthis.frostKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.frostKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 100:\r\n\t\t\t\t\tthis.fireKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 52:\r\n\t\t\t\t\tthis.fireKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.shieldPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 53:\r\n\t\t\t\t\tthis.shieldPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 38:\r\n\t\t\t\t\tthis.jumpKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 39:\r\n\t\t\t\t\tthis.rightKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 37:\r\n\t\t\t\t\tthis.leftKeyPress = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tdocument.body.addEventListener(\"keyup\", (event: KeyboardEvent) => {\r\n\r\n\t\t\tvar keyCode = event.keyCode;\r\n\r\n\t\t\tswitch (keyCode) {\r\n\t\t\t\tcase 65:\r\n\t\t\t\t\tthis.leftKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 68:\r\n\t\t\t\t\tthis.rightKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 87:\r\n\t\t\t\t\tthis.jumpKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 97:\r\n\t\t\t\t\tthis.fireballKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 49:\r\n\t\t\t\t\tthis.fireballKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 98:\r\n\t\t\t\t\tthis.channelMagicKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 50:\r\n\t\t\t\t\tthis.channelMagicKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 99:\r\n\t\t\t\t\tthis.frostKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tthis.frostKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 100:\r\n\t\t\t\t\tthis.fireKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 52:\r\n\t\t\t\t\tthis.fireKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 101:\r\n\t\t\t\t\tthis.shieldPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 53:\r\n\t\t\t\t\tthis.shieldPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 38:\r\n\t\t\t\t\tthis.jumpKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 39:\r\n\t\t\t\t\tthis.rightKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 37:\r\n\t\t\t\t\tthis.leftKeyPress = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic loadLevel(levelData: LevelData) {\r\n\r\n\t\tlet progress = LocalStorageHelper.getInstance().getCurrentProgress();\r\n\r\n\t\tthis.particleHandler = new ParticleHandler();\r\n\t\tthis.animationHandler = new AnimationHandler(this.particleHandler);\r\n\t\tthis.projectileHandler = new ProjectileHandler(this.animationHandler, this.getSpellLevel(progress.defence));\r\n\t\tthis.dynamicTileHandler = new DynamicTileHandler();\r\n\r\n\t\tthis.level = this.loadHelper.levelDataToLevel(levelData, this.projectileHandler, this.animationHandler, this.particleHandler);\r\n\t\tthis.collisionAreaEnd = new Rectangle(this.level.end.x + (this.level.end.width / 2), this.level.end.y + (this.level.end.height / 2), 1, 1);\r\n\t\tthis.particleHandler.tiles = this.level.tiles;\r\n\r\n\t\tthis.camera = new Camera([this.level.camera[0], this.level.camera[1]], [this.canvasWidth, this.canvasHeight], this.level.gameSize);\r\n\t\tthis.levelCompleted = false;\r\n\r\n\t\tlet hp = 100 + (10 * progress.hp);\r\n\t\tlet mana = 200 + (20 * progress.mana);\r\n\t\tthis.player = new Player(new Vector(this.level.player[0], this.level.player[1]), this.context, this.projectileHandler, this.animationHandler, this.particleHandler, 48, 85, hp, mana, progress, this.getSpellLevel(progress.fire), this.getSpellLevel(progress.frost), this.getSpellLevel(progress.defence));\r\n\t\tthis.collision.createGrid(new Vector(this.level.gameSize[0], this.level.gameSize[1]), this.level.tiles);\r\n\t\tthis.UI = new UI(hp, mana);\r\n\t\tthis.enemyHandler = new EnemyHandler(this.context, this.projectileHandler, this.animationHandler, this.particleHandler);\r\n\t\tthis.enemyHandler.enemies = this.level.enemies;\r\n\r\n\r\n\t\tthis.deathTimer = 0;\r\n\r\n\t\tthis.dynamicTileHandler.dynamicTiles = this.level.dynamicTiles;\r\n\t\tthis.tileMap = new TileMap(this.level.tiles, this.level.decorativeTiles);\r\n\r\n\t\tthis.textRenderer = new TextRenderer(this.context);\r\n\t}\r\n\r\n\tprivate getSpellLevel(spellPoints: number) {\r\n\t\tif (spellPoints == 0) {\r\n\t\t\treturn 0;\r\n\t\t} else if (spellPoints < 3) {\r\n\t\t\treturn 1;\r\n\t\t} else if (spellPoints < 6) {\r\n\t\t\treturn 2;\r\n\t\t} else {\r\n\t\t\treturn 3;\r\n\t\t};\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/game.ts","import { Context } from './context';\r\nimport { Game } from './game';\r\nimport { TileMap } from './tileMap';\r\nimport { Renderer } from './render/renderer';\r\n\r\nexport { Context };\r\nexport { Game };\r\nexport { TileMap };\r\nexport { Renderer };\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/index.ts","import { Observable, Subscription, Observer } from 'rxjs';\r\nimport { ShaderType, Asset } from './model';\r\nimport { TileAsset } from './map/model';\r\n\r\nexport class Context\r\n{\r\n\tpublic shaderProgram: WebGLProgram;\r\n\tpublic simpleParticleProgram: WebGLProgram;\r\n\tpublic dynamicVertecyProgram: WebGLProgram;\r\n\tpublic colorShaderProgram: WebGLProgram;\r\n\tpublic gl: WebGLRenderingContext;\r\n\tpublic glTexture: WebGLTexture;\r\n\tpublic frostParticelTexture: WebGLTexture;\r\n\tpublic genericParticleTexture: WebGLTexture;\r\n\tpublic tileTextures = new Map<number, WebGLTexture>();\r\n\r\n\tconstructor(asset: Asset, width: number, height: number, canvas: HTMLCanvasElement){\r\n\t\tthis.initContext(width, height, canvas);\r\n\t\tthis.initShaders(asset);\r\n\t}\r\n\r\n\tpublic clear(color: number[]) {\r\n\t\tthis.gl.clear( this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT );\r\n\t\tthis.gl.clearColor(color[0], color[1], color[2], color[3]);\r\n\t}\r\n\r\n\tprivate initContext(width: number, height: number, canvas: HTMLCanvasElement) {\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t\tthis.gl = canvas.getContext(\"experimental-webgl\");\r\n\r\n\t\tconsole.log(\"Context initialized...\");\r\n\t}\r\n\r\n\tprivate initShaders(asset: Asset) {\r\n\t\tlet vertexShader = this.compileShader(asset.vertexShader, ShaderType.Vertex);\r\n\t\tlet fragmentShader = this.compileShader(asset.fragmentShader, ShaderType.Fragment);\r\n\r\n\t\tlet simpleParticleVertexShader = this.compileShader(asset.simpleParticleVertexShader, ShaderType.Vertex);\r\n\t\tlet simpleParticleFragmentShader = this.compileShader(asset.simpleParticleFragmentShader, ShaderType.Fragment);\r\n\r\n\t\tlet dynamicVertexShader = this.compileShader(asset.dynamicVertexShader, ShaderType.Vertex);\r\n\t\tlet dynamicFragmentShader = this.compileShader(asset.dynamicFragmentShader, ShaderType.Fragment);\r\n\r\n\t\tlet colorVertexShader = this.compileShader(asset.colorVertexShader, ShaderType.Vertex);\r\n\t\tlet colorFragmentShader = this.compileShader(asset.colorFragmentShader, ShaderType.Fragment);\r\n\r\n\t\tthis.colorShaderProgram = this.gl.createProgram();\r\n\t\tthis.gl.attachShader(this.colorShaderProgram, colorVertexShader);\r\n\t\tthis.gl.attachShader(this.colorShaderProgram, colorFragmentShader);\r\n\t\tthis.gl.linkProgram(this.colorShaderProgram);\r\n\t\tif (!this.gl.getProgramParameter(this.colorShaderProgram, this.gl.LINK_STATUS)) {\r\n\t\t\talert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.colorShaderProgram));\r\n\t\t}\r\n\r\n\t\tthis.dynamicVertecyProgram = this.gl.createProgram();\r\n\t\tthis.gl.attachShader(this.dynamicVertecyProgram, dynamicVertexShader);\r\n\t\tthis.gl.attachShader(this.dynamicVertecyProgram, dynamicFragmentShader);\r\n\t\tthis.gl.linkProgram(this.dynamicVertecyProgram);\r\n\t\tif (!this.gl.getProgramParameter(this.dynamicVertecyProgram, this.gl.LINK_STATUS)) {\r\n\t\t\talert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.dynamicVertecyProgram));\r\n\t\t}\r\n\r\n\t\tthis.simpleParticleProgram = this.gl.createProgram();\r\n\t\tthis.gl.attachShader(this.simpleParticleProgram, simpleParticleVertexShader);\r\n\t\tthis.gl.attachShader(this.simpleParticleProgram, simpleParticleFragmentShader);\r\n\t\tthis.gl.linkProgram(this.simpleParticleProgram);\r\n\t\tif (!this.gl.getProgramParameter(this.simpleParticleProgram, this.gl.LINK_STATUS)) {\r\n\t\t\talert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.simpleParticleProgram));\r\n\t\t}\r\n\r\n\t\tthis.shaderProgram = this.gl.createProgram();\r\n\t\tthis.gl.attachShader(this.shaderProgram, vertexShader);\r\n\t\tthis.gl.attachShader(this.shaderProgram, fragmentShader);\r\n\t\tthis.gl.linkProgram(this.shaderProgram);\t\t \r\n\t\tif (!this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS)) {\r\n\t\t\talert(\"Unable to initialize the shader program: \" + this.gl.getProgramInfoLog(this.shaderProgram));\r\n\t\t}\r\n\r\n\t\tthis.initAssetTextures(this.gl, asset)\r\n\t}\r\n\r\n\tprivate initAssetTextures(gl: WebGLRenderingContext, asset: Asset) {\r\n\r\n\r\n\t\tthis.initTextures(gl, asset.tileAssets);\r\n\t\tthis.initBaseTextures(gl, asset);\r\n\r\n\t}\r\n\r\n\tprivate initTextures(gl: WebGLRenderingContext, textureMap: Map<number, TileAsset>) {\r\n\t\ttextureMap.forEach((tileAsset: TileAsset, key: number) => {\r\n\r\n\t\t\tlet texture = gl.createTexture();\r\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\r\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, tileAsset.image);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n\r\n\t\t\tthis.tileTextures.set(key, texture);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate initBaseTextures(gl: WebGLRenderingContext, asset: Asset) {\r\n\r\n\t\tthis.glTexture = gl.createTexture();\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.glTexture);\r\n  \t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.texture);\r\n  \t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n  \t\tgl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n\t\tthis.frostParticelTexture = gl.createTexture();\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.frostParticelTexture);\r\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.particleTexture);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n\t\tthis.genericParticleTexture = gl.createTexture();\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.genericParticleTexture);\r\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.genericParticleTexture);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n  \t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\tgl.enable(gl.BLEND);\r\n\t}\r\n\r\n\tprivate compileShader(source: string, shaderType: ShaderType) {\r\n\t\tvar shader: WebGLShader;\r\n\r\n\t\tif(shaderType == ShaderType.Fragment) {\r\n\t\t\tshader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n\t\t} else if (shaderType == ShaderType.Vertex) {\r\n\t\t\tshader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n\t\t}\r\n\r\n\t\tthis.gl.shaderSource(shader, source);\r\n\t\tthis.gl.compileShader(shader);\r\n\r\n\t\tif (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n     \t\tconsole.log(\"An error occurred compiling the shaders: \" + this.gl.getShaderInfoLog(shader));\r\n     \t\treturn null;\r\n   \t\t}\r\n\r\n   \t\treturn shader;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/context.ts","import { Tile, Vector, Rectangle } from './model';\r\nimport { RenderCall } from './render/renderCall';\r\nimport { RenderHelper } from './render/renderHelper';\r\nimport { Constants } from './service/constants';\r\n\r\nexport class TileMap {\r\n\r\n\tpublic renderCalls: Map<number, RenderCall> = new Map<number, RenderCall>();\r\n\tpublic decorativeRenderCalls: Map<number, RenderCall> = new Map<number, RenderCall>();\r\n\r\n\tprivate renderHelper = RenderHelper.getInstance();\r\n\tprivate constants = Constants.getInstance();\r\n\tprivate tileMap: Map<number, Tile[]> = new Map<number, Tile[]>();\r\n\tprivate decorativeTileMap: Map<number, Tile[]> = new Map<number, Tile[]>();\r\n\r\n\tconstructor(public tiles: Tile[], public decorativeTiles: Tile[]) {\r\n\t\tthis.createStaticRenderCalls(this.tiles, this.tileMap, this.renderCalls);\r\n\t\tthis.createStaticRenderCalls(this.decorativeTiles, this.decorativeTileMap, this.decorativeRenderCalls);\r\n\t}\r\n\r\n\tprivate createStaticRenderCalls(tiles: Tile[], tileMap: Map<number, Tile[]>, renderCalls: Map<number, RenderCall>) {\r\n\r\n\t\tfor (let tile of tiles) {\r\n\t\t\tlet set = tileMap.get(tile.key);\r\n\t\t\tif (set) {\r\n\t\t\t\tset.push(tile);\r\n\t\t\t} else {\r\n\t\t\t\ttileMap.set(tile.key, [tile]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttileMap.forEach((tiles: Tile[], key: number) => {\r\n\t\t\tlet renderCall = new RenderCall();\r\n\t\t\trenderCall.key = key;\r\n\r\n\t\t\tfor (let tile of tiles) {\r\n\t\t\t\trenderCall.vertecies = this.renderHelper.getVertecies(tile.x, tile.y, tile.width, tile.height, renderCall.vertecies);\r\n\t\t\t\trenderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(tile, renderCall.textureCoords, this.constants.tileSize);\r\n\t\t\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\t\t\t}\r\n\r\n\t\t\trenderCalls.set(renderCall.key, renderCall);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic createGoalRenderCall(goal: Rectangle, renderCall: RenderCall) {\r\n\r\n\t\trenderCall.vertecies = this.renderHelper.getVertecies(goal.x, goal.y, goal.width, goal.height, renderCall.vertecies);\r\n\t\trenderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, 550);\r\n\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n\t\treturn renderCall;\r\n\t}\r\n\r\n\tpublic createRenderCall(renderCalls: Map<number, RenderCall>) {\r\n\r\n\t\trenderCalls = this.createDecorativeRenderCall(renderCalls);\r\n\r\n\t\tthis.renderCalls.forEach((renderCall: RenderCall, key: number) => {\r\n\t\t\tlet set = renderCalls.get(key);\r\n\r\n\t\t\tif (!set) {\r\n\t\t\t\trenderCalls.set(key, new RenderCall());\r\n\t\t\t\tset = renderCalls.get(key);\r\n\t\t\t}\r\n\r\n\t\t\tset.vertecies.push.apply(set.vertecies, renderCall.vertecies);\r\n\t\t\tset.indecies.push.apply(set.indecies, renderCall.indecies);\r\n\t\t\tset.textureCoords.push.apply(set.textureCoords, renderCall.textureCoords);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tpublic createDecorativeRenderCall(renderCalls: Map<number, RenderCall>) {\r\n\r\n\t\tthis.decorativeRenderCalls.forEach((renderCall: RenderCall, key: number) => {\r\n\t\t\tlet set = renderCalls.get(key);\r\n\r\n\t\t\tif (!set) {\r\n\t\t\t\trenderCalls.set(key, new RenderCall());\r\n\t\t\t\tset = renderCalls.get(key);\r\n\t\t\t}\r\n\r\n\t\t\tset.vertecies.push.apply(set.vertecies, renderCall.vertecies);\r\n\t\t\tset.indecies.push.apply(set.indecies, renderCall.indecies);\r\n\t\t\tset.textureCoords.push.apply(set.textureCoords, renderCall.textureCoords);\r\n\t\t});\r\n\r\n\t\treturn renderCalls;\r\n\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/tileMap.ts","import { RenderHelper } from '../render/renderHelper';\r\nimport { RenderCall } from '../render/renderCall';\r\nimport { Context } from '../context';\r\n\r\nexport class TextRenderer {\r\n\r\n\tprivate renderHelper: RenderHelper = new RenderHelper();\r\n\tprivate context: Context;\r\n\r\n\tconstructor(context: Context) {\r\n\t\tthis.context = context;\r\n\t}\r\n\r\n\tpublic createTextRenderCall(sizeX: number, sizeY: number, type: number, renderCall: RenderCall, camera: [number, number]) {\r\n\r\n\t\trenderCall.vertecies = this.renderHelper.getVertecies(((this.context.gl.canvas.width/2) - (sizeX/2) + camera[0]), ((this.context.gl.canvas.height/2) - (sizeY/2) + camera[1]), sizeX, sizeY, renderCall.vertecies);\r\n\t\trenderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, type);\r\n\t\trenderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n\t\treturn renderCall;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/text/textRenderer.ts","import { Vector, Sprite, Rectangle, Animation, SpellType, FrameAnimation, RotationAnimation, StaticRotationAnimation, Projectile } from '../model'\r\nimport { RenderCall, DynamicRenderCall, RenderHelper, Matrix3, TextureMapper, ColorRenderCall } from '../render';\r\nimport { Context } from '../context';\r\nimport { CollisionData } from '../collision/collisionData';\r\nimport { Player } from '../character/player';\r\nimport { ParticleHandler } from '../handler/particleHandler';\r\n\r\nexport class AnimationHandler {\r\n\r\n    public animations: Animation[] = [];\r\n    public dynamicAnimations: Animation[] = [];\r\n    private staticAnimations: Animation[] = [];\r\n    private particleHandler: ParticleHandler;\r\n    private textureMapper = TextureMapper.getInstance();\r\n    private renderHelper = RenderHelper.getInstance();\r\n\r\n    constructor(particleHandler: ParticleHandler) {\r\n        this.particleHandler = particleHandler;\r\n    }\r\n\r\n    public bloodAnimation_A(position: Vector, size: number) {\r\n        let animation = new Animation([100, 101, 102, 103, 104, 105]);\r\n\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n\r\n        animation.repetitions = 6;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public bloodAnimation_B_Right(position: Vector, size: number) {\r\n        let animation = new Animation([106, 107, 108, 109, 110, 111]);\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n\r\n        animation.repetitions = 6;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public bloodAnimation_B_Left(position: Vector, size: number) {\r\n        let animation = new Animation([106, 107, 108, 109, 110, 111]);\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n\r\n        animation.inverse = true;\r\n\r\n        animation.repetitions = 6;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public voidAnimation() {\r\n        let animation = new Animation([]);\r\n\r\n        animation.areaToRender = new Rectangle(0, 0, 0, 0);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public bloodAnimation_C(position: Vector, size: number) {\r\n        let animation = new Animation([147, 148, 149, 150, 151, 152]);\r\n\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n\r\n        animation.repetitions = 6;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public swordman_death(position: Vector, inverse: boolean) {\r\n        let animation = new Animation([\r\n            214, 216, 217, 218\r\n        ]);\r\n\r\n        animation.timeToChange = 120;\r\n\r\n        animation.repetitions = 4;\r\n\r\n        animation.areaToRender = new Rectangle(position.x, position.y, 56, 59);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        animation.onCompletion = () => {\r\n            this.swordman_corpse(position, inverse);\r\n        }\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public createArcherDeath(area: Rectangle, inverse: boolean) {\r\n        this.bloodAnimation_C(new Vector(area.x - 10, area.y - 20), 75);\r\n        this.bloodAnimation_B_Left(new Vector(area.x - 10, area.y - 20), 75);\r\n        this.bloodAnimation_B_Right(new Vector(area.x - 10, area.y - 20), 75);\r\n        this.archer_death(area, inverse);\r\n        \r\n    }\r\n\r\n    public archer_death(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([290, 291, 292, 293]);\r\n\r\n        animation.timeToChange = 120;\r\n\r\n        animation.repetitions = 4;\r\n\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        animation.onCompletion = () => {\r\n            this.archer_corpse(area, inverse);\r\n        }\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public archer_corpse(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([293]);\r\n        animation.timeToChange = 120;\r\n\r\n        animation.delay = 4;\r\n\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        this.staticAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public player_sword_death_corpse(position: Vector, inverse: boolean) {\r\n        let animation = new Animation([306]);\r\n        animation.timeToChange = 150;\r\n        animation.delay = 6;\r\n\r\n        animation.areaToRender = new Rectangle(position.x, position.y, 90, 90);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public player_sword_death_animation(position: Vector, inverse: boolean) {\r\n        let animation = new Animation([301, 302, 303, 304, 305, 306]);\r\n\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 150;\r\n        animation.repetitions = 6;\r\n        animation.areaToRender = new Rectangle(position.x, position.y, 90, 90);\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public apprentice_Death(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([144, 145, 146, 153, 154, 155]);\r\n\r\n        animation.repetitions = 5;\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 150;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.onCompletion = () => {\r\n            this.apprentice_corpse(area, inverse);\r\n        }\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public apprentice_corpse(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([155]);\r\n\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 150;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        this.staticAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public masterSorcerer_death(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([586, 587, 589, 590, 591, 592, 593, 594, 595, 596]);\r\n\r\n        animation.repetitions = 9;\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 125;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.onCompletion = () => {\r\n            this.masterSorcerer_corpse(area, inverse);\r\n        }\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public masterSorcerer_corpse(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([596]);\r\n\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 175;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        this.staticAnimations.push(animation);\r\n\r\n        return animation;\r\n    }    \r\n\r\n    public screamer_Death(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([576, 577, 578, 579]);\r\n\r\n        animation.repetitions = 3;\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 175;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.onCompletion = () => {\r\n            this.screamer_corpse(area, inverse);\r\n        }\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public screamer_corpse(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([579]);\r\n\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 175;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        this.staticAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public shadow_Death(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([132, 130, 127, 124, 119]);\r\n\r\n        animation.repetitions = 4;\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 100;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.onCompletion = () => {\r\n            this.shadow_corpse(area, inverse);\r\n        };\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public shadow_corpse(area: Rectangle, inverse: boolean) {\r\n        let animation = new Animation([119]);\r\n\r\n        animation.repetitions = 4;\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 100;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        this.staticAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public swordman_corpse(position: Vector, inverse: boolean) {\r\n        let animation = new Animation([219]);\r\n\r\n        animation.timeToChange = 120;\r\n\r\n        animation.delay = 4;\r\n\r\n        animation.areaToRender = new Rectangle(position.x, position.y, 56, 59);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        this.staticAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public swordman_head(position: Vector, inverse: boolean) {\r\n        let animation = new Animation([215, 220, 221, 222, 223, 224, 225, 226]);\r\n        animation.timeToChange = 75;\r\n        animation.areaToRender = new Rectangle(position.x, position.y, 56, 59);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public fireball_destroy(position: Vector, size: number) {\r\n        let animation = new Animation([118, 119, 120, 121, 122, 123, 124, 125, 126]);\r\n        animation.timeToChange = 50;\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n\r\n        animation.repetitions = 9;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public necroball_explosion(position: Vector, size: number) {\r\n        this.particleHandler.createNecroballExplosion(position, size);\r\n    }\r\n\r\n    public fireball_explosion(position: Vector, size: number) {\r\n        this.particleHandler.createFireballExplosion(position, size);\r\n    }\r\n\r\n    public swordscut_a(position: Vector, size: number, inverse: boolean) {\r\n\r\n        let animation = new Animation([55, 56, 57, 58, 59]);\r\n        animation.inverse = inverse;\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n\r\n        this.animations.push(animation);\r\n\r\n        animation.repetitions = 5;\r\n\r\n        return animation;\r\n    }\r\n\r\n    public createDebugAnimation(position: Vector, size: number, repetitions: number) {\r\n        let animation = new Animation([5]);\r\n        animation.areaToRender = new Rectangle(position.x, position.y, size, size);\r\n        animation.repetitions = repetitions;\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public fallDeath(position: Vector) {\r\n        this.bloodAnimation_A(new Vector(position.x, position.y + 20), 50);\r\n        this.bloodAnimation_B_Right(new Vector(position.x + 5, position.y + 5), 100);\r\n        this.bloodAnimation_B_Left(new Vector(position.x - 55, position.y + 5), 100);\r\n    }\r\n\r\n    public fireDeathSwordman(area: Rectangle, inverse: boolean) {\r\n\r\n        let onUpdate = (position: Vector) => {\r\n            this.particleHandler.createFireDeath(position);\r\n        }\r\n\r\n        let animation = new FrameAnimation(0, -4, 0, 0, onUpdate, [250, 251, 252, 253, 254, 255, 256, 257]);\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 100;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.repetitions = 8;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public fireDeathArcher(area: Rectangle, inverse: boolean) {\r\n\r\n        let onUpdate = (position: Vector) => {\r\n            this.particleHandler.createFireDeath(position);\r\n        }\r\n\r\n        let animation = new FrameAnimation(0, -4, 0, 0, onUpdate, [282, 283, 284, 285, 286, 287, 288, 289]);\r\n        animation.inverse = inverse;\r\n        animation.timeToChange = 100;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.repetitions = 8;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public createArrow(area: Rectangle, inverse: boolean, velocity: Vector) {\r\n        let animation = new RotationAnimation(velocity, [268]);\r\n        animation.inverse = inverse;\r\n        animation.areaToRender = area;\r\n\r\n        animation.timeToChange = 20000;\r\n        animation.repetitions = 1;\r\n\r\n        this.dynamicAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public createDeadArrow(area: Rectangle, inverse: boolean, velocity: Vector) {\r\n        let collAngle = new Vector(velocity.x, velocity.y);\r\n\r\n        let animation = new StaticRotationAnimation(collAngle, inverse, [268]);\r\n        animation.inverse = inverse;\r\n\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.timeToChange = 2000;\r\n        animation.repetitions = 1;\r\n\r\n        this.dynamicAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public createArrowHit(projectile: Projectile, useCollisionArea: boolean) {\r\n\r\n        let collAngle = new Vector(projectile.velocity.x, projectile.velocity.y);\r\n\r\n        let animation = new RotationAnimation(collAngle, [269]);\r\n        animation.inverse = projectile.animation.inverse;\r\n\r\n        if (useCollisionArea) {\r\n            animation.areaToRender = new Rectangle(projectile.collisionArea.x, projectile.collisionArea.y, projectile.area.width, projectile.area.height);\r\n        } else {\r\n            animation.areaToRender = new Rectangle(projectile.area.x, projectile.area.y, projectile.area.width, projectile.area.height);\r\n        }\r\n\r\n        animation.areaToRender.width = animation.areaToRender.width * 0.67;\r\n\r\n        animation.timeToChange = 2000;\r\n        animation.repetitions = 1;\r\n\r\n\r\n        this.dynamicAnimations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n    public frozenSwordMan(area: Rectangle, inverse: boolean, color: number[], onCompletion: () => void) {\r\n        let animation = new Animation([237, 238, 239, 240, 241, 242]);\r\n        animation.inverse = inverse;\r\n        animation.color = color;\r\n        animation.timeToChange = 250;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.onCompletion = onCompletion;\r\n\r\n        this.animations.push(animation);\r\n\r\n        animation.repetitions = 6;\r\n\r\n        return animation;\r\n    }\r\n\r\n    public frozenArcher(area: Rectangle, inverse: boolean, color: number[], onCompletion: () => void) {\r\n        let animation = new Animation([270, 271, 272, 273, 274, 275]);\r\n        animation.inverse = inverse;\r\n        animation.color = color;\r\n        animation.timeToChange = 250;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        animation.onCompletion = onCompletion;\r\n\r\n        this.animations.push(animation);\r\n\r\n        animation.repetitions = 6;\r\n\r\n        return animation;\r\n    }\r\n\r\n    public frozenPart(area: Rectangle, inverse: boolean, color: number[], partIndex: number, baseTextureNumber: number) {\r\n        let animation = new Animation([baseTextureNumber + partIndex]);\r\n        animation.inverse = inverse;\r\n        animation.color = color;\r\n        animation.timeToChange = 2000;\r\n        animation.areaToRender = new Rectangle(area.x, area.y, area.width, area.height);\r\n\r\n        this.animations.push(animation);\r\n\r\n        animation.repetitions = 1;\r\n\r\n        return animation;\r\n    }\r\n\r\n\r\n\r\n    public update(delta: number) {\r\n\r\n        let completedAnimations: Animation[] = [];\r\n        let totalAnimations = this.animations.concat(this.dynamicAnimations);\r\n\r\n        for (let animation of totalAnimations) {\r\n            animation.next(delta);\r\n            if (animation.repetitions <= 0) {\r\n                completedAnimations.push(animation);\r\n                if (animation.onCompletion) {\r\n                    animation.onCompletion();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let completedAnimation of completedAnimations) {\r\n            this.remove(completedAnimation);\r\n        }\r\n    }\r\n\r\n    public createDynamicRenderCall(renderCall: DynamicRenderCall, camera: [number, number]) {\r\n\r\n        for (let animation of this.dynamicAnimations) {\r\n            if (animation instanceof RotationAnimation || animation instanceof StaticRotationAnimation) {\r\n\r\n                let x = animation.areaToRender.x - camera[0];\r\n                let y = animation.areaToRender.y - camera[1];\r\n                let width = animation.areaToRender.width;\r\n                let height = animation.areaToRender.height;\r\n\r\n                if (animation.inverse) {\r\n                    renderCall.vertecies = this.renderHelper.getInverseVertecies(x, y, width, height, renderCall.vertecies);\r\n                } else {\r\n                    renderCall.vertecies = this.renderHelper.getVertecies(x, y, width, height, renderCall.vertecies);\r\n                }\r\n\r\n                renderCall.textureCoords.push.apply(renderCall.textureCoords, animation.getCurrentFrame());\r\n                renderCall.matrices = this.renderHelper.getMatrices(x, y, width, height, animation.angle, renderCall.matrices);\r\n                renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n            }\r\n        }\r\n    }\r\n\r\n    public createRenderCall(renderCall: ColorRenderCall) {\r\n\r\n        for (let animation of this.animations) {\r\n            if (animation.delay <= 0) {\r\n                let x = animation.areaToRender.x;\r\n                let y = animation.areaToRender.y;\r\n                let width = animation.areaToRender.width;\r\n                let height = animation.areaToRender.height;\r\n\r\n                if (animation.inverse) {\r\n                    renderCall.vertecies = this.renderHelper.getInverseVertecies(x, y, width, height, renderCall.vertecies);\r\n                } else {\r\n                    renderCall.vertecies = this.renderHelper.getVertecies(x, y, width, height, renderCall.vertecies);\r\n                }\r\n\r\n                renderCall.textureCoords.push.apply(renderCall.textureCoords, animation.getCurrentFrame());\r\n\r\n                renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n                if (animation.color) {\r\n                    renderCall.color = this.renderHelper.getColor(renderCall.color, animation.color);\r\n                } else {\r\n                    renderCall.color = this.renderHelper.getColor(renderCall.color, null);\r\n                }\r\n            }\r\n        }\r\n\r\n        return renderCall;\r\n    }\r\n\r\n    public createStaticRenderCall(renderCall: RenderCall) {\r\n\r\n        for (let animation of this.staticAnimations) {\r\n            if (animation.inverse) {\r\n                renderCall.vertecies = this.renderHelper.getInverseVertecies(animation.areaToRender.x, animation.areaToRender.y, animation.areaToRender.width, animation.areaToRender.height, renderCall.vertecies);\r\n            } else {\r\n                renderCall.vertecies = this.renderHelper.getVertecies(animation.areaToRender.x, animation.areaToRender.y, animation.areaToRender.width, animation.areaToRender.height, renderCall.vertecies);\r\n            }\r\n\r\n            renderCall.textureCoords.push.apply(renderCall.textureCoords, animation.getCurrentFrame());\r\n\r\n            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n        }\r\n\r\n        return renderCall;\r\n    }\r\n\r\n    public remove(animation: Animation) {\r\n        let index = this.animations.indexOf(animation);\r\n        if (index != -1) {\r\n            this.animations.splice(index, 1);\r\n        } else {\r\n            index = this.dynamicAnimations.indexOf(animation);\r\n            if (index != -1) {\r\n                this.dynamicAnimations.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public enemy(position: Vector, inverse: boolean) {\r\n        let animation = new Animation([209, 211, 210]);\r\n        animation.timeToChange = 120;\r\n        animation.areaToRender = new Rectangle(position.x, position.y, 56, 58);\r\n\r\n        animation.inverse = inverse;\r\n\r\n        this.animations.push(animation);\r\n\r\n        return animation;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/animationHandler.ts","import {\r\n    Projectile,\r\n    Vector,\r\n    Rectangle,\r\n    SpellType,\r\n    Spell,\r\n    PhysicalProjectile,\r\n    Meele,\r\n    Animation,\r\n    DebugElement,\r\n    StickyAnimation,\r\n    RotationAnimation,\r\n    StaticRotationAnimation,\r\n    CollisionProjectile,\r\n    ProjectileType,\r\n    ParticleProjectile,\r\n    DynamicTile,\r\n    Progress\r\n} from '../model';\r\nimport { Player } from '../character/player';\r\nimport { AnimationHandler } from './animationHandler';\r\nimport { ParticleHandler } from './particleHandler';\r\nimport { EnemyHandler } from './enemyHandler';\r\nimport { DebugHandler } from './debugHandler';\r\nimport { Gravity } from '../forces/gravity';\r\nimport { Drag } from '../forces/drag';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { CollisionData } from '../collision/collisionData';\r\nimport { Enemy } from '../character/enemy';\r\n\r\nexport class ProjectileHandler {\r\n\r\n    public projectiles: Projectile[] = [];\r\n    private enemyProjectiles: Projectile[] = [];\r\n    private animationHandler: AnimationHandler;\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n    private debuggHandler = DebugHandler.getInstance();\r\n\r\n    constructor(animationHandler: AnimationHandler, private shieldLevel: number) {\r\n        this.animationHandler = animationHandler;\r\n    }\r\n\r\n    public clear() {\r\n        this.projectiles = [];\r\n        this.enemyProjectiles = [];\r\n    }\r\n\r\n    public createArrow(position: Vector, inverse: boolean, velocity: Vector) {\r\n        let arrow: PhysicalProjectile;\r\n        let rectangle = new Rectangle(position.x, position.y, 40, 10);\r\n        let collRect: Rectangle;\r\n\r\n        if (inverse) {\r\n            collRect = new Rectangle(position.x + 10, position.y + 5, 1, 1);\r\n        } else {\r\n            collRect = new Rectangle(position.x + 20, position.y + 5, 1, 1);\r\n        }\r\n\r\n        let animation = this.animationHandler.createArrow(rectangle, inverse, velocity);\r\n        arrow = new PhysicalProjectile(velocity, rectangle, animation, 1, collRect, true);\r\n        arrow.gravity = new Gravity(0.0003);\r\n        arrow.drag = new Drag(0);\r\n\r\n        arrow.projectileType = ProjectileType.Arrow;\r\n        arrow.damage = 20;\r\n\r\n        this.enemyProjectiles.push(arrow);\r\n\r\n        return arrow;\r\n    }\r\n\r\n    public createNecroBall(position: Vector, size: number, inverse: boolean, velocity: Vector, damage: number, onUpdate: (area: Rectangle, inverse: boolean, offsetX: number) => void) {\r\n        let necroBall: ParticleProjectile;\r\n\r\n        if (inverse) {\r\n            let area = new Rectangle(position.x + 5, position.y, size, size);\r\n            necroBall = new ParticleProjectile(velocity, area, this.animationHandler.voidAnimation(), 0.2, (size * 10), inverse, 0, onUpdate);\r\n        } else {\r\n            let area = new Rectangle(position.x + 40, position.y, size, size);\r\n            necroBall = new ParticleProjectile(velocity, area, this.animationHandler.voidAnimation(), 0.2, (size * 10), inverse, 0, onUpdate);\r\n        }\r\n\r\n        necroBall.projectileType = ProjectileType.NecroBall;\r\n        necroBall.damage = damage;\r\n        necroBall.distance = 1000;\r\n\r\n        this.enemyProjectiles.push(necroBall);\r\n    }\r\n\r\n    public createDeadArrow(position: Vector, inverse: boolean, velocity: Vector, push?: Vector) {\r\n        let arrow: PhysicalProjectile;\r\n        let rectangle = new Rectangle(position.x, position.y, 40, 10);\r\n        let collRect: Rectangle;\r\n\r\n        if (inverse) {\r\n            collRect = new Rectangle(position.x + 10, position.y + 5, 1, 1);\r\n        } else {\r\n            collRect = new Rectangle(position.x + 20, position.y + 5, 1, 1);\r\n        }\r\n\r\n        let animation = this.animationHandler.createDeadArrow(rectangle, inverse, velocity);\r\n        velocity.x = -velocity.x / 2;\r\n        if (push) {\r\n            velocity.x += push.x;\r\n            velocity.y += push.y;\r\n        }\r\n        arrow = new PhysicalProjectile(velocity, rectangle, animation, 1, collRect);\r\n        arrow.gravity = new Gravity(0.0006);\r\n        arrow.drag = new Drag(0.0002);\r\n\r\n        arrow.projectileType = ProjectileType.None;\r\n\r\n        this.projectiles.push(arrow);\r\n\r\n        return arrow;\r\n    }\r\n\r\n    public createFireBall(position: Vector, inverse: boolean, velocityValue: number, strength: number, offset: number, onUpdate: (area: Rectangle, inverse: boolean, offsetX: number) => void) {\r\n\r\n        let fireBall: ParticleProjectile;\r\n\r\n        if (inverse) {\r\n            fireBall = new ParticleProjectile(new Vector(-velocityValue, 0), new Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n        } else {\r\n            fireBall = new ParticleProjectile(new Vector(velocityValue, 0), new Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n        }\r\n\r\n        this.projectiles.push(fireBall);\r\n    }\r\n\r\n    public createFireballRank1(position: Vector, inverse: boolean, velocityValue: number, strength: number, offset: number, onUpdate: (area: Rectangle, inverse: boolean, offsetX: number) => void) {\r\n        let fireBall: ParticleProjectile;\r\n\r\n        strength = strength/3;\r\n\r\n        if (inverse) {\r\n            fireBall = new ParticleProjectile(new Vector(-velocityValue, 0), new Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n        } else {\r\n            fireBall = new ParticleProjectile(new Vector(velocityValue, 0), new Rectangle(position.x, position.y, strength, strength), this.animationHandler.voidAnimation(), 0.2, (strength * 10), inverse, offset, onUpdate);\r\n        }\r\n\r\n        this.projectiles.push(fireBall);\r\n    }\r\n\r\n    public createCollisionProjectile(position: Vector, offset: number, inverse: boolean, damage: number, velocity: Vector) {\r\n        let rect: Rectangle;\r\n        if (inverse) {\r\n            rect = new Rectangle(position.x, position.y - 10, 10, 10);\r\n            velocity.x = -velocity.x;\r\n        } else {\r\n            rect = new Rectangle(position.x + offset, position.y - 10, 10, 10);\r\n        }\r\n        let collisionProjectile = new CollisionProjectile(velocity, rect, 40, this.animationHandler.voidAnimation(), damage);\r\n        collisionProjectile.projectileType = ProjectileType.Sword;\r\n\r\n        this.enemyProjectiles.push(collisionProjectile);\r\n\r\n        return collisionProjectile;\r\n    }\r\n\r\n    public createSwordman_death(position: Vector, inverse: boolean, velocity: Vector) {\r\n        let projectile: PhysicalProjectile;\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(position.x, position.y, 28, 29), this.animationHandler.swordman_head(position, inverse), 0.3)\r\n        projectile.extendedOnGroundCollision = () => {\r\n            let currentFrame = projectile.animation.getCurrentFrame();\r\n            projectile.animation.textureCoords = [currentFrame];\r\n            projectile.animation.frameIndex = 0;\r\n        }\r\n        this.animationHandler.bloodAnimation_C(new Vector(position.x - 10, position.y - 20), 75);\r\n        this.animationHandler.bloodAnimation_B_Left(new Vector(position.x - 10, position.y - 20), 75);\r\n        this.animationHandler.bloodAnimation_B_Right(new Vector(position.x - 10, position.y - 20), 75);\r\n        this.animationHandler.swordman_death(position, inverse);\r\n\r\n        this.projectiles.push(projectile);\r\n    }\r\n\r\n    public createPlayerSword_death(position: Vector, inverse: boolean) {\r\n\r\n        let projectile: PhysicalProjectile;\r\n        let projectileCorpse: Projectile;\r\n        let velocity = new Vector(0, 0);\r\n        let x = position.x;\r\n\r\n        if (inverse) {\r\n            x -= 45;\r\n        }\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(x, position.y - 6, 45, 85), this.animationHandler.player_sword_death_animation(position, inverse), 1)\r\n\r\n        projectileCorpse = new PhysicalProjectile(velocity, new Rectangle(x, position.y - 6, 45, 85), this.animationHandler.player_sword_death_corpse(position, inverse), 1)\r\n        if (inverse) {\r\n            this.animationHandler.bloodAnimation_B_Left(new Vector(position.x - 10, position.y - 20), 75);\r\n        } else {\r\n            this.animationHandler.bloodAnimation_B_Right(new Vector(position.x - 10, position.y - 20), 75);\r\n        }\r\n\r\n        this.projectiles.push(projectile);\r\n        this.projectiles.push(projectileCorpse);\r\n    }\r\n\r\n    public createShadow_death(area: Rectangle, inverse: boolean) {\r\n\r\n        let projectile: PhysicalProjectile;\r\n        let projectileCorpse: Projectile;\r\n        let velocity = new Vector(0, 0);\r\n        let x = area.x;\r\n\r\n\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.shadow_Death(area, inverse), 0.8)\r\n\r\n        this.projectiles.push(projectile);\r\n    }\r\n\r\n    public createMasterSorcerer_death(area: Rectangle, inverse: boolean) {\r\n        let projectile: PhysicalProjectile;\r\n        let projectileCorpse: Projectile;\r\n        let velocity = new Vector(0, 0);\r\n        let x = area.x;\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.masterSorcerer_death(area, inverse), 0.8)\r\n\r\n        this.projectiles.push(projectile);\r\n    }\r\n\r\n    public createScreamer_death(area: Rectangle, inverse: boolean) {\r\n        let projectile: PhysicalProjectile;\r\n        let projectileCorpse: Projectile;\r\n        let velocity = new Vector(0, 0);\r\n        let x = area.x;\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.screamer_Death(area, inverse), 0.8)\r\n\r\n        this.projectiles.push(projectile);\r\n    }\r\n\r\n    public createApprentice_death(area: Rectangle, inverse: boolean) {\r\n\r\n        let projectile: PhysicalProjectile;\r\n        let projectileCorpse: Projectile;\r\n        let velocity = new Vector(0, 0);\r\n        let x = area.x;\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(x, area.y - 10, area.width, area.height), this.animationHandler.apprentice_Death(area, inverse), 0.8)\r\n\r\n        this.projectiles.push(projectile);\r\n    }\r\n\r\n    public createFrozenSwordManDeath(area: Rectangle, inverse: boolean, color: number[]) {\r\n\r\n        let onComplete = () => {\r\n\r\n            let velocotyies = [\r\n                new Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n            ];\r\n\r\n            let collisionAreas = [\r\n                new Rectangle(area.x + 7, area.y + 22, 11, 8),\r\n                new Rectangle(area.x + 12, area.y + 5, 12, 12),\r\n                new Rectangle(area.x + 15, area.y + 24, 14, 6),\r\n                new Rectangle(area.x + 13, area.y + 38, 6, 8),\r\n                new Rectangle(area.x + 6, area.y + 38, 8, 10),\r\n                new Rectangle(area.x + 4, area.y + 11, 13, 16)\r\n            ];\r\n\r\n            for (let i = 0; i < 6; i++) {\r\n                this.createFrozenPart(velocotyies[i], area, inverse, color, i, 243, collisionAreas[i]);\r\n            }\r\n        };\r\n\r\n        this.animationHandler.frozenSwordMan(area, inverse, color, onComplete);\r\n    }\r\n\r\n    public createFrozenArcherDeath(area: Rectangle, inverse: boolean, color: number[]) {\r\n\r\n        let onComplete = () => {\r\n\r\n            let velocotyies = [\r\n                new Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n                new Vector((-Math.random() * 0.15), (-Math.random() * 0.3)),\r\n            ];\r\n\r\n            let collisionAreas = [\r\n                new Rectangle(area.x + 8, area.y + 2, 11, 6),\r\n                new Rectangle(area.x + 4, area.y + 4, 9, 14),\r\n                new Rectangle(area.x + 17, area.y + 3, 11, 11),\r\n                new Rectangle(area.x + 13, area.y + 7, 15, 15),\r\n                new Rectangle(area.x + 5, area.y + 15, 13, 17),\r\n                new Rectangle(area.x + 14, area.y + 19, 13, 13)\r\n            ];\r\n\r\n            for (let i = 0; i < 6; i++) {\r\n                this.createFrozenPart(velocotyies[i], area, inverse, color, i, 276, collisionAreas[i]);\r\n            }\r\n        };\r\n\r\n        this.animationHandler.frozenArcher(area, inverse, color, onComplete);\r\n    }\r\n\r\n    public update(delta: number, collidables: Rectangle[], player: Player, dynamicTiles: DynamicTile[]) {\r\n        let removeProjectile: Projectile[] = [];\r\n        let removeEnemyProjectile: Projectile[] = [];\r\n\r\n        removeProjectile = this.updateFriendslyProjectiles(delta, collidables, dynamicTiles);\r\n        removeEnemyProjectile = this.updateEnemyProjectiles(delta, player, collidables, dynamicTiles);\r\n\r\n        for (let projectile of removeProjectile) {\r\n            this.destroyProjectile(projectile, this.projectiles);\r\n        }\r\n\r\n        for (let projectile of removeEnemyProjectile) {\r\n            this.destroyProjectile(projectile, this.enemyProjectiles);\r\n        }\r\n    }\r\n\r\n    public destroyProjectile(projectile: Projectile, projectiles: Projectile[]) {\r\n        this.destroyAnimation(projectile);\r\n        this.animationHandler.remove(projectile.animation);\r\n        let index = projectiles.indexOf(projectile);\r\n        if (index != -1) {\r\n            projectiles.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public calculateDirection(area: Rectangle, enemy: Enemy) {\r\n        let velocity = new Vector((enemy.position.x + enemy.width / 2) - (area.x + (area.width / 2)), enemy.position.y - (area.y + (area.height / 2)))\r\n        velocity.normalize();\r\n        velocity.multiply((area.width / 90));\r\n\r\n        return velocity;\r\n    }\r\n\r\n    private updateEnemyProjectiles(delta: number, player: Player, collidables: Rectangle[], dynamicTiles: DynamicTile[]) {\r\n        let removeProjectiles: Projectile[] = [];\r\n        let shieldCollidables: Rectangle[] = [];\r\n        let playerCollisionArea = player.getProjectileCollisionArea();\r\n\r\n        shieldCollidables.push(...player.getShieldCollidables());\r\n\r\n        for (let projectile of this.enemyProjectiles) {\r\n            let frameVelocity = new Vector(projectile.velocity.x * delta, projectile.velocity.y * delta);\r\n            removeProjectiles = this.updateAndCollCheckEnemyProjectile(projectile, frameVelocity, delta, player, dynamicTiles, playerCollisionArea, shieldCollidables, removeProjectiles);\r\n            removeProjectiles = this.checkStaticObjectCollisions(projectile, frameVelocity, collidables, removeProjectiles);\r\n        }\r\n\r\n        return removeProjectiles;\r\n    }\r\n\r\n    private updateAndCollCheckEnemyProjectile(projectile: Projectile, frameVelocity: Vector, delta: number, player: Player, dynamicTiles: DynamicTile[], playerCollisionArea: Rectangle, shieldCollidables: Rectangle[], removeProjectiles: Projectile[]) {\r\n        let collisionData: CollisionData;\r\n        let shieldCollisionData: CollisionData;\r\n        let groundCollision: boolean;\r\n        let liftVelocity: Vector;\r\n        projectile.updateForces(delta);\r\n\r\n        let velocity = player.getVelocity();\r\n        let deltaVelocity = new Vector(frameVelocity.x - velocity.x * delta, frameVelocity.y - velocity.y * delta);\r\n\r\n        collisionData = this.collisionDetection.checkProjectileCollisionY([playerCollisionArea], projectile, deltaVelocity, false);\r\n        shieldCollisionData = this.collisionDetection.checkProjectileCollisionY(shieldCollidables, projectile, deltaVelocity, false);\r\n\r\n        projectile.update(0, collisionData.collisionTimeY * frameVelocity.y, delta);\r\n\r\n        groundCollision = shieldCollisionData.groundCollision;\r\n\r\n        if (shieldCollisionData.groundCollision) {\r\n            this.setShieldDamage(player, projectile);\r\n            removeProjectiles.push(projectile);\r\n        } else if (collisionData.groundCollision) {\r\n            if (shieldCollidables.length > 0) {\r\n                this.setShieldDamage(player, projectile);\r\n            } else {\r\n                this.setDamageAnimation(player, projectile);\r\n            }\r\n\r\n            removeProjectiles.push(projectile);\r\n        }\r\n\r\n        if (projectile.projectileType == ProjectileType.Arrow) {\r\n            collisionData = this.collisionDetection.checkProjectileCollisionX([playerCollisionArea], projectile, deltaVelocity, false, false);\r\n            shieldCollisionData = this.collisionDetection.checkProjectileCollisionX(shieldCollidables, projectile, deltaVelocity, false, false);\r\n        } else {\r\n            collisionData = this.collisionDetection.checkProjectileCollisionX([playerCollisionArea], projectile, deltaVelocity, false, true);\r\n            shieldCollisionData = this.collisionDetection.checkProjectileCollisionX(shieldCollidables, projectile, deltaVelocity, false, true);\r\n        }\r\n\r\n        projectile.update(collisionData.collisionTimeX * frameVelocity.x, 0, delta);\r\n\r\n        if (!groundCollision) {\r\n            if (shieldCollisionData.wallCollision) {\r\n                this.setShieldDamage(player, projectile);\r\n                removeProjectiles.push(projectile);\r\n            } else if (collisionData.wallCollision) {\r\n                if (shieldCollidables.length > 0) {\r\n                    this.setShieldDamage(player, projectile);\r\n                } else {\r\n                    this.setDamageAnimation(player, projectile);\r\n                }\r\n                removeProjectiles.push(projectile);\r\n            }\r\n        }\r\n\r\n        if (projectile instanceof CollisionProjectile || projectile instanceof ParticleProjectile) {\r\n            if (projectile.distance <= 0) {\r\n                removeProjectiles.push(projectile);\r\n            }\r\n        }\r\n\r\n        if (this.collisionDetection.aabbCheckS(projectile.collisionArea, dynamicTiles.map(it => it.tile))) {\r\n            removeProjectiles.push(projectile);\r\n        }\r\n\r\n        return removeProjectiles;\r\n    }\r\n\r\n    private setDamageAnimation(player: Player, projectile: Projectile) {\r\n        this.animationHandler.bloodAnimation_A(new Vector(projectile.collisionArea.x, projectile.collisionArea.y), 20);\r\n        if (projectile.projectileType == ProjectileType.Arrow) {\r\n            this.createStickyArrowAnimation(player, projectile);\r\n            player.takeDamage(projectile.damage);\r\n        } else if (projectile.projectileType == ProjectileType.Sword && projectile instanceof CollisionProjectile) {\r\n            player.takeDamage(projectile.damage);\r\n        } else if (projectile.projectileType = ProjectileType.NecroBall) {\r\n            player.takeDamage(projectile.damage);\r\n        }\r\n    }\r\n\r\n    private checkStaticObjectCollisions(projectile: Projectile, frameVelocity: Vector, collidables: Rectangle[], removeProjectiles: Projectile[]) {\r\n        let collisionData: CollisionData;\r\n\r\n        collisionData = this.collisionDetection.checkProjectileCollisionY(collidables, projectile, frameVelocity, true);\r\n\r\n        if (collisionData.groundCollision) {\r\n            this.setStaticObjectAnimation(projectile);\r\n            removeProjectiles.push(projectile);\r\n        } else {\r\n            collisionData = this.collisionDetection.checkProjectileCollisionX(collidables, projectile, frameVelocity, true, false);\r\n\r\n            if (collisionData.wallCollision) {\r\n                this.setStaticObjectAnimation(projectile);\r\n                removeProjectiles.push(projectile);\r\n            }\r\n        }\r\n\r\n        return removeProjectiles;\r\n\r\n    }\r\n\r\n    private createStickyArrowAnimation(player: Player, projectile: Projectile) {\r\n        if (projectile.projectileType == ProjectileType.Arrow) {\r\n            let animationOffset: Vector;\r\n            animationOffset = new Vector((player.position.x) - (projectile.area.x), player.position.y - projectile.area.y);\r\n            player.damageAnimations.push(new StickyAnimation(this.animationHandler.createArrowHit(projectile, true), animationOffset));\r\n        }\r\n    }\r\n\r\n    private setStaticObjectAnimation(projectile: Projectile) {\r\n        if (projectile.projectileType == ProjectileType.Arrow) {\r\n            this.animationHandler.createArrowHit(projectile, false);\r\n        }\r\n    }\r\n\r\n    private updateAndCollCheck(projectile: Projectile, delta: number, collidables: Rectangle[], removeProjectiles: Projectile[], dynamicTiles: DynamicTile[]) {\r\n        let collisionData: CollisionData;\r\n\r\n        projectile.updateForces(delta);\r\n\r\n        let frameVelocity = new Vector(projectile.velocity.x * delta, projectile.velocity.y * delta);\r\n        collisionData = this.collisionDetection.checkProjectileCollisionY(collidables, projectile, frameVelocity, true);\r\n        projectile.update(0, collisionData.collisionTimeY * frameVelocity.y, delta);\r\n\r\n        if (projectile instanceof PhysicalProjectile) {\r\n            if (collisionData.groundCollision) {\r\n                projectile.onGroundCollision();\r\n            }\r\n        }\r\n\r\n        if (collisionData.groundCollision) {\r\n            projectile.velocity.y = 0;\r\n        }\r\n\r\n        collisionData = this.collisionDetection.checkProjectileCollisionX(collidables, projectile, frameVelocity, true, false);\r\n        projectile.update(collisionData.collisionTimeX * frameVelocity.x, 0, delta);\r\n\r\n        if (projectile instanceof Spell || projectile instanceof ParticleProjectile) {\r\n            if (projectile.distance <= 0 || collisionData.wallCollision) {\r\n                removeProjectiles.push(projectile);\r\n            }\r\n        }\r\n\r\n        if (collisionData.wallCollision) {\r\n            projectile.velocity.x = 0;\r\n        }\r\n\r\n        if (this.collisionDetection.aabbCheckS(projectile.collisionArea, dynamicTiles.map(it => it.tile))) {\r\n            removeProjectiles.push(projectile);\r\n        }\r\n\r\n        return removeProjectiles;\r\n    }\r\n\r\n    private updateFriendslyProjectiles(delta: number, collidables: Rectangle[], dynamicTiles: DynamicTile[]) {\r\n        let collisionData: CollisionData;\r\n        let removeProjectiles: Projectile[] = [];\r\n\r\n        for (let projectile of this.projectiles) {\r\n            this.updateAndCollCheck(projectile, delta, collidables, removeProjectiles, dynamicTiles);\r\n        }\r\n\r\n        return removeProjectiles;\r\n    }\r\n\r\n    private setShieldDamage(player: Player, projectile: Projectile) {\r\n        if (projectile.projectileType == ProjectileType.Arrow) {\r\n            this.createDeadArrow(new Vector(projectile.area.x, projectile.area.y), projectile.animation.inverse, projectile.velocity);\r\n            this.drainShield(player, projectile, projectile.damage);\r\n        } else if (projectile.projectileType == ProjectileType.Sword && projectile instanceof CollisionProjectile) {\r\n            this.drainShield(player, projectile, projectile.damage);\r\n        } else if (projectile.projectileType = ProjectileType.NecroBall) {\r\n            this.drainShield(player, projectile, projectile.damage * 2);\r\n        }\r\n    }\r\n\r\n    private drainShield(player: Player, projectile: Projectile, amount: number) {\r\n        if (player.mana > 0) {\r\n            let extra: number;\r\n            if(this.shieldLevel != 0) {\r\n                extra = (amount / this.shieldLevel);\r\n            } else {\r\n                extra = amount * 2;\r\n            }\r\n            \r\n            if (!player.useMana(amount + extra)) {\r\n                player.mana = 0;\r\n                if (projectile.area.x > player.position.x) {\r\n                    player.shieldExplosion(false);\r\n                } else {\r\n                    player.shieldExplosion(true);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    private destroyAnimation(projectile: Projectile) {\r\n        if (projectile instanceof ParticleProjectile) {\r\n            if (projectile.projectileType == ProjectileType.NecroBall) {\r\n                this.animationHandler.necroball_explosion(new Vector(projectile.area.x, projectile.area.y), projectile.area.width);\r\n            } else {\r\n                this.animationHandler.fireball_explosion(new Vector(projectile.area.x, projectile.area.y), projectile.area.width);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createFrozenPart(velocity: Vector, rect: Rectangle, inverse: boolean, color: number[], partIndex: number, baseNumber: number, collisionArea: Rectangle) {\r\n        let projectile: Projectile;\r\n\r\n        projectile = new PhysicalProjectile(velocity, new Rectangle(rect.x, rect.y, rect.width, rect.width), this.animationHandler.frozenPart(rect, inverse, color, partIndex, baseNumber), 1, collisionArea)\r\n\r\n        this.projectiles.push(projectile);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/projectileHandler.ts","import { DynamicTile, Vector } from '../model';\r\nimport { Player } from '../character/player';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { RenderHelper, RenderCall } from '../render';\r\nimport { Constants } from '../service/constants';\r\n\r\nexport class DynamicTileHandler {\r\n\r\n    public dynamicTiles: DynamicTile[];\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n    private constants = Constants.getInstance();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public update(player: Player, delta: number) {\r\n\r\n        for (let dynamicTile of this.dynamicTiles) {\r\n\r\n            let travelDistance: number;\r\n\r\n            if (dynamicTile.verticalAxis) {\r\n                travelDistance = dynamicTile.velocity.y * delta;\r\n            } else {\r\n                travelDistance = dynamicTile.velocity.x * delta;\r\n            }\r\n\r\n            dynamicTile.update(delta, travelDistance);\r\n\r\n            if (player.lift == dynamicTile) {\r\n                if (dynamicTile.velocity.y < 0) {\r\n                    player.position.y = dynamicTile.tile.y - player.height;\r\n                } else {\r\n                    player.position.y = dynamicTile.tile.y - player.height;\r\n                }\r\n\r\n                player.liftVelocity = dynamicTile.velocity;\r\n\r\n                if (player.position.x > dynamicTile.tile.x + dynamicTile.tile.width || player.position.x + player.width < dynamicTile.tile.x) {\r\n                    player.lift = null;\r\n                    player.liftVelocity = new Vector(0, 0);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public createRenderCall(renderCalls: Map<number, RenderCall>) {\r\n\r\n        for (let dynamicTile of this.dynamicTiles) {\r\n\r\n            let set = renderCalls.get(dynamicTile.tile.key);\r\n\r\n            if(!set) {\r\n                renderCalls.set(dynamicTile.tile.key, new RenderCall());\r\n\t\t\t\tset = renderCalls.get(dynamicTile.tile.key);\r\n            }\r\n\r\n            set.vertecies = this.renderHelper.getVertecies(dynamicTile.tile.x, dynamicTile.tile.y, dynamicTile.tile.width, dynamicTile.tile.height, set.vertecies);\r\n            set.textureCoords = this.renderHelper.getTiledTextureCoordinates(dynamicTile.tile, set.textureCoords, this.constants.tileSize);\r\n            set.indecies = this.renderHelper.getIndecies(set.indecies);\r\n        }\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/dynamicTileHandler.ts","import { Particle } from '../particle/particle'\r\nimport { Vector, Tile, Rectangle, DebugElement, SpellType, TextureType } from '../model';\r\nimport { RenderHelper } from '../render/renderHelper';\r\nimport { RenderCall } from '../render/renderCall';\r\nimport { SimpleParticleRenderCall } from '../render/simpleParticleRenderCall';\r\nimport { ParticleRenderCall } from '../render/particleRenderCall';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { DebugHandler } from './debugHandler';\r\nimport { EnemyHandler } from './enemyHandler';\r\nimport { Enemy } from '../character/enemy';\r\nimport { Gravity } from '../forces/gravity';\r\nimport { IEnemy } from \"../character/index\";\r\n\r\nexport class ParticleHandler {\r\n\r\n    public frostParticles: Particle[] = [];\r\n    public frostEffectParticles: Particle[] = [];\r\n\r\n    public fireParticles: Particle[] = [];\r\n    public fireEffectParticles: Particle[] = [];\r\n\r\n    public necroEffectParticles: Particle[] = [];\r\n\r\n    public shieldEffectParticles: Particle[] = [];\r\n    public tiles: Tile[];\r\n\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n    private gravity: Gravity = new Gravity(0.0001);\r\n    private noGravity: Gravity = new Gravity(0);\r\n\r\n    private fireColor = [1, 0.5, 0.2, 0.8];\r\n    private frostColor = [0.4, 0.9, 0.9, 0.9];\r\n    private frostEffectColor = [0.7, 0.9, 0.9, 0.9];\r\n    private shieldColor = [0.5, 0.4, 0.7, 0.7];\r\n    private necroColor = [0, 0.5, 0, 0.8];\r\n\r\n    private flameParticleSettings: number[] = [\r\n        2, 5,\r\n        500, 700,\r\n        0.4, 0.5,\r\n        -0.05, -0.03,\r\n        0.1\r\n    ];\r\n\r\n    private largeFlameParticleSettings: number[] = [\r\n        4, 6,\r\n        500, 700,\r\n        0.4, 0.5,\r\n        -0.05, -0.03,\r\n        0.1\r\n    ];\r\n\r\n    private flameEffectSettings: number[] = [\r\n        1, 3,\r\n        100, 400,\r\n        0.3, 0.4,\r\n        -0.2, 0.05,\r\n        0.0\r\n    ];\r\n\r\n    private channelMagicEffectSettings: number[] = [\r\n        8, 4,\r\n        500, 500,\r\n        -10, 10,\r\n        0.1, 0.1,\r\n        -0.2,\r\n        0, Math.PI * 2\r\n    ];\r\n\r\n    private fireExplosionSettings: number[] = [\r\n        4, 8,\r\n        500, 500,\r\n        -20, 20,\r\n        0.05, 0.2,\r\n        -0.2,\r\n        0, Math.PI * 2,\r\n    ];\r\n\r\n    private magicEffectSettings: number[] = [\r\n        1, 3,\r\n        300, 300,\r\n        -0.01, 0.01,\r\n        -0.2, 0,\r\n        0.1\r\n    ];\r\n\r\n    private frostParticleSettings: number[] = [\r\n        3, 5,\r\n        600, 800,\r\n        0.4, 0.5,\r\n        -0.02, 0.02,\r\n        0.2\r\n    ]\r\n\r\n    private largefrostParticleSettings: number[] = [\r\n        5, 7,\r\n        600, 800,\r\n        0.5, 0.6,\r\n        -0.02, 0.02,\r\n        0.2\r\n    ]\r\n\r\n    private frostEffectParticleSettings: number[] = [\r\n        2, 4,\r\n        200, 800,\r\n        0.4, 0.5,\r\n        -0.08, 0.05,\r\n        0.0,\r\n    ]\r\n\r\n    private burnEffectSettings: number[] = [\r\n        10, 15,\r\n        100, 400,\r\n        0.05, -0.05,\r\n        -0.1, -0.1,\r\n        0.0\r\n    ];\r\n\r\n    private shieldEffectSettings: number[] = [\r\n        2, 4,\r\n        200, 200,\r\n        10, 10,\r\n        0.1, 0.1,\r\n        0.2,\r\n        0, Math.PI * 2\r\n    ];\r\n\r\n    private invertedShieldEffectSettings: number[] = [\r\n        2, 4,\r\n        100, 100,\r\n        10, 10,\r\n        0.1, 0.1,\r\n        0.2,\r\n        -Math.PI * 0.52, -Math.PI * 1.30\r\n    ];\r\n\r\n    private shieldExplosionEffectSettings: number[] = [\r\n        4, 8,\r\n        1000, 1500,\r\n        -20, 20,\r\n        -0.2, 0.2,\r\n        -0.1,\r\n        -Math.PI * 0.52, Math.PI * 0.30\r\n    ];\r\n\r\n    private invertedShieldExplosionEffectSettings: number[] = [\r\n        4, 8,\r\n        1000, 1500,\r\n        -20, 20,\r\n        -0.2, 0.2,\r\n        -0.1,\r\n        -Math.PI * 0.52, -Math.PI * 1.30\r\n    ];\r\n\r\n    constructor() {\r\n    }\r\n\r\n     public createShieldExplosionEffect(position: Vector, inverse: boolean) {\r\n        position.y = position.y - 5;\r\n\r\n        let settings: number[] = [];\r\n        if (inverse) {\r\n            settings = this.invertedShieldExplosionEffectSettings;\r\n        } else {\r\n            settings = this.shieldExplosionEffectSettings;\r\n        }\r\n\r\n        let effectParticles = this.createCircleParticles(position, 40, 40, false, settings, 100);\r\n\r\n        this.shieldEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createShieldEffect(position: Vector, inverse: boolean, shieldLevel: number) {\r\n        position.y = position.y + 5;\r\n\r\n        let effectParticles = this.createCenterCircleParticles(position, 10, 20, this.shieldEffectSettings, false, 0, 0, 100, 0, 1 + shieldLevel);\r\n\r\n        this.shieldEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createFireBall(position: Vector, size: number, inverse: boolean, offsetX: number) {\r\n\r\n        let effectParticles = this.fireBall(position, size, inverse, offsetX);\r\n\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createNecroFireBall(position: Vector, size: number, inverse: boolean, offsetX: number) {\r\n\r\n        let effectParticles = this.fireBall(position, size, inverse, offsetX);\r\n\r\n        this.necroEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createNecroballExplosion(position: Vector, size: number) {\r\n        let effectParticles = this.fireballExplosion(position, size);\r\n\r\n        this.necroEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createFireballExplosion(position: Vector, size: number) {\r\n\r\n        let effectParticles = this.fireballExplosion(position, size);\r\n\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    private fireballExplosion(position: Vector, size: number) {\r\n        let radius = size / 2;\r\n        let particleSize = 2 + (size/20);\r\n\r\n        position.x = position.x + radius;\r\n        position.y = position.y + radius;\r\n\r\n        let settings: number[] = [\r\n            particleSize, particleSize * 2,\r\n            500, 500,\r\n            -20, 20,\r\n            0.05, 0.2,\r\n            -0.2,\r\n            0, Math.PI * 2,\r\n        ];\r\n\r\n        let effectParticles = this.createCircleParticles(position, 0, 0, false, settings, 50);\r\n\r\n        return effectParticles;\r\n    }\r\n\r\n    public createChannelMagic(position: Vector, inverse: boolean) {\r\n\r\n        let positionOffset = new Vector(position.x + 25, position.y + 45);\r\n\r\n        let effectParticles = this.createCenterCircleParticles(positionOffset, 30, 40, this.channelMagicEffectSettings, true, 3, 10, 100, 0, 2);\r\n\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createNecroChannelMagic(position: Vector, inverse: boolean) {\r\n\r\n        let positionOffset: Vector;\r\n        \r\n        if(inverse) {\r\n            positionOffset = new Vector(position.x + 27, position.y + 10);\r\n        } else {\r\n            positionOffset = new Vector(position.x + 101, position.y + 10);\r\n        }\r\n\r\n        let effectParticles = this.createCenterCircleParticles(positionOffset, 30, 40, this.channelMagicEffectSettings, true, 3, 10, 100, 0, 2);\r\n\r\n        this.necroEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createMagicEffect(position: Vector, inverse: boolean) {\r\n\r\n        let offSetX = this.rand(-10, 10) + 22;\r\n        let offSetY = this.rand(-5, 10) + 45;\r\n        let positionOffset = new Vector(position.x + offSetX, position.y + offSetY);\r\n\r\n        let effectParticles = this.createParticles(positionOffset, inverse, this.magicEffectSettings, 1);\r\n\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createFrostBlast(position: Vector, inverse: boolean, frostLevel: number) {\r\n\r\n        let positionOffset = new Vector(position.x, position.y);\r\n        positionOffset.y += 45;\r\n\r\n        if (inverse) {\r\n            positionOffset.x += 10;\r\n        } else {\r\n            positionOffset.x += 40;\r\n        }\r\n\r\n        let settings: number[];\r\n\r\n        if(frostLevel == 3) {\r\n            settings = this.largefrostParticleSettings;\r\n        } else {\r\n            settings = this.frostParticleSettings;\r\n        }\r\n\r\n        let particles = this.createParticles(positionOffset, inverse, settings, 3 + (frostLevel * 3));\r\n        let effectParticles = this.createParticles(positionOffset, inverse, this.frostEffectParticleSettings, 2 + (frostLevel * 1));\r\n\r\n        this.frostEffectParticles.push(...effectParticles);\r\n        this.frostParticles.push(...particles);\r\n    }\r\n\r\n    public createFireBlast(position: Vector, inverse: boolean, fireLevel: number) {\r\n\r\n        let positionOffset = new Vector(position.x, position.y);\r\n        positionOffset.y += 45;\r\n\r\n        if (inverse) {\r\n            positionOffset.x += 10;\r\n        } else {\r\n            positionOffset.x += 40;\r\n        }\r\n\r\n        let settings: number[];\r\n\r\n        if(fireLevel == 3) {\r\n            settings = this.largeFlameParticleSettings;\r\n        } else {\r\n            settings = this.flameParticleSettings;\r\n        }\r\n\r\n        let particles = this.createParticles(positionOffset, inverse, settings, 3 + (fireLevel * 3));\r\n        let effectParticles = this.createParticles(positionOffset, inverse, this.flameEffectSettings, 2 + (fireLevel * 1));\r\n\r\n        this.fireParticles.push(...particles);\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createBurn(position: Vector) {\r\n        let positionCopy = new Vector(position.x, position.y);\r\n        positionCopy.x += this.rand(-10, 15) + 25;\r\n        positionCopy.y += this.rand(-10, 10) + 25;\r\n\r\n        let effectParticles = this.createParticles(positionCopy, false, this.burnEffectSettings, 1);\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public createFireDeath(position: Vector) {\r\n        position.x += this.rand(-15, 15);\r\n\r\n        position.x += 25;\r\n        position.y += 25;\r\n\r\n        let effectParticles = this.createParticles(position, false, this.burnEffectSettings, 5);\r\n        this.fireEffectParticles.push(...effectParticles);\r\n    }\r\n\r\n    public update(delta: number, enemies: IEnemy[]) {\r\n\r\n        this.updateEffectParticles(this.necroEffectParticles, delta);\r\n        this.updateEffectParticles(this.fireEffectParticles, delta);\r\n        this.updateEffectParticles(this.frostEffectParticles, delta);\r\n        this.updateEffectParticles(this.shieldEffectParticles, delta);\r\n\r\n        this.updateParticles(this.frostParticles, this.noGravity, delta, enemies, SpellType.frostBlast);\r\n        this.updateParticles(this.fireParticles, this.gravity, delta, enemies, SpellType.fireBlast);\r\n    }\r\n\r\n    public createRenderCalls(renderCalls: SimpleParticleRenderCall[]) {\r\n        let fireRenderCall: SimpleParticleRenderCall = new SimpleParticleRenderCall();\r\n        let allFireParticles = this.fireParticles.concat(this.fireEffectParticles)\r\n\r\n        let frostRenderCall: SimpleParticleRenderCall = new SimpleParticleRenderCall();\r\n        let frostEffectRenderCall: SimpleParticleRenderCall = new SimpleParticleRenderCall();\r\n        frostEffectRenderCall.textureType = TextureType.frostTexture;\r\n\r\n        let shieldEffectRenderCall: SimpleParticleRenderCall = new SimpleParticleRenderCall();\r\n        shieldEffectRenderCall.textureType = TextureType.particleTexture;\r\n\r\n        let blackFireRenderCall: SimpleParticleRenderCall = new SimpleParticleRenderCall();\r\n        blackFireRenderCall.textureType = TextureType.particleTexture;\r\n\r\n        renderCalls.push(this.addParticles(fireRenderCall, allFireParticles, this.fireColor));\r\n        renderCalls.push(this.addParticles(frostEffectRenderCall, this.frostEffectParticles, this.frostEffectColor));\r\n        renderCalls.push(this.addParticles(frostRenderCall, this.frostParticles, this.frostColor));\r\n        renderCalls.push(this.addParticles(shieldEffectRenderCall, this.shieldEffectParticles, this.shieldColor))\r\n        renderCalls.push(this.addParticles(blackFireRenderCall, this.necroEffectParticles, this.necroColor))\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n    private fireBall(position: Vector, size: number, inverse: boolean, offsetX: number) {\r\n\r\n        let positionOffset = new Vector(position.x, position.y);\r\n        let strength = size / 2;\r\n        let radius = strength / 2;\r\n        let offset = strength / 10;\r\n        let settingFactor = size / 100;\r\n\r\n        if (inverse) {\r\n            positionOffset.x += (strength - offsetX);\r\n        } else {\r\n            positionOffset.x += (strength + offsetX);\r\n        }\r\n\r\n        positionOffset.y += strength;\r\n\r\n        let channelMagicEffectSettings: number[] = [\r\n            4 + (4 * settingFactor), 2 + (2 * settingFactor),\r\n            500, 500,\r\n            -10, 10,\r\n            0, 0,\r\n            -0.2\r\n        ];\r\n\r\n        let effectParticles = this.createCenterCircleParticles(positionOffset, radius, radius, channelMagicEffectSettings, false, offset, strength, 200, -offset, 2);\r\n\r\n        return effectParticles;\r\n    }\r\n\r\n    private addParticles(renderCall: SimpleParticleRenderCall, particles: Particle[], color: number[]) {\r\n        for (let particle of particles) {\r\n            renderCall.vertecies.push(...[particle.area.x, particle.area.y]);\r\n            renderCall.pointSize.push(particle.area.width);\r\n            renderCall.color = color;\r\n            renderCall.itemCount = particles.length;\r\n        }\r\n\r\n        return renderCall;\r\n    }\r\n\r\n    private updateEffectParticles(particleCollection: Particle[], delta: number) {\r\n        let removeCollection: Particle[] = [];\r\n\r\n        for (let particle of particleCollection) {\r\n            this.updateParticle(particle, delta);\r\n            let collisionSize = particle.area.width / 2;\r\n            let collisionRectangle = new Rectangle(particle.area.x, particle.area.y, collisionSize, collisionSize);\r\n\r\n            if (particle.lifeTime <= 0 || particle.area.width < 0 || particle.dead) {\r\n                removeCollection.push(particle);\r\n            }\r\n        }\r\n\r\n        this.removeParticles(removeCollection, particleCollection);\r\n    }\r\n\r\n    private updateParticles(particleCollection: Particle[], gravity: Gravity, delta: number, enemies: IEnemy[], spelltype: SpellType) {\r\n\r\n        let removeCollection: Particle[] = [];\r\n\r\n        for (let particle of particleCollection) {\r\n            gravity.apply(particle.velocity, delta);\r\n            this.updateParticle(particle, delta);\r\n            let collisionSize = particle.area.width / 2;\r\n            let collisionRectangle = new Rectangle(particle.area.x, particle.area.y, collisionSize, collisionSize);\r\n\r\n            if (!particle.dead) {\r\n                for (let enemy of enemies) {\r\n                    if (this.collisionDetection.aabbCheck(collisionRectangle, enemy.getCollisionArea())) {\r\n                        if (spelltype == SpellType.frostBlast) {\r\n                            enemy.freeze();\r\n                        } else {\r\n                            enemy.burn();\r\n                        }\r\n\r\n                        particle.dead = true;\r\n                        particle.lifeTime = particle.lifeTime > 10 ? this.rand(10, 20) : particle.lifeTime;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (particle.lifeTime <= 0 || particle.area.width < 0) {\r\n                removeCollection.push(particle);\r\n            }\r\n        }\r\n\r\n        this.removeParticles(removeCollection, particleCollection);\r\n    }\r\n\r\n    private removeParticles(removeCollection: Particle[], particleCollection: Particle[]) {\r\n        for (let particle of removeCollection) {\r\n            let index = particleCollection.indexOf(particle);\r\n\r\n            if (index != -1) {\r\n                particleCollection.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateParticle(particle: Particle, delta: number) {\r\n        particle.area.x += particle.velocity.x * delta;\r\n        particle.area.y += particle.velocity.y * delta;\r\n        particle.lifeTime -= delta;\r\n        particle.area.width += particle.growth;\r\n        particle.area.height += particle.growth;\r\n    }\r\n\r\n    private createParticles(position: Vector, inverse: boolean, settings: number[], particleNumber: number) {\r\n\r\n        let newParticles: Particle[] = []\r\n\r\n        for (let i = 0; i < particleNumber; i++) {\r\n\r\n            let particleSize = this.rand(settings[0], settings[1]);\r\n\r\n            let velocity: Vector;\r\n            let area: Rectangle;\r\n            let deltaX: number;\r\n\r\n            if (inverse) {\r\n                velocity = new Vector(-this.rand(settings[4], settings[5]), this.rand(settings[6], settings[7]));\r\n                area = new Rectangle(position.x, position.y, particleSize, particleSize);\r\n                deltaX = this.collisionDetection.getClosestX(new Rectangle(area.x - settings[3], area.y - 8, settings[3], 1), this.tiles, inverse) - area.x;\r\n            } else {\r\n                velocity = new Vector(this.rand(settings[4], settings[5]), this.rand(settings[6], settings[7]));\r\n                area = new Rectangle(position.x, position.y, particleSize, particleSize);\r\n                deltaX = this.collisionDetection.getClosestX(new Rectangle(area.x, area.y - 8, settings[3], 1), this.tiles, inverse) - area.x;\r\n            }\r\n\r\n            let lifeTime: number;\r\n            let collTime = Math.abs((deltaX / velocity.x));\r\n            if (collTime < settings[3]) {\r\n                if (collTime < settings[2]) {\r\n                    lifeTime = this.rand(collTime, collTime + 10);\r\n                } else {\r\n                    lifeTime = this.rand(settings[2], collTime + 10);\r\n                }\r\n            } else {\r\n                lifeTime = this.rand(settings[2], settings[3]);\r\n            }\r\n\r\n            let growth = settings[8];\r\n            let particle = new Particle(area, lifeTime, velocity, growth);\r\n\r\n            newParticles.push(particle);\r\n        }\r\n\r\n        return newParticles;\r\n    }\r\n\r\n    private createCenterCircleParticles(position: Vector, radiusX: number, radiusY: number, settings: number[], inward: boolean, centerOffsetValue: number, centerSize: number, centerLifeTime: number, centerGrowth: number, particleNumber: number) {\r\n\r\n        let newParticles: Particle[] = [];\r\n\r\n        let centerOffSetX = this.rand(-centerOffsetValue, centerOffsetValue);\r\n        let centerOffSetY = this.rand(-centerOffsetValue, centerOffsetValue);\r\n        let centerParticle = new Particle(new Rectangle(position.x + centerOffSetX, position.y + centerOffSetY, centerSize, centerSize), centerLifeTime, new Vector(0, 0), centerGrowth);\r\n\r\n        newParticles.push(centerParticle);\r\n        newParticles.push(...this.createCircleParticles(position, radiusX, radiusY, inward, settings, particleNumber));\r\n\r\n        return newParticles;\r\n    }\r\n\r\n    private createCircleParticles(position: Vector, radiusX: number, radiusY: number, inward: boolean, settings: number[], particleNumber: number) {\r\n\r\n        let particles: Particle[] = [];\r\n\r\n        for (let i = 0; i < particleNumber; i++) {\r\n\r\n            let particleSize = this.rand(settings[0], settings[1]);\r\n            let lifeTime = this.rand(settings[2], settings[3]);\r\n            let offSet = this.rand(settings[4], settings[5]);\r\n\r\n            let x: number;\r\n            let y: number;\r\n            let velocity: Vector;\r\n            let angle = this.rand(settings[9], settings[10]);\r\n            x = position.x + ((radiusX + offSet) * Math.cos(angle));\r\n            y = position.y + ((radiusY + offSet) * Math.sin(angle));\r\n\r\n            if (inward) {\r\n                velocity = new Vector(-(x - position.x), -(y - position.y));\r\n            } else {\r\n                velocity = new Vector(x - position.x, y - position.y);\r\n            }\r\n\r\n            velocity.normalize();\r\n            velocity.multiply(this.rand(settings[6], settings[7]));\r\n\r\n            let particle = new Particle(new Rectangle(x, y, particleSize, particleSize), lifeTime, velocity, settings[8]);\r\n\r\n            particles.push(particle);\r\n        };\r\n\r\n        return particles;\r\n    }\r\n\r\n    private rand(min: number, max: number) {\r\n        return min + (Math.random() * (max - min))\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/particleHandler.ts","import { Rectangle, Vector } from '../model';\r\n\r\nexport class Particle {\r\n\r\n    public area: Rectangle;\r\n    public lifeTime: number;\r\n    public velocity: Vector;\r\n    public growth: number;\r\n    public dead: boolean;\r\n\r\n    constructor(area: Rectangle, lifeTime: number, velocity: Vector, growth: number) {\r\n        this.area = area;\r\n        this.lifeTime = lifeTime;\r\n        this.velocity = velocity;\r\n        this.growth = growth;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/particle/particle.ts","import { SpellType, TextureType } from '../model';\r\n\r\nexport class SimpleParticleRenderCall {\r\n   public vertecies: number[];\r\n   public pointSize: number[];\r\n   public color: number[];\r\n   public itemCount: number;\r\n   public textureType: TextureType;\r\n\r\n   constructor() {\r\n       this.vertecies = [];\r\n       this.pointSize = [];\r\n       this.color = [];\r\n       this.itemCount = 0;\r\n       this.textureType = TextureType.particleTexture;\r\n   }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/simpleParticleRenderCall.ts","import { Context } from '../context';\r\nimport { SimpleParticleRenderCall } from './simpleParticleRenderCall';\r\nimport { TextureType } from '../model';\r\n\r\nexport class SimpleParticleRenderer {\r\n\r\n\tprivate context: Context;\r\n\tprivate gl: WebGLRenderingContext;\r\n\tprivate shaderProgram: WebGLShader;\r\n\r\n\tprivate vertexBuffer: WebGLBuffer;\r\n\tprivate pointSizeBuffer: WebGLBuffer;\r\n\r\n\tprivate sizeAttributeLocation: number;\r\n\tprivate positionLocation: number;\r\n\tprivate resolutionLocation: WebGLUniformLocation;\r\n\tprivate cameraLocation: WebGLUniformLocation;\r\n\tprivate colorUniformLocation: WebGLUniformLocation;\r\n\r\n\tconstructor(context: Context) {\r\n\t\tthis.context = context;\r\n\t\tthis.gl = this.context.gl;\r\n\t\tthis.shaderProgram = this.context.simpleParticleProgram;\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n\t\tthis.gl.bindAttribLocation(this.shaderProgram, 1, \"a_pointSize\");\r\n\r\n\t\tthis.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n\t\tthis.sizeAttributeLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_pointSize\");\r\n\t\tthis.resolutionLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_resolution\");\r\n\t\tthis.cameraLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_camera\");\r\n\t\tthis.colorUniformLocation = this.gl.getUniformLocation(this.shaderProgram, \"u_color\");\r\n\r\n\t\tthis.vertexBuffer = this.gl.createBuffer();\r\n\t\tthis.pointSizeBuffer = this.gl.createBuffer();\r\n\t}\r\n\r\n\tpublic render(renderCalls: SimpleParticleRenderCall[], camera: [number, number]) {\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\t\tfor (let renderCall of renderCalls) {\r\n\r\n\t\t\tif (renderCall.itemCount > 1) {\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.positionLocation);\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.sizeAttributeLocation);\r\n\r\n\t\t\t\tthis.gl.uniform2f(this.resolutionLocation, this.context.gl.canvas.width, this.context.gl.canvas.height);\r\n\t\t\t\tthis.gl.uniform2f(this.cameraLocation, camera[0], camera[1]);\r\n\t\t\t\tthis.gl.uniform4f(this.colorUniformLocation, renderCall.color[0], renderCall.color[1], renderCall.color[2], renderCall.color[3]);\r\n\r\n\t\t\t\tif (renderCall.textureType == TextureType.particleTexture) {\r\n\t\t\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.genericParticleTexture);\r\n\t\t\t\t} else if(renderCall.textureType == TextureType.frostTexture) {\r\n\t\t\t\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.context.frostParticelTexture);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.positionLocation);\r\n\t\t\t\tthis.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointSizeBuffer);\r\n\t\t\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.pointSize), this.gl.STATIC_DRAW);\r\n\t\t\t\tthis.gl.enableVertexAttribArray(this.sizeAttributeLocation);\r\n\t\t\t\tthis.gl.vertexAttribPointer(this.sizeAttributeLocation, 1, this.gl.FLOAT, false, 0, 0);\r\n\r\n\t\t\t\tthis.gl.drawArrays(this.gl.POINTS, 0, renderCall.itemCount);\r\n\r\n\t\t\t\tthis.gl.disableVertexAttribArray(this.positionLocation);\r\n\t\t\t\tthis.gl.disableVertexAttribArray(this.sizeAttributeLocation);\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/simpleParticleRenderer.ts","import { Tile, Spell, Vector, Rectangle, ParticleProjectile, SpellType } from '../model';\r\nimport { Enemy } from '../character/enemy';\r\nimport { Player } from '../character/player';\r\nimport { Swordman } from '../character/swordman';\r\nimport { Archer, Shadow, Apprentice, Screamer, MasterSorcerer, IEnemy } from '../character/';\r\nimport { RenderCall, RenderHelper, ColorRenderCall } from '../render';\r\nimport { Context } from '../context';\r\nimport { ProjectileHandler } from './projectileHandler';\r\nimport { AnimationHandler } from './animationHandler';\r\nimport { ParticleHandler } from './particleHandler';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { DeathType } from '../character/deathType';\r\n\r\nexport class EnemyHandler {\r\n\r\n    public enemies: IEnemy[] = [];\r\n\r\n    private context: Context;\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private projectileHandler: ProjectileHandler;\r\n    private animationHandler: AnimationHandler;\r\n    private particleHandler: ParticleHandler;\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n\r\n    constructor(context: Context, projectileHandler: ProjectileHandler, animationHandler: AnimationHandler, particleHandler: ParticleHandler) {\r\n        this.context = context;\r\n        this.projectileHandler = projectileHandler;\r\n        this.animationHandler = animationHandler;\r\n        this.particleHandler = particleHandler;\r\n    }\r\n\r\n    public update(delta: number, tiles: Tile[], player: Player) {\r\n        for (let enemy of this.enemies) {\r\n            enemy.update(delta, tiles, player);\r\n            this.enemyCollisionCheck(delta);\r\n            this.checkBurn(enemy);\r\n            this.checkEnemyDeath(enemy);\r\n        }\r\n    }\r\n\r\n    createRenderCall(renderCall: ColorRenderCall) {\r\n        for (let enemy of this.enemies) {\r\n            if (enemy.inverse) {\r\n                renderCall.vertecies = this.renderHelper.getInverseVertecies(enemy.position.x, enemy.position.y, enemy.width, enemy.height, renderCall.vertecies);\r\n            } else {\r\n                renderCall.vertecies = this.renderHelper.getVertecies(enemy.position.x, enemy.position.y, enemy.width, enemy.height, renderCall.vertecies);\r\n            }\r\n            renderCall.textureCoords.push.apply(renderCall.textureCoords, enemy.currentAnimation.getCurrentFrame());\r\n            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n            renderCall.color = this.renderHelper.getColor(renderCall.color, enemy.color);\r\n        }\r\n\r\n        return renderCall;\r\n    }\r\n\r\n    remove(enemy: IEnemy) {\r\n        let index = this.enemies.indexOf(enemy);\r\n        if (index >= 0) {\r\n            this.enemies.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private checkBurn(enemy: IEnemy) {\r\n        if (enemy.burnValue > 0) {\r\n            let collarea = enemy.getCollisionArea();\r\n            let pos = new Vector(collarea.x, collarea.y);\r\n            this.particleHandler.createBurn(pos);\r\n        }\r\n    }\r\n\r\n    private checkEnemyDeath(enemy: IEnemy) {\r\n        if (enemy.dead) {\r\n            if (enemy.deathType == DeathType.freezeDeath) {\r\n                if(enemy instanceof Swordman) {\r\n                    this.projectileHandler.createFrozenSwordManDeath(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse, enemy.color);\r\n                } else if (enemy instanceof Archer) {\r\n                    this.projectileHandler.createFrozenArcherDeath(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse, enemy.color);\r\n                } else if(enemy instanceof Shadow) {\r\n                    this.projectileHandler.createShadow_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if(enemy instanceof Apprentice) {\r\n                    this.projectileHandler.createApprentice_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof Screamer) {\r\n                    this.projectileHandler.createScreamer_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof MasterSorcerer) {\r\n                    this.projectileHandler.createMasterSorcerer_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                }\r\n                \r\n                this.remove(enemy);\r\n            } else if (enemy.deathType == DeathType.fireDeath) {\r\n                if(enemy instanceof Swordman) {\r\n                    this.animationHandler.fireDeathSwordman(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof Archer) {\r\n                    this.animationHandler.fireDeathArcher(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if(enemy instanceof Shadow) {\r\n                    this.projectileHandler.createShadow_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if(enemy instanceof Apprentice) {\r\n                    this.projectileHandler.createApprentice_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof Screamer) {\r\n                    this.projectileHandler.createScreamer_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof MasterSorcerer) {\r\n                    this.projectileHandler.createMasterSorcerer_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                }\r\n\r\n                this.remove(enemy);\r\n            } else if (enemy.deathType == DeathType.swordDeath) {\r\n                if(enemy instanceof Archer) {\r\n                    this.animationHandler.createArcherDeath(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if(enemy instanceof Shadow) {\r\n                    this.projectileHandler.createShadow_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if(enemy instanceof Apprentice) {\r\n                    this.projectileHandler.createApprentice_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof Screamer) {\r\n                    this.projectileHandler.createScreamer_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                } else if (enemy instanceof MasterSorcerer) {\r\n                    this.projectileHandler.createMasterSorcerer_death(new Rectangle(enemy.position.x, enemy.position.y, enemy.width, enemy.height), enemy.inverse);\r\n                }\r\n\r\n                this.remove(enemy);\r\n            }\r\n        }\r\n    }\r\n\r\n    private enemyCollisionCheck(delta: number) {\r\n        for (let projectile of this.projectileHandler.projectiles) {\r\n\r\n            if (projectile instanceof ParticleProjectile) {\r\n\r\n                let removeEnemy: Enemy[] = [];\r\n\r\n                for (let enemy of this.enemies) {\r\n\r\n                    let velocityDelta = new Vector((projectile.velocity.x * delta) - (enemy.toMove.x), (projectile.velocity.y * delta) - (enemy.toMove.y));\r\n                    let collisionData = this.collisionDetection.checkProjectileCollisionX([enemy.getCollisionArea()], projectile, velocityDelta, false, true);\r\n\r\n                    if (collisionData.wallCollision) {\r\n\r\n                        enemy.takeDamage(projectile.area.width, SpellType.fireball)\r\n                        if (enemy.inverse) {\r\n                            this.animationHandler.bloodAnimation_B_Right(new Vector(projectile.area.x, projectile.area.y - 20), 75);\r\n                        } else {\r\n                            this.animationHandler.bloodAnimation_B_Left(new Vector(projectile.area.x - projectile.area.width, projectile.area.y - 20), 75);\r\n                        }\r\n\r\n                        this.projectileHandler.destroyProjectile(projectile, this.projectileHandler.projectiles);\r\n\r\n                        if (enemy.dead) {\r\n                            if(enemy instanceof Swordman) {\r\n                                this.projectileHandler.createSwordman_death(enemy.position, enemy.inverse, this.projectileHandler.calculateDirection(projectile.area, enemy));\r\n                                removeEnemy.push(enemy);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let enemy of removeEnemy) {\r\n                    this.remove(enemy);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/handler/enemyHandler.ts","import { Vector } from './model';\r\n\r\nexport class Camera {\r\n    private cameraOffset: [number, number] = [800, 500];\r\n\r\n    private maxX: number;\r\n    private maxXCameraPosition: number;\r\n\r\n    private maxY: number;\r\n    private maxYCameraPosition: number;\r\n\r\n    constructor(public position: [number, number], public sceneSize: [number, number], private gameSize: [number, number]) {\r\n        this.position = position;\r\n        this.sceneSize = sceneSize;\r\n        \r\n        this.maxX = 100 + (this.sceneSize[0] - this.cameraOffset[0]);\r\n        this.maxXCameraPosition = this.gameSize[0] - (this.maxX + this.cameraOffset[0] - 100);\r\n\r\n        this.maxY = (this.sceneSize[1] - this.cameraOffset[1]);\r\n        this.maxYCameraPosition = this.gameSize[1] - (this.maxY + this.cameraOffset[1]);\r\n    }\r\n\r\n    public update(focusPosition: Vector) {\r\n\r\n        if(focusPosition.x - this.position[0] > this.cameraOffset[0] - 100) {\r\n            this.position[0] = focusPosition.x - this.cameraOffset[0] + 100;\r\n            \r\n            if((focusPosition.x + this.maxX) > this.gameSize[0]) {\r\n                this.position[0] = this.maxXCameraPosition;\r\n            }\r\n        } else if(focusPosition.x - this.position[0] < this.sceneSize[0] - this.cameraOffset[0]) {\r\n            this.position[0] = focusPosition.x - (this.sceneSize[0] - this.cameraOffset[0]);\r\n            if(this.position[0] < 0) {\r\n                this.position[0] = 0;\r\n            }\r\n        }\r\n\r\n        if(focusPosition.y - this.position[1] > this.cameraOffset[1]) {\r\n            this.position[1] = focusPosition.y - this.cameraOffset[1];\r\n\r\n            if((focusPosition.y + this.maxY) > this.gameSize[1]) {\r\n                this.position[1] = this.maxYCameraPosition;\r\n            }\r\n\r\n        } else if(focusPosition.y - this.position[1] < this.sceneSize[1] - this.cameraOffset[1]) {\r\n            this.position[1] = focusPosition.y - (this.sceneSize[1] - this.cameraOffset[1]);\r\n\r\n             if(this.position[1] < 0) {\r\n                this.position[1] = 0;\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/camera.ts","import { Context } from '../context';\r\nimport { TextureType, Vector } from '../model';\r\nimport { Matrix3, DynamicRenderCall } from './';\r\n\r\nexport class DynamicRenderer {\r\n\r\n    private context: Context;\r\n    private gl: WebGLRenderingContext;\r\n    private shaderProgram: WebGLShader;\r\n\r\n    private vertexBuffer: WebGLBuffer;\r\n    private textureCoordBuffer: WebGLBuffer;\r\n    private indeciesBuffer: WebGLBuffer;\r\n    private matricesBuffer: WebGLBuffer;\r\n\r\n    private matrixAttributeLocation: number;\r\n    private positionLocation: number;\r\n    private textureCoordAttribute: number;\r\n\r\n    private projectionMatrix: number[];\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n        this.gl = this.context.gl;\r\n        this.shaderProgram = this.context.dynamicVertecyProgram;\r\n        this.gl.useProgram(this.shaderProgram);\r\n\r\n        this.gl.bindAttribLocation(this.shaderProgram, 0, \"a_position\");\r\n        this.gl.bindAttribLocation(this.shaderProgram, 1, \"a_texture_coord\");\r\n        this.gl.bindAttribLocation(this.shaderProgram, 2, \"a_matrix\");\r\n\r\n        this.positionLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n        this.textureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, \"a_texture_coord\");\r\n        this.matrixAttributeLocation = this.gl.getAttribLocation(this.shaderProgram, \"a_matrix\");\r\n\r\n        this.vertexBuffer = this.gl.createBuffer();\r\n        this.textureCoordBuffer = this.gl.createBuffer();\r\n        this.indeciesBuffer = this.gl.createBuffer();\r\n        this.matricesBuffer = this.gl.createBuffer();\r\n    }\r\n\r\n    public render(renderCalls: DynamicRenderCall[]) {\r\n        this.gl.useProgram(this.shaderProgram);\r\n        for (let renderCall of renderCalls) {\r\n            if (renderCall.vertecies.length > 0) {\r\n\r\n                this.gl.enableVertexAttribArray(this.positionLocation);\r\n                this.gl.enableVertexAttribArray(this.textureCoordAttribute);\r\n                this.gl.enableVertexAttribArray(this.matrixAttributeLocation);\r\n                this.gl.enableVertexAttribArray(this.matrixAttributeLocation + 1);\r\n                this.gl.enableVertexAttribArray(this.matrixAttributeLocation + 2);\r\n\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.vertecies), this.gl.STATIC_DRAW);\r\n\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.textureCoords), this.gl.STATIC_DRAW);\r\n\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.matricesBuffer);\r\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(renderCall.matrices), this.gl.STATIC_DRAW);\r\n\r\n                this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n                this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(renderCall.indecies), this.gl.STATIC_DRAW);\r\n\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n                this.gl.vertexAttribPointer(this.positionLocation, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);\r\n                this.gl.vertexAttribPointer(this.textureCoordAttribute, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.matricesBuffer);\r\n                for (var i = 0; i< 3; i++) {\r\n                    this.gl.vertexAttribPointer(this.matrixAttributeLocation + i, 3, this.gl.FLOAT, false, 36, i * 12);\r\n                }\r\n\r\n                this.gl.activeTexture(this.gl.TEXTURE0);\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this.context.glTexture);\r\n\r\n                this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indeciesBuffer);\r\n                this.gl.drawElements(this.gl.TRIANGLES, renderCall.indecies.length, this.gl.UNSIGNED_SHORT, 0)\r\n\r\n                this.gl.disableVertexAttribArray(this.positionLocation);\r\n                this.gl.disableVertexAttribArray(this.textureCoordAttribute);\r\n                this.gl.disableVertexAttribArray(this.matrixAttributeLocation);\r\n                this.gl.disableVertexAttribArray(this.matrixAttributeLocation + 1);\r\n                this.gl.disableVertexAttribArray(this.matrixAttributeLocation + 2);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/render/dynamicRenderer.ts","import { Vector, Rectangle } from '../model';\r\nimport { RenderHelper, RenderCall } from '../render';\r\nimport { Bar, ProgressBar } from './bar';\r\n\r\nexport class UI {\r\n\r\n    private renderHelper = RenderHelper.getInstance();\r\n\r\n    private bars: Bar[] = [];\r\n    private hpBar: ProgressBar = new ProgressBar();\r\n    private manaBar: ProgressBar = new ProgressBar();\r\n    private hudTextureCoords = this.renderHelper.getTextureCoordinates([], 198);\r\n    \r\n    constructor(maxHp: number, maxMana: number) {\r\n        \r\n        this.hpBar.bar = new Bar(new Rectangle(100, 8, 298, 16), 298, new Rectangle(1632, 96, 200, 12), 200);\r\n        this.hpBar.maxValue = maxHp;\r\n        this.manaBar.bar = new Bar(new Rectangle(100, 34, 298, 16), 298, new Rectangle(1632, 128, 200, 12), 200);\r\n        this.manaBar.maxValue = maxMana;\r\n        \r\n        this.bars.push(this.hpBar.bar);\r\n        this.bars.push(this.manaBar.bar);\r\n    }\r\n\r\n    public update(hp: number, mana: number) {\r\n        let hpFactor = hp/this.hpBar.maxValue;\r\n        this.hpBar.bar.area.width = (hpFactor * this.hpBar.bar.maxWidth);\r\n        this.hpBar.bar.textureArea.width = (hpFactor * this.hpBar.bar.maxTextureWidth);\r\n\r\n        let manaFactor = mana/this.manaBar.maxValue;\r\n        this.manaBar.bar.area.width = (manaFactor * this.manaBar.bar.maxWidth);\r\n        this.manaBar.bar.textureArea.width = (manaFactor * this.manaBar.bar.maxTextureWidth);\r\n\r\n    }\r\n\r\n    public createRenderCall(renderCall: RenderCall, camera: [number, number]) {\r\n\r\n        renderCall.vertecies = this.renderHelper.getVertecies(0 + camera[0], 0 + camera[1], 405, 96, renderCall.vertecies);\r\n        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.hudTextureCoords);\r\n        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n        for (let bar of this.bars) {\r\n            renderCall.vertecies = this.renderHelper.getVertecies(bar.area.x + camera[0], bar.area.y + camera[1], bar.area.width, bar.area.height, renderCall.vertecies);\r\n            renderCall.textureCoords.push.apply(renderCall.textureCoords, this.renderHelper.getMainTextureCoords(bar.textureArea));\r\n            renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n        }\r\n\r\n        return renderCall;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/ui.ts","import { Rectangle } from '../model';\r\n\r\nexport class Bar {\r\n\r\n    constructor(\r\n        public area: Rectangle,\r\n        public maxWidth: number,\r\n        public textureArea: Rectangle,\r\n        public maxTextureWidth: number\r\n        ) {\r\n    }\r\n}\r\n\r\nexport class ProgressBar {\r\n    public bar: Bar;\r\n    public maxValue: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/bar.ts","import { RenderCall, Renderer, RenderHelper } from '../render';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { Scene } from './scene';\r\nimport { SceneIndex } from './sceneIndex';\r\nimport { Menu } from './menu';\r\nimport { Clickable } from './clickable';\r\nimport { PowerSelector } from './powerSelector';\r\nimport { Active } from './active';\r\nimport { Rectangle } from '../model';\r\nimport { LevelData } from '../map/model';\r\nimport { LoadHelper } from '../service/loadHelper';\r\nimport { LocalStorageHelper } from '../service/localStorageHelper';\r\nimport { Game } from '../game';\r\nimport { AssetsLoader } from '../service/assetsLoader';\r\nimport { PowerSelectionMenu } from './powerSelectionMenu';\r\nimport { NewGameMenu } from \"./newGameMenu\";\r\nimport { RestartMenu } from \"./restartMenu\";\r\n\r\nexport class SceneHandler {\r\n\r\n    public started = false;\r\n    public currentScene = SceneIndex.StartMenu;\r\n    public lastCurrentScene = SceneIndex.StartMenu;\r\n    private scenes: Map<number, Scene> = new Map<number, Scene>();\r\n    private mousePosition: [number, number] = [-100, 0];\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private click = false;\r\n    private clicked = false;\r\n    private importClicked = false;\r\n\r\n    private playerlist = document.getElementById(\"playerlist\");\r\n    private textInput = document.getElementById(\"textinput\") as HTMLInputElement;\r\n    private textArea = document.getElementById(\"textarea\");\r\n    private fileUploadButton = document.getElementById(\"fileupload\");\r\n    private fileUploadButtonHighlight = document.getElementById(\"fileuploadHighlight\");\r\n    private uploadInput = document.getElementById(\"importLink\") as HTMLInputElement;\r\n    private modal = document.getElementById(\"modal\");\r\n\r\n    private loadHelper = LoadHelper.getInstance();\r\n    private localStorageHelper = LocalStorageHelper.getInstance();\r\n    private assetLoader = new AssetsLoader();\r\n\r\n    constructor(private renderer: Renderer, private canvasSize: [number, number], private canvas: HTMLElement, private game: Game) {\r\n\r\n        let startMenu = new Menu(\r\n            [\r\n                this.createNewGameButton(),\r\n                this.createContinueButton(),\r\n                this.createLoadButton()\r\n            ],\r\n            [],\r\n            this,\r\n            this.textArea,\r\n            renderer,\r\n            canvasSize,\r\n            100,\r\n            [512, 512],\r\n            true,\r\n        );\r\n\r\n        startMenu.load();\r\n\r\n        this.scenes.set(SceneIndex.StartMenu, startMenu);\r\n\r\n        let loadMenu = new Menu(\r\n            [\r\n                this.createToStartMenuBack(new Rectangle((this.canvasSize[0] / 2) - 150, 235, 300, 50))\r\n            ],\r\n            [],\r\n            this,\r\n            this.textArea,\r\n            renderer,\r\n            canvasSize,\r\n            100,\r\n            [512, 512],\r\n            true,\r\n        );\r\n\r\n        this.scenes.set(SceneIndex.LoadMenu, loadMenu);\r\n\r\n        this.loadLevelSelectionScreen();\r\n        this.loadLevelFinishedScreen();\r\n        this.loadNewGameMenu();\r\n        this.loadRestartMenu();\r\n\r\n        this.createEventListerners();\r\n    }\r\n\r\n    public update() {\r\n\r\n        let currentScene = this.scenes.get(this.currentScene);\r\n\r\n        if (this.currentScene != this.lastCurrentScene) {\r\n            this.textArea.style.visibility = \"hidden\";\r\n            currentScene.load();\r\n        }\r\n\r\n        this.lastCurrentScene = this.currentScene;\r\n\r\n        if (this.click && !this.clicked) {\r\n            this.clicked = true;\r\n            currentScene.click(this.mousePosition);\r\n        }\r\n\r\n        currentScene.mouseOver(this.mousePosition);\r\n    }\r\n\r\n    public render() {\r\n        this.scenes.get(this.currentScene).render();\r\n        this.renderer.render(this.createMouseRenderCall(), [0, 0]);\r\n    }\r\n\r\n    public setCurrentLevel(level: string) {\r\n        let scene = this.scenes.get(SceneIndex.RestartMenu) as RestartMenu;\r\n        if(!isNaN(+level)) {\r\n            scene.currentLevel = +level;\r\n        }\r\n    }\r\n\r\n    private createMouseRenderCall() {\r\n        let renderCalls = new Map<number, RenderCall>()\r\n        let renderCall = new RenderCall();\r\n\r\n        renderCall.vertecies = this.renderHelper.getVertecies(this.mousePosition[0], this.mousePosition[1], 32, 32, renderCall.vertecies);\r\n        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n        renderCall.textureCoords = this.renderHelper.getTextureCoordinates(renderCall.textureCoords, 180);\r\n\r\n        renderCalls.set(-1, renderCall);\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n    private loadLevelFinishedScreen() {\r\n\r\n        let levelFinishedScene = new PowerSelectionMenu(\r\n            this,\r\n            this.textArea,\r\n            this.renderer,\r\n            this.canvasSize,\r\n            100,\r\n            [512, 512],\r\n            false,\r\n            [\r\n                this.createNextLevelButton(false),\r\n                this.createToStartMenuBack(new Rectangle(this.canvasSize[0] / 2 - 450, 650, 250, 42))\r\n            ],\r\n            [],\r\n            [\r\n                this.newPowerSelector(150, 100, 150, [105, 102, 106, 103, 107, 104]),\r\n                this.newPowerSelector(350, 100, 150, [111, 108, 112, 109, 113, 110]),\r\n                this.newPowerSelector(550, 100, 150, [117, 114, 118, 115, 119, 116])\r\n            ]\r\n        );\r\n\r\n        this.scenes.set(SceneIndex.LevelFinished, levelFinishedScene);\r\n    }\r\n\r\n    private loadRestartMenu() {\r\n\r\n        let restartMenu = new RestartMenu(\r\n            [\r\n                this.createToStartMenuBack(new Rectangle(this.canvasSize[0] / 2 - 450, 650, 250, 42))\r\n            ],\r\n            [],\r\n            this,\r\n            this.textArea,\r\n            this.renderer,\r\n            this.canvasSize,\r\n            100,\r\n            [512, 512],\r\n            false,\r\n            this.game\r\n        );\r\n\r\n        this.scenes.set(SceneIndex.RestartMenu, restartMenu);\r\n    }\r\n\r\n    private loadNewGameMenu() {\r\n        let newGameMenu = new NewGameMenu(\r\n            [\r\n                this.createToStartMenuBack(new Rectangle(this.canvasSize[0] / 2 - 450, 650, 250, 42)),\r\n                this.createToPowerSelectorMenuButton(true),\r\n            ],\r\n            [],\r\n            this,\r\n            this.textArea,\r\n            this.renderer,\r\n            this.canvasSize,\r\n            100,\r\n            [512, 512],\r\n            false,\r\n            this.textInput,\r\n            this.playerlist\r\n        );\r\n\r\n        this.scenes.set(SceneIndex.NewGameMenu, newGameMenu);\r\n    }\r\n\r\n    private newPowerSelector(x: number, y: number, offset: number, assets: number[]) {\r\n\r\n        let active1 = new Active(0, 1, false, new Rectangle(x, y, 100, 100), assets[0], assets[1], [100, 100])\r\n        let active2 = new Active(0, 2, false, new Rectangle(x, y + offset, 100, 100), assets[2], assets[3], [100, 100])\r\n        let active3 = new Active(0, 3, false, new Rectangle(x, y + offset * 2, 100, 100), assets[4], assets[5], [100, 100])\r\n\r\n        return new PowerSelector([active1, active2, active3]);\r\n    }\r\n\r\n    private loadLevelSelectionScreen() {\r\n        let levelSelectionMenu = new Menu(\r\n            [\r\n                ...this.createLevelMenuButtons(),\r\n                this.createToStartMenuBackFromLevelMenu()\r\n            ],\r\n            [],\r\n            this,\r\n            this.textArea,\r\n            this.renderer,\r\n            this.canvasSize,\r\n            100,\r\n            [512, 512],\r\n            false,\r\n        );\r\n\r\n        this.scenes.set(SceneIndex.LevelSelection, levelSelectionMenu);\r\n\r\n        return levelSelectionMenu;\r\n    }\r\n\r\n    private createEventListerners() {\r\n        window.addEventListener(\"mousemove\", (event: MouseEvent) => {\r\n            let relativeElement = this.canvas.getBoundingClientRect();\r\n            let x = event.clientX - relativeElement.left;\r\n            let y = event.clientY - relativeElement.top;\r\n\r\n            this.mousePosition = [x, y];\r\n        });\r\n\r\n        window.addEventListener(\"mousedown\", (event: MouseEvent) => {\r\n            this.click = true;\r\n        });\r\n\r\n        window.addEventListener(\"mouseup\", (event: MouseEvent) => {\r\n            this.clicked = false;\r\n            this.click = false;\r\n        });\r\n\r\n        this.uploadInput.addEventListener(\"change\", () => {\r\n            let fileReader = new FileReader();\r\n            fileReader.onload = (evt: ProgressEvent) => {\r\n                this.uploadInput.value = \"\";\r\n                let target = evt.target as FileReader;\r\n\r\n                try {\r\n                    let leveldata = JSON.parse(target.result) as LevelData;\r\n                    if (this.loadHelper.validateLevelData(leveldata)) {\r\n                        this.game.loadLevel(leveldata);\r\n                        let restartMenu = this.scenes.get(SceneIndex.RestartMenu) as RestartMenu;\r\n                        restartMenu.tempLevel = leveldata;\r\n                        this.started = true;\r\n                        this.fileUploadButton.style.visibility = \"hidden\";\r\n                        this.fileUploadButtonHighlight.style.visibility = \"hidden\";\r\n                    } else {\r\n                        this.modal.style.display = \"block\";\r\n                        this.modal.innerHTML += \"Invalid level data!\"\r\n                    }\r\n                } catch (e) {\r\n                    this.modal.style.display = \"block\";\r\n                    this.modal.innerHTML += \"Error loading level!\"\r\n                }\r\n            }\r\n\r\n            fileReader.readAsText(this.uploadInput.files[0], \"UTF-8\")\r\n        });\r\n    }\r\n\r\n    public levelCompleted(level: string) {\r\n        this.started = false;\r\n        this.localStorageHelper.setCurrentProgress((+level + 1));\r\n        this.currentScene = SceneIndex.LevelFinished;\r\n        this.scenes.get(this.currentScene).load();\r\n    }\r\n\r\n    private createLoadButton() {\r\n\r\n        let onClick = () => {\r\n            this.currentScene = SceneIndex.LoadMenu;\r\n            this.fileUploadButton.style.visibility = \"visible\";\r\n        }\r\n\r\n        return new Clickable(new Rectangle((this.canvasSize[0] / 2) - 150, 295, 300, 50), 179, 181, 183, onClick);\r\n    }\r\n\r\n    private createNextLevelButton(disabled: boolean) {\r\n\r\n        let onClick = () => {\r\n\r\n            this.textInput.style.visibility = \"hidden\";\r\n            this.textArea.style.visibility = \"hidden\";\r\n            this.playerlist.style.visibility = \"hidden\";\r\n\r\n            let progress = this.localStorageHelper.getCurrentProgress();\r\n            this.assetLoader.getLevel(progress.completedLevels.toString()).subscribe(it => {\r\n                this.game.loadLevel(it);\r\n                this.started = true;\r\n            });\r\n        }\r\n\r\n        let clickable: Clickable;\r\n\r\n        if (disabled) {\r\n            clickable = new Clickable(new Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick, 554);\r\n        } else {\r\n            clickable = new Clickable(new Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick);\r\n        }\r\n\r\n        return clickable;\r\n\r\n    }\r\n\r\n    private createToPowerSelectorMenuButton(disabled: boolean) {\r\n        let onClick = () => {\r\n\r\n            this.textInput.style.visibility = \"hidden\";\r\n            this.textArea.style.visibility = \"hidden\";\r\n            this.playerlist.style.visibility = \"hidden\";\r\n\r\n            this.currentScene = SceneIndex.LevelFinished;\r\n        }\r\n\r\n        let clickable: Clickable;\r\n\r\n        if (disabled) {\r\n            clickable = new Clickable(new Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick, 554);\r\n        } else {\r\n            clickable = new Clickable(new Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 553, onClick);\r\n        }\r\n\r\n        return clickable;\r\n    }\r\n\r\n    private createNewGameButton() {\r\n        let onClick = () => {\r\n            this.currentScene = SceneIndex.NewGameMenu;\r\n        }\r\n\r\n        return new Clickable(new Rectangle((this.canvasSize[0] / 2) - 150, 175, 300, 50), 179, 181, 182, onClick);\r\n    }\r\n\r\n    private createContinueButton() {\r\n        let onClick = () => {\r\n            this.currentScene = SceneIndex.LevelSelection;\r\n        }\r\n\r\n        return new Clickable(new Rectangle((this.canvasSize[0] / 2) - 150, 235, 300, 50), 179, 181, 184, onClick, 554);\r\n    }\r\n\r\n    private createToStartMenuBack(area: Rectangle) {\r\n        let onClick = () => {\r\n            this.currentScene = SceneIndex.StartMenu;\r\n\r\n            this.fileUploadButton.style.visibility = \"hidden\";\r\n            this.fileUploadButtonHighlight.style.visibility = \"hidden\";\r\n            this.textArea.style.visibility = \"hidden\";\r\n            this.textInput.style.visibility = \"hidden\";\r\n            this.playerlist.style.visibility = \"hidden\";\r\n        }\r\n\r\n        return new Clickable(area, 179, 181, 186, onClick);\r\n    }\r\n\r\n    private createToStartMenuBackFromLevelMenu() {\r\n        let onClick = () => {\r\n            this.currentScene = SceneIndex.StartMenu;\r\n        }\r\n\r\n        return new Clickable(new Rectangle((this.canvasSize[0] / 2) - 150, 700, 300, 50), 179, 181, 186, onClick);\r\n    }\r\n\r\n    private createLevelMenuButtons() {\r\n        let progress = this.localStorageHelper.getCurrentProgress();\r\n        let clickables: Clickable[] = [];\r\n\r\n        let collumns = 5;\r\n        for (let i = 0; i < 10; i++) {\r\n            let y = Math.floor(i / collumns);\r\n            let x = i % collumns;\r\n            let disabled = !(progress.completedLevels >= i);\r\n            clickables.push(this.createLevelButton(x, y, i, disabled));\r\n        }\r\n\r\n        return clickables;\r\n    }\r\n\r\n    private createLevelButton(x: number, y: number, level: number, disabled: boolean) {\r\n\r\n        let onClick: () => void;\r\n\r\n        if (disabled) {\r\n            onClick = () => {\r\n\r\n            }\r\n        } else {\r\n            onClick = () => {\r\n                this.assetLoader.getLevel(level.toString()).subscribe(it => {\r\n                    this.game.loadLevel(it);\r\n                    this.started = true;\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        let buttonTexture: number;\r\n        if (disabled) {\r\n            buttonTexture = 187;\r\n        } else {\r\n            buttonTexture = 550;\r\n        }\r\n\r\n        return new Clickable(new Rectangle(100 + (x * 200), 100 + (y * 200), 200, 100), buttonTexture, buttonTexture, 188 + level, onClick);\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/sceneHandler.ts","export enum SceneIndex {\r\n    StartMenu = 1,\r\n    LoadMenu = 2,\r\n    LevelFinished = 3,\r\n    NewGameMenu = 4,\r\n    LevelSelection = 5,\r\n    RestartMenu = 6\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/sceneIndex.ts","import { RenderCall, Renderer } from '../render';\r\nimport { SceneHandler } from './sceneHandler';\r\nimport { Rectangle, Tile } from '../model';\r\nimport { RenderHelper } from '../render/renderHelper';\r\nimport { Scene } from './scene';\r\nimport { Clickable } from './clickable';\r\nimport { PowerSelector } from './powerSelector';\r\nimport { SceneIndex } from './sceneIndex';\r\nimport { LocalStorageHelper } from '../service/localStorageHelper'\r\n\r\nexport class Menu extends Scene {\r\n\r\n    constructor(\r\n        public clickables: Clickable[],\r\n        public text: Tile[],\r\n        protected sceneHandler: SceneHandler,\r\n        protected textArea: HTMLElement,\r\n        protected renderer: Renderer,\r\n        protected canvasSize: [number, number],\r\n        protected background: number,\r\n        protected tileSize: [number, number],\r\n        protected menu: boolean) {\r\n        super(sceneHandler, renderer, canvasSize, background, tileSize, menu);\r\n        this.createRenderCalls();\r\n    }\r\n\r\n    public update() {\r\n    }\r\n\r\n    public load() {\r\n\r\n        if(this.sceneHandler.currentScene == SceneIndex.StartMenu) {\r\n\r\n            if(LocalStorageHelper.getInstance().getProgression().length > 0) {\r\n                this.clickables[1].disabled = false;\r\n            } else {\r\n                this.clickables[1].disabled = true;\r\n            }\r\n        } \r\n    }\r\n\r\n    public render() {\r\n        let rendercall = new RenderCall();\r\n\r\n        for (let clickable of this.clickables) {\r\n            rendercall = clickable.createRenderCall(rendercall);\r\n        }\r\n\r\n        for(let t of this.text) {\r\n            rendercall.vertecies = this.renderHelper.getVertecies(t.x, t.y, t.width, t.height, rendercall.vertecies);\r\n            rendercall.indecies = this.renderHelper.getIndecies(rendercall.indecies);\r\n            rendercall.textureCoords = this.renderHelper.getTextureCoordinates(rendercall.textureCoords, t.key);\r\n        }\r\n\r\n        this.renderCalls.set(-1, rendercall);\r\n\r\n        this.renderer.render(this.renderCalls, [0, 0]);\r\n\r\n        super.render();\r\n    }\r\n\r\n    public click(mousePosition: [number, number]) {\r\n        for (let clickable of this.clickables) {\r\n            clickable.click(mousePosition);\r\n        }\r\n    }\r\n\r\n    public mouseOver(mousePosition: [number, number]) {\r\n        for (let clickable of this.clickables) {\r\n            clickable.mouseOver(mousePosition);\r\n        }\r\n    }\r\n\r\n    protected createRenderCalls() {\r\n        super.createRenderCalls();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/menu.ts","import { RenderCall, Renderer } from '../render';\r\nimport { SceneHandler } from './sceneHandler';\r\nimport { Rectangle } from '../model';\r\nimport { RenderHelper } from '../render/renderHelper';\r\nimport { Clickable } from './clickable';\r\nimport { SceneIndex } from './sceneIndex';\r\n\r\nexport class Scene {\r\n\r\n    protected renderCalls: Map<number, RenderCall> = new Map<number, RenderCall>();\r\n    protected renderHelper = RenderHelper.getInstance();\r\n\r\n    constructor(protected sceneHandler: SceneHandler, protected renderer: Renderer, protected canvasSize: [number, number], protected background: number, protected tileSize: [number, number], protected menu: boolean) {\r\n    }\r\n\r\n    public update() {\r\n    }\r\n\r\n    public render() {\r\n        this.renderCalls = new Map<number, RenderCall>();\r\n        this.createRenderCalls();\r\n    }\r\n\r\n    public load() {\r\n        \r\n    }\r\n\r\n    public click(mousePosition: [number, number]) {\r\n    }\r\n\r\n    public mouseOver(mousePosition: [number, number]) {\r\n    }\r\n\r\n    protected createRenderCalls() {\r\n        this.renderCalls = this.createBackGround(this.renderCalls);\r\n\r\n        if (this.menu) {\r\n            this.renderCalls = this.createMenu(this.renderCalls);\r\n        }\r\n    }\r\n\r\n    protected createMenu(renderCalls: Map<number, RenderCall>) {\r\n        let menu = new RenderCall();\r\n\r\n        menu.vertecies = this.renderHelper.getVertecies((this.canvasSize[0] / 2) - 256, 50, 512, 700, menu.vertecies);\r\n        menu.indecies = this.renderHelper.getIndecies(menu.indecies);\r\n        menu.textureCoords = this.renderHelper.getTiledTextureCoordinates(new Rectangle(0, 0, 288, 295), menu.textureCoords, [512, 512]);\r\n        menu.key = 101;\r\n\r\n        renderCalls.set(menu.key, menu);\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n    private createBackGround(renderCalls: Map<number, RenderCall>) {\r\n        let background = new RenderCall();\r\n\r\n        background.vertecies = this.renderHelper.getVertecies(0, 0, this.canvasSize[0], this.canvasSize[1], background.vertecies);\r\n        background.indecies = this.renderHelper.getIndecies(background.indecies);\r\n        background.textureCoords = this.renderHelper.getTiledTextureCoordinates(new Rectangle(0, 0, this.canvasSize[0], this.canvasSize[0]), background.textureCoords, this.tileSize);\r\n        background.key = this.background;\r\n\r\n        renderCalls.set(background.key, background);\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/scene.ts","import { Progress } from '../model';\r\n\r\nexport class LocalStorageHelper {\r\n    private static instance: LocalStorageHelper = new LocalStorageHelper();\r\n\r\n    constrcuctor() {\r\n        if (LocalStorageHelper.instance) {\r\n            throw new Error('Static class cant be instanced!');\r\n        }\r\n\r\n        LocalStorageHelper.instance = this;\r\n    }\r\n\r\n    public static getInstance() {\r\n        return LocalStorageHelper.instance;\r\n    }\r\n\r\n    public progressionKey = \"progression\";\r\n\r\n    public newPlayer(name: string) {\r\n\r\n        let progression = this.getProgression();\r\n\r\n        for(let p of progression){\r\n            p.active = false;\r\n            this.saveProgress(p);\r\n        }\r\n\r\n        let progress = new Progress();\r\n        progress.playerName = name;\r\n        progress.active = true;\r\n        progress.completedLevels = 0;\r\n        progress.level = 1;\r\n        progress.fire = 0;\r\n        progress.frost = 0;\r\n        progress.defence = 0;\r\n        progress.hp = 0;\r\n        progress.mana = 0;\r\n\r\n        this.saveProgress(progress);\r\n    }\r\n\r\n    public setPowers(fire: number, frost: number, defence: number) {\r\n        let progress = this.getCurrentProgress();\r\n\r\n        progress.fire = fire;\r\n        progress.frost = frost;\r\n        progress.defence = defence;\r\n\r\n        this.saveProgress(progress);\r\n    }\r\n\r\n    public setCurrentProgress(level: number) {\r\n        let progress = this.getCurrentProgress();\r\n        progress.level++;\r\n        if (progress.completedLevels < level) {\r\n            progress.completedLevels = level;\r\n        }\r\n\r\n        this.saveProgress(progress);\r\n    }\r\n\r\n    public getProgression() {\r\n\r\n        let progression = this.getItem(this.progressionKey) as Progress[]\r\n\r\n        if(progression == null) {\r\n            progression = [];\r\n        }\r\n\r\n        return progression;\r\n    }\r\n\r\n    public getCurrentProgress() {\r\n        let progression = this.getItem(this.progressionKey) as Progress[];\r\n\r\n        if (!progression) {\r\n            progression = [this.defaultProgress()] as Progress[];\r\n        }\r\n\r\n        return progression.find(it => it.active == true);\r\n    }\r\n\r\n    public saveProgress(progress: Progress) {\r\n\r\n        let progression = this.getItem(this.progressionKey) as Progress[];\r\n\r\n        if (!progression) {\r\n            progression = [];\r\n        }\r\n\r\n        let prg = progression.find(it => it.playerName == progress.playerName);\r\n\r\n        if (prg) {\r\n            let index = progression.indexOf(prg);\r\n            if (index != -1) {\r\n                progression.splice(index, 1);\r\n            }\r\n\r\n            progression.push(progress);\r\n        } else {\r\n            progression.push(progress);\r\n        }\r\n\r\n        this.setItem(this.progressionKey, progression);\r\n\r\n    }\r\n\r\n    public setActive(name: string) {\r\n        let progression = this.getProgression();\r\n\r\n        for(let progress of progression) {\r\n            if(progress.playerName == name) {\r\n                progress.active = true;\r\n            } else {\r\n                progress.active = false;\r\n            }\r\n\r\n            this.saveProgress(progress);\r\n        }\r\n\r\n    }\r\n\r\n    private defaultProgress() {\r\n        let progress = new Progress();\r\n        progress.playerName = \"nouser\";\r\n        progress.active = true;\r\n        progress.completedLevels = 0;\r\n        progress.level = 1;\r\n        progress.fire = 0;\r\n        progress.frost = 0;\r\n        progress.defence = 0;\r\n        progress.hp = 0;\r\n        progress.mana = 0;\r\n\r\n        return progress;\r\n    }\r\n\r\n    private getItem(key: string) {\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n\r\n    private setItem(key: string, value: any) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/service/localStorageHelper.ts","import { RenderCall, Renderer, RenderHelper } from '../render';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { Rectangle } from '../model';\r\n\r\nexport class Clickable {\r\n\r\n    public disabled = false;\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n    private hover = false;\r\n\r\n    private baseTextureCoords: number[];\r\n    private hoverTextureCoords: number[];\r\n    private textTextureCoords: number[];\r\n    private disabledTextureCoords: number[];\r\n     \r\n\r\n    constructor(private area: Rectangle, private buttonTexture: number, private hoverTexture: number, private textTexture: number, private onClick: () => void, private disabledTexture?: number) {\r\n        this.baseTextureCoords = this.renderHelper.getTextureCoordinates([], buttonTexture);\r\n        this.hoverTextureCoords = this.renderHelper.getTextureCoordinates([], hoverTexture);\r\n        this.textTextureCoords = this.renderHelper.getTextureCoordinates([], textTexture);\r\n\r\n        if(disabledTexture != null) {\r\n            this.disabledTextureCoords = this.renderHelper.getTextureCoordinates([], disabledTexture);\r\n        }\r\n    }\r\n\r\n    public click(mouseposition: [number, number]) {\r\n        if(this.isWithinArea(mouseposition)) {\r\n            if(!this.disabled) {\r\n                this.onClick();\r\n            }\r\n        };\r\n    }\r\n\r\n    public mouseOver(mouseposition: [number, number]) {\r\n        if(this.isWithinArea(mouseposition)) {\r\n            this.hover = true;\r\n        } else {\r\n            this.hover = false;\r\n        }\r\n    }\r\n\r\n    public createRenderCall(renderCall: RenderCall) {\r\n\r\n        renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.getTexture());\r\n\r\n        renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n        renderCall.textureCoords.push.apply(renderCall.textureCoords, this.textTextureCoords);\r\n\r\n        return renderCall;\r\n    }\r\n\r\n    private isWithinArea(mouseposition: [number, number]) {\r\n        return this.collisionDetection.aabbCheck(new Rectangle(mouseposition[0], mouseposition[1], 1, 1), this.area);\r\n    }\r\n\r\n    private getTexture() {\r\n        if(this.disabled && this.disabledTexture != null) {\r\n            return this.disabledTextureCoords;\r\n        }\r\n        if(this.hover) {\r\n            return this.hoverTextureCoords;\r\n        } else {\r\n            return this.baseTextureCoords;\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/clickable.ts","import { RenderCall, Renderer, RenderHelper } from '../render';\r\nimport { Rectangle } from '../model';\r\nimport { Active } from './active';\r\n\r\nexport class PowerSelector {\r\n\r\n    private renderHelper = RenderHelper.getInstance();\r\n\r\n    constructor(public actives: [Active, Active, Active]) {\r\n    }\r\n\r\n    public render(renderCalls: Map<number, RenderCall>) {\r\n        for (let active of this.actives) {\r\n            let tempRenderCalls = active.createRenderCall(renderCalls);\r\n        }\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n    public click(mouseposition: [number, number]) {\r\n        for (let active of this.actives) {\r\n            if(!this.actives[0].active) {\r\n                this.actives[0].click(mouseposition);\r\n                break;\r\n            } else if(!this.actives[1].active) {\r\n                this.actives[1].click(mouseposition);\r\n                break;\r\n            } else if(!this.actives[2].active) {\r\n                this.actives[2].click(mouseposition);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getPoints() {\r\n        return this.actives[0].value + this.actives[1].value + this.actives[2].value;\r\n    }\r\n\r\n    public fill(points: number) {\r\n\r\n        let active1 = this.actives[0];\r\n        let active2 = this.actives[1];\r\n        let active3 = this.actives[2];\r\n\r\n        active1.reset();\r\n        active2.reset();\r\n        active3.reset();\r\n\r\n        for(let i = 0; i < points; i++) {\r\n            \r\n            if(!active1.active) {\r\n                active1.addPoint();\r\n            } else if(!active2.active) {\r\n                active2.addPoint();\r\n            } else if(!active3.active) {\r\n                active3.addPoint();\r\n            }\r\n            \r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/powerSelector.ts","import { RenderCall, Renderer, RenderHelper } from '../render';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\nimport { Rectangle } from '../model';\r\n\r\nexport class Active {\r\n\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n\r\n    constructor(public value: number,\r\n        public maxValue: number,\r\n        public active: boolean,\r\n        private area: Rectangle,\r\n        private asset: number,\r\n        private activeAsset: number,\r\n        private size: [number, number]) {\r\n    }\r\n\r\n    public createRenderCall(renderCalls: Map<number, RenderCall>) {\r\n\r\n        renderCalls = this.addRenderCall(renderCalls, this.asset, false);\r\n        renderCalls = this.addRenderCall(renderCalls, this.activeAsset, true);\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n    public click(mouseposition: [number, number]) {\r\n        if (this.isWithinArea(mouseposition)) {\r\n            this.addPoint();\r\n        };\r\n    }\r\n\r\n    public addPoint() {\r\n        this.value++;\r\n        if (this.value == this.maxValue) {\r\n            this.active = true;\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.value = 0;\r\n        this.active = false;\r\n    }\r\n\r\n    private addRenderCall(renderCalls: Map<number, RenderCall>, asset: number, partial: boolean) {\r\n        let renderCall: RenderCall;\r\n\r\n        if (renderCalls.has(asset)) {\r\n            renderCall = renderCalls.get(asset);\r\n        } else {\r\n            renderCall = new RenderCall();\r\n        }\r\n\r\n        if (partial) {\r\n            let area = new Rectangle(this.area.x, this.area.y, this.area.width, this.area.height * (this.value / this.maxValue));\r\n            renderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(area, renderCall.textureCoords, this.size);\r\n            renderCall.vertecies = this.renderHelper.getVertecies(area.x, area.y, area.width, area.height, renderCall.vertecies);\r\n        } else {\r\n            renderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(this.area, renderCall.textureCoords, this.size);\r\n            renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n        }\r\n\r\n        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n\r\n        renderCalls.set(asset, renderCall);\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n\r\n    private isWithinArea(mouseposition: [number, number]) {\r\n        return this.collisionDetection.aabbCheck(new Rectangle(mouseposition[0], mouseposition[1], 1, 1), this.area);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/active.ts","import { Menu } from './menu';\r\nimport { RenderCall, Renderer } from '../render';\r\nimport { LocalStorageHelper } from '../service/localStorageHelper';\r\nimport { SceneHandler } from './sceneHandler';\r\nimport { Rectangle } from '../model';\r\nimport { RenderHelper } from '../render/renderHelper';\r\nimport { Scene } from './scene';\r\nimport { Clickable } from './clickable';\r\nimport { PowerSelector } from './powerSelector';\r\nimport { SceneIndex } from './sceneIndex';\r\nimport { Progress, Tile } from '../model';\r\nimport { SimpleClickable } from './simpleClickable';\r\n\r\nexport class PowerSelectionMenu extends Menu {\r\n\r\n    private localStorageHelper = LocalStorageHelper.getInstance();\r\n    private progress: Progress;\r\n    private simpleClickables: [SimpleClickable, SimpleClickable];\r\n\r\n    constructor(protected sceneHandler: SceneHandler,\r\n        protected textArea: HTMLElement,\r\n        protected renderer: Renderer,\r\n        protected canvasSize: [number, number],\r\n        protected background: number,\r\n        protected tileSize: [number, number],\r\n        protected menu: boolean,\r\n        public clickables: Clickable[],\r\n        public text: Tile[],\r\n        private powerSelectors: [PowerSelector, PowerSelector, PowerSelector]) {\r\n        super(clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu);\r\n        this.load();\r\n        this.textArea.style.visibility = \"hidden\";\r\n    }\r\n\r\n    public render() {\r\n\r\n        for (let powerSelector of this.powerSelectors) {\r\n            this.renderCalls = powerSelector.render(this.renderCalls);\r\n        }\r\n\r\n        for (let simpleClickable of this.simpleClickables) {\r\n            this.renderCalls = simpleClickable.createRenderCall(this.renderCalls);\r\n        }\r\n\r\n        super.render();\r\n    }\r\n\r\n    public click(mousePosition: [number, number]) {\r\n        super.click(mousePosition);\r\n\r\n        for (let powerSelector of this.powerSelectors) {\r\n            if (this.getAvailablePoints() > 0) {\r\n                powerSelector.click(mousePosition);\r\n            }\r\n        }\r\n\r\n        for (let simpleClickable of this.simpleClickables) {\r\n            if (this.getAvailablePoints() > 0) {\r\n                simpleClickable.click(mousePosition);\r\n            }\r\n        }\r\n\r\n        this.progress.fire = this.powerSelectors[0].getPoints();\r\n        this.progress.frost = this.powerSelectors[1].getPoints();\r\n        this.progress.defence = this.powerSelectors[2].getPoints();\r\n\r\n        this.textArea.innerHTML = \"Skillpoints:\" + this.getAvailablePoints();\r\n\r\n        this.localStorageHelper.saveProgress(this.progress);\r\n    }\r\n\r\n    public load() {\r\n        this.progress = this.localStorageHelper.getCurrentProgress();\r\n\r\n        let onHpClick = () => {\r\n            this.progress.hp++;\r\n        }\r\n\r\n        let hpClickable = new SimpleClickable(new Rectangle(750, 100, 100, 100), 120, [100, 100], onHpClick);\r\n\r\n        let onManaClick = () => {\r\n            this.progress.mana++;\r\n        }\r\n\r\n        let manaClickable = new SimpleClickable(new Rectangle(950, 100, 100, 100), 121, [256, 256], onManaClick);\r\n\r\n        this.simpleClickables = [hpClickable, manaClickable];\r\n\r\n        this.powerSelectors[0].fill(this.progress.fire);\r\n        this.powerSelectors[1].fill(this.progress.frost);\r\n        this.powerSelectors[2].fill(this.progress.defence);\r\n\r\n        this.textArea.style.visibility = \"visible\";\r\n        this.textArea.innerHTML = \"Skillpoints:\" + this.getAvailablePoints();\r\n\r\n\r\n    }\r\n\r\n    private getAvailablePoints() {\r\n        return (this.progress.level - (this.progress.fire + this.progress.frost + this.progress.defence + this.progress.hp + this.progress.mana));\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/powerSelectionMenu.ts","import { Rectangle } from '../model';\r\nimport { RenderCall, RenderHelper } from '../render';\r\nimport { CollisionDetection } from '../collision/collisionDetection';\r\n\r\nexport class SimpleClickable {\r\n\r\n    private renderHelper = RenderHelper.getInstance();\r\n    private collisionDetection = CollisionDetection.getInstance();\r\n\r\n    constructor(private area: Rectangle, private textureKey: number, private size: [number, number], private onClick: () => void) {\r\n    }\r\n\r\n    public click(mouseposition: [number, number]) {\r\n        if (this.isWithinArea(mouseposition)) {\r\n            this.onClick();\r\n        };\r\n    }\r\n\r\n    public createRenderCall(renderCalls: Map<number, RenderCall>) {\r\n\r\n        let renderCall: RenderCall;\r\n\r\n        if (renderCalls.has(this.textureKey)) {\r\n            renderCall = renderCalls.get(this.textureKey);\r\n        } else {\r\n            renderCall = new RenderCall();\r\n        }\r\n\r\n        renderCall.textureCoords = this.renderHelper.getTiledTextureCoordinates(this.area, renderCall.textureCoords, this.size);\r\n        renderCall.vertecies = this.renderHelper.getVertecies(this.area.x, this.area.y, this.area.width, this.area.height, renderCall.vertecies);\r\n        renderCall.indecies = this.renderHelper.getIndecies(renderCall.indecies);\r\n\r\n\r\n        renderCalls.set(this.textureKey, renderCall);\r\n\r\n        return renderCalls;\r\n    }\r\n\r\n    private isWithinArea(mouseposition: [number, number]) {\r\n        return this.collisionDetection.aabbCheck(new Rectangle(mouseposition[0], mouseposition[1], 1, 1), this.area);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/simpleClickable.ts","import { Rectangle, Tile } from '../model';\r\nimport { Menu } from \"./menu\";\r\nimport { Clickable } from \"./clickable\";\r\nimport { SceneHandler } from \"./sceneHandler\";\r\nimport { Renderer } from \"../index\";\r\nimport { RenderCall } from \"../render/index\";\r\nimport { SceneIndex } from \"./sceneIndex\";\r\nimport { LocalStorageHelper } from \"../service/localStorageHelper\";\r\n\r\nexport class NewGameMenu extends Menu {\r\n\r\n    constructor(\r\n        public clickables: Clickable[],\r\n        public text: Tile[],\r\n        protected sceneHandler: SceneHandler,\r\n        protected textArea: HTMLElement,\r\n        protected renderer: Renderer,\r\n        protected canvasSize: [number, number],\r\n        protected background: number,\r\n        protected tileSize: [number, number],\r\n        protected menu: boolean,\r\n        private textInput: HTMLInputElement,\r\n        private playerlist: HTMLElement) {\r\n        super(clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu);\r\n\r\n        this.text.push(new Tile(75, 70, 200, 33, 557));\r\n\r\n        let onClick = () => {\r\n            let name = this.textInput.value;\r\n            if (name.length > 0) {\r\n                LocalStorageHelper.getInstance().newPlayer(name);\r\n                this.checkProgressionExists();\r\n                this.reDrawPlayerList();\r\n            }\r\n        }\r\n\r\n        clickables.push(new Clickable(new Rectangle(150, 150, 200, 33), 179, 181, 555, onClick));\r\n\r\n    }\r\n\r\n    public load() {\r\n        this.textInput.style.visibility = \"visible\";\r\n        this.playerlist.style.visibility = \"visible\";\r\n\r\n        this.reDrawPlayerList();\r\n\r\n        this.checkProgressionExists();\r\n    }\r\n\r\n    private reDrawPlayerList() {\r\n        while (this.playerlist.firstChild) {\r\n            this.playerlist.removeChild(this.playerlist.firstChild);\r\n        }\r\n\r\n        this.playerlist.children\r\n        let progression = LocalStorageHelper.getInstance().getProgression();\r\n\r\n        for (let progress of progression) {\r\n            let item = document.createElement(\"div\");\r\n            item.style.setProperty(\"color\", \"#ac9478\", \"important\");\r\n            item.style.textShadow = \"-2px 0 #5d392c, 0 2px #5d392c, 2px 0 #5d392c, 0 -2px #5d392c\";\r\n            item.style.padding = \"5px\";\r\n\r\n            item.innerHTML = progress.playerName;\r\n\r\n            if (progress.active) {\r\n                item.innerHTML = \"➣ \" + item.innerHTML;\r\n            }\r\n\r\n            item.onclick = () => {\r\n                LocalStorageHelper.getInstance().setActive(progress.playerName);\r\n                this.reDrawPlayerList();\r\n            }\r\n\r\n            this.playerlist.appendChild(item);\r\n        }\r\n    }\r\n\r\n    private checkProgressionExists() {\r\n        if (LocalStorageHelper.getInstance().getProgression().length > 0) {\r\n            this.clickables[1].disabled = false;\r\n        } else {\r\n            this.clickables[1].disabled = true;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/newGameMenu.ts","import { Rectangle, Tile } from '../model';\r\nimport { Menu } from \"./menu\";\r\nimport { Clickable } from \"./clickable\";\r\nimport { SceneHandler } from \"./sceneHandler\";\r\nimport { Renderer } from \"../index\";\r\nimport { RenderCall } from \"../render/index\";\r\nimport { SceneIndex } from \"./sceneIndex\";\r\nimport { LocalStorageHelper } from \"../service/localStorageHelper\";\r\nimport { AssetsLoader } from '../service/assetsLoader';\r\nimport { Game } from \"../game\";\r\nimport { LevelData } from \"../map/model/index\";\r\n\r\nexport class RestartMenu extends Menu {\r\n\r\n    public currentLevel = 0;\r\n    public tempLevel: LevelData;\r\n    private assetLoader = new AssetsLoader();\r\n\r\n    constructor(\r\n        public clickables: Clickable[],\r\n        public text: Tile[],\r\n        protected sceneHandler: SceneHandler,\r\n        protected textArea: HTMLElement,\r\n        protected renderer: Renderer,\r\n        protected canvasSize: [number, number],\r\n        protected background: number,\r\n        protected tileSize: [number, number],\r\n        protected menu: boolean,\r\n        private game: Game) {\r\n        super(clickables, text, sceneHandler, textArea, renderer, canvasSize, background, tileSize, menu);\r\n\r\n        this.load();\r\n    }\r\n\r\n    public load() {\r\n        this.clickables[1] = new Clickable(new Rectangle(this.canvasSize[0] / 2 + 200, 650, 250, 42), 179, 181, 558, this.getClickCall());\r\n    }\r\n\r\n    private getClickCall() {\r\n        return () => {\r\n            if (this.tempLevel != null) {\r\n                this.game.loadLevel(this.tempLevel);\r\n                this.sceneHandler.started = true;\r\n            } else {\r\n                this.assetLoader.getLevel(this.currentLevel.toString()).subscribe(it => {\r\n                    this.game.loadLevel(it);\r\n                    this.sceneHandler.started = true;\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/UI/restartMenu.ts"],"sourceRoot":""}